// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module SgdLR_READ_TRAINING_DATA_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        trunc_ln204_dout,
        trunc_ln204_empty_n,
        trunc_ln204_read,
        data_dout,
        data_empty_n,
        data_read,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        training_instance_V_0_address0,
        training_instance_V_0_ce0,
        training_instance_V_0_we0,
        training_instance_V_0_d0,
        training_instance_V_1_address0,
        training_instance_V_1_ce0,
        training_instance_V_1_we0,
        training_instance_V_1_d0,
        training_instance_V_10_address0,
        training_instance_V_10_ce0,
        training_instance_V_10_we0,
        training_instance_V_10_d0,
        training_instance_V_11_address0,
        training_instance_V_11_ce0,
        training_instance_V_11_we0,
        training_instance_V_11_d0,
        training_instance_V_12_address0,
        training_instance_V_12_ce0,
        training_instance_V_12_we0,
        training_instance_V_12_d0,
        training_instance_V_13_address0,
        training_instance_V_13_ce0,
        training_instance_V_13_we0,
        training_instance_V_13_d0,
        training_instance_V_14_address0,
        training_instance_V_14_ce0,
        training_instance_V_14_we0,
        training_instance_V_14_d0,
        training_instance_V_15_address0,
        training_instance_V_15_ce0,
        training_instance_V_15_we0,
        training_instance_V_15_d0,
        training_instance_V_16_address0,
        training_instance_V_16_ce0,
        training_instance_V_16_we0,
        training_instance_V_16_d0,
        training_instance_V_17_address0,
        training_instance_V_17_ce0,
        training_instance_V_17_we0,
        training_instance_V_17_d0,
        training_instance_V_18_address0,
        training_instance_V_18_ce0,
        training_instance_V_18_we0,
        training_instance_V_18_d0,
        training_instance_V_19_address0,
        training_instance_V_19_ce0,
        training_instance_V_19_we0,
        training_instance_V_19_d0,
        training_instance_V_2_address0,
        training_instance_V_2_ce0,
        training_instance_V_2_we0,
        training_instance_V_2_d0,
        training_instance_V_20_address0,
        training_instance_V_20_ce0,
        training_instance_V_20_we0,
        training_instance_V_20_d0,
        training_instance_V_21_address0,
        training_instance_V_21_ce0,
        training_instance_V_21_we0,
        training_instance_V_21_d0,
        training_instance_V_22_address0,
        training_instance_V_22_ce0,
        training_instance_V_22_we0,
        training_instance_V_22_d0,
        training_instance_V_23_address0,
        training_instance_V_23_ce0,
        training_instance_V_23_we0,
        training_instance_V_23_d0,
        training_instance_V_24_address0,
        training_instance_V_24_ce0,
        training_instance_V_24_we0,
        training_instance_V_24_d0,
        training_instance_V_25_address0,
        training_instance_V_25_ce0,
        training_instance_V_25_we0,
        training_instance_V_25_d0,
        training_instance_V_26_address0,
        training_instance_V_26_ce0,
        training_instance_V_26_we0,
        training_instance_V_26_d0,
        training_instance_V_27_address0,
        training_instance_V_27_ce0,
        training_instance_V_27_we0,
        training_instance_V_27_d0,
        training_instance_V_28_address0,
        training_instance_V_28_ce0,
        training_instance_V_28_we0,
        training_instance_V_28_d0,
        training_instance_V_29_address0,
        training_instance_V_29_ce0,
        training_instance_V_29_we0,
        training_instance_V_29_d0,
        training_instance_V_3_address0,
        training_instance_V_3_ce0,
        training_instance_V_3_we0,
        training_instance_V_3_d0,
        training_instance_V_30_address0,
        training_instance_V_30_ce0,
        training_instance_V_30_we0,
        training_instance_V_30_d0,
        training_instance_V_31_address0,
        training_instance_V_31_ce0,
        training_instance_V_31_we0,
        training_instance_V_31_d0,
        training_instance_V_4_address0,
        training_instance_V_4_ce0,
        training_instance_V_4_we0,
        training_instance_V_4_d0,
        training_instance_V_5_address0,
        training_instance_V_5_ce0,
        training_instance_V_5_we0,
        training_instance_V_5_d0,
        training_instance_V_6_address0,
        training_instance_V_6_ce0,
        training_instance_V_6_we0,
        training_instance_V_6_d0,
        training_instance_V_7_address0,
        training_instance_V_7_ce0,
        training_instance_V_7_we0,
        training_instance_V_7_d0,
        training_instance_V_8_address0,
        training_instance_V_8_ce0,
        training_instance_V_8_we0,
        training_instance_V_8_d0,
        training_instance_V_9_address0,
        training_instance_V_9_ce0,
        training_instance_V_9_we0,
        training_instance_V_9_d0
);

parameter    ap_ST_fsm_state1 = 73'd1;
parameter    ap_ST_fsm_state2 = 73'd2;
parameter    ap_ST_fsm_state3 = 73'd4;
parameter    ap_ST_fsm_state4 = 73'd8;
parameter    ap_ST_fsm_state5 = 73'd16;
parameter    ap_ST_fsm_state6 = 73'd32;
parameter    ap_ST_fsm_state7 = 73'd64;
parameter    ap_ST_fsm_state8 = 73'd128;
parameter    ap_ST_fsm_state9 = 73'd256;
parameter    ap_ST_fsm_state10 = 73'd512;
parameter    ap_ST_fsm_state11 = 73'd1024;
parameter    ap_ST_fsm_state12 = 73'd2048;
parameter    ap_ST_fsm_state13 = 73'd4096;
parameter    ap_ST_fsm_state14 = 73'd8192;
parameter    ap_ST_fsm_state15 = 73'd16384;
parameter    ap_ST_fsm_state16 = 73'd32768;
parameter    ap_ST_fsm_state17 = 73'd65536;
parameter    ap_ST_fsm_state18 = 73'd131072;
parameter    ap_ST_fsm_state19 = 73'd262144;
parameter    ap_ST_fsm_state20 = 73'd524288;
parameter    ap_ST_fsm_state21 = 73'd1048576;
parameter    ap_ST_fsm_state22 = 73'd2097152;
parameter    ap_ST_fsm_state23 = 73'd4194304;
parameter    ap_ST_fsm_state24 = 73'd8388608;
parameter    ap_ST_fsm_state25 = 73'd16777216;
parameter    ap_ST_fsm_state26 = 73'd33554432;
parameter    ap_ST_fsm_state27 = 73'd67108864;
parameter    ap_ST_fsm_state28 = 73'd134217728;
parameter    ap_ST_fsm_state29 = 73'd268435456;
parameter    ap_ST_fsm_state30 = 73'd536870912;
parameter    ap_ST_fsm_state31 = 73'd1073741824;
parameter    ap_ST_fsm_state32 = 73'd2147483648;
parameter    ap_ST_fsm_state33 = 73'd4294967296;
parameter    ap_ST_fsm_state34 = 73'd8589934592;
parameter    ap_ST_fsm_state35 = 73'd17179869184;
parameter    ap_ST_fsm_state36 = 73'd34359738368;
parameter    ap_ST_fsm_state37 = 73'd68719476736;
parameter    ap_ST_fsm_state38 = 73'd137438953472;
parameter    ap_ST_fsm_state39 = 73'd274877906944;
parameter    ap_ST_fsm_state40 = 73'd549755813888;
parameter    ap_ST_fsm_state41 = 73'd1099511627776;
parameter    ap_ST_fsm_state42 = 73'd2199023255552;
parameter    ap_ST_fsm_state43 = 73'd4398046511104;
parameter    ap_ST_fsm_state44 = 73'd8796093022208;
parameter    ap_ST_fsm_state45 = 73'd17592186044416;
parameter    ap_ST_fsm_state46 = 73'd35184372088832;
parameter    ap_ST_fsm_state47 = 73'd70368744177664;
parameter    ap_ST_fsm_state48 = 73'd140737488355328;
parameter    ap_ST_fsm_state49 = 73'd281474976710656;
parameter    ap_ST_fsm_state50 = 73'd562949953421312;
parameter    ap_ST_fsm_state51 = 73'd1125899906842624;
parameter    ap_ST_fsm_state52 = 73'd2251799813685248;
parameter    ap_ST_fsm_state53 = 73'd4503599627370496;
parameter    ap_ST_fsm_state54 = 73'd9007199254740992;
parameter    ap_ST_fsm_state55 = 73'd18014398509481984;
parameter    ap_ST_fsm_state56 = 73'd36028797018963968;
parameter    ap_ST_fsm_state57 = 73'd72057594037927936;
parameter    ap_ST_fsm_state58 = 73'd144115188075855872;
parameter    ap_ST_fsm_state59 = 73'd288230376151711744;
parameter    ap_ST_fsm_state60 = 73'd576460752303423488;
parameter    ap_ST_fsm_state61 = 73'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 73'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 73'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 73'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 73'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 73'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 73'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 73'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 73'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 73'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 73'd1180591620717411303424;
parameter    ap_ST_fsm_pp0_stage0 = 73'd2361183241434822606848;
parameter    ap_ST_fsm_state75 = 73'd4722366482869645213696;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [12:0] trunc_ln204_dout;
input   trunc_ln204_empty_n;
output   trunc_ln204_read;
input  [63:0] data_dout;
input   data_empty_n;
output   data_read;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
output  [4:0] training_instance_V_0_address0;
output   training_instance_V_0_ce0;
output   training_instance_V_0_we0;
output  [15:0] training_instance_V_0_d0;
output  [4:0] training_instance_V_1_address0;
output   training_instance_V_1_ce0;
output   training_instance_V_1_we0;
output  [15:0] training_instance_V_1_d0;
output  [4:0] training_instance_V_10_address0;
output   training_instance_V_10_ce0;
output   training_instance_V_10_we0;
output  [15:0] training_instance_V_10_d0;
output  [4:0] training_instance_V_11_address0;
output   training_instance_V_11_ce0;
output   training_instance_V_11_we0;
output  [15:0] training_instance_V_11_d0;
output  [4:0] training_instance_V_12_address0;
output   training_instance_V_12_ce0;
output   training_instance_V_12_we0;
output  [15:0] training_instance_V_12_d0;
output  [4:0] training_instance_V_13_address0;
output   training_instance_V_13_ce0;
output   training_instance_V_13_we0;
output  [15:0] training_instance_V_13_d0;
output  [4:0] training_instance_V_14_address0;
output   training_instance_V_14_ce0;
output   training_instance_V_14_we0;
output  [15:0] training_instance_V_14_d0;
output  [4:0] training_instance_V_15_address0;
output   training_instance_V_15_ce0;
output   training_instance_V_15_we0;
output  [15:0] training_instance_V_15_d0;
output  [4:0] training_instance_V_16_address0;
output   training_instance_V_16_ce0;
output   training_instance_V_16_we0;
output  [15:0] training_instance_V_16_d0;
output  [4:0] training_instance_V_17_address0;
output   training_instance_V_17_ce0;
output   training_instance_V_17_we0;
output  [15:0] training_instance_V_17_d0;
output  [4:0] training_instance_V_18_address0;
output   training_instance_V_18_ce0;
output   training_instance_V_18_we0;
output  [15:0] training_instance_V_18_d0;
output  [4:0] training_instance_V_19_address0;
output   training_instance_V_19_ce0;
output   training_instance_V_19_we0;
output  [15:0] training_instance_V_19_d0;
output  [4:0] training_instance_V_2_address0;
output   training_instance_V_2_ce0;
output   training_instance_V_2_we0;
output  [15:0] training_instance_V_2_d0;
output  [4:0] training_instance_V_20_address0;
output   training_instance_V_20_ce0;
output   training_instance_V_20_we0;
output  [15:0] training_instance_V_20_d0;
output  [4:0] training_instance_V_21_address0;
output   training_instance_V_21_ce0;
output   training_instance_V_21_we0;
output  [15:0] training_instance_V_21_d0;
output  [4:0] training_instance_V_22_address0;
output   training_instance_V_22_ce0;
output   training_instance_V_22_we0;
output  [15:0] training_instance_V_22_d0;
output  [4:0] training_instance_V_23_address0;
output   training_instance_V_23_ce0;
output   training_instance_V_23_we0;
output  [15:0] training_instance_V_23_d0;
output  [4:0] training_instance_V_24_address0;
output   training_instance_V_24_ce0;
output   training_instance_V_24_we0;
output  [15:0] training_instance_V_24_d0;
output  [4:0] training_instance_V_25_address0;
output   training_instance_V_25_ce0;
output   training_instance_V_25_we0;
output  [15:0] training_instance_V_25_d0;
output  [4:0] training_instance_V_26_address0;
output   training_instance_V_26_ce0;
output   training_instance_V_26_we0;
output  [15:0] training_instance_V_26_d0;
output  [4:0] training_instance_V_27_address0;
output   training_instance_V_27_ce0;
output   training_instance_V_27_we0;
output  [15:0] training_instance_V_27_d0;
output  [4:0] training_instance_V_28_address0;
output   training_instance_V_28_ce0;
output   training_instance_V_28_we0;
output  [15:0] training_instance_V_28_d0;
output  [4:0] training_instance_V_29_address0;
output   training_instance_V_29_ce0;
output   training_instance_V_29_we0;
output  [15:0] training_instance_V_29_d0;
output  [4:0] training_instance_V_3_address0;
output   training_instance_V_3_ce0;
output   training_instance_V_3_we0;
output  [15:0] training_instance_V_3_d0;
output  [4:0] training_instance_V_30_address0;
output   training_instance_V_30_ce0;
output   training_instance_V_30_we0;
output  [15:0] training_instance_V_30_d0;
output  [4:0] training_instance_V_31_address0;
output   training_instance_V_31_ce0;
output   training_instance_V_31_we0;
output  [15:0] training_instance_V_31_d0;
output  [4:0] training_instance_V_4_address0;
output   training_instance_V_4_ce0;
output   training_instance_V_4_we0;
output  [15:0] training_instance_V_4_d0;
output  [4:0] training_instance_V_5_address0;
output   training_instance_V_5_ce0;
output   training_instance_V_5_we0;
output  [15:0] training_instance_V_5_d0;
output  [4:0] training_instance_V_6_address0;
output   training_instance_V_6_ce0;
output   training_instance_V_6_we0;
output  [15:0] training_instance_V_6_d0;
output  [4:0] training_instance_V_7_address0;
output   training_instance_V_7_ce0;
output   training_instance_V_7_we0;
output  [15:0] training_instance_V_7_d0;
output  [4:0] training_instance_V_8_address0;
output   training_instance_V_8_ce0;
output   training_instance_V_8_we0;
output  [15:0] training_instance_V_8_d0;
output  [4:0] training_instance_V_9_address0;
output   training_instance_V_9_ce0;
output   training_instance_V_9_we0;
output  [15:0] training_instance_V_9_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg trunc_ln204_read;
reg data_read;
reg m_axi_gmem_ARVALID;
reg m_axi_gmem_RREADY;
reg training_instance_V_0_ce0;
reg training_instance_V_0_we0;
reg training_instance_V_1_ce0;
reg training_instance_V_1_we0;
reg training_instance_V_10_ce0;
reg training_instance_V_10_we0;
reg training_instance_V_11_ce0;
reg training_instance_V_11_we0;
reg training_instance_V_12_ce0;
reg training_instance_V_12_we0;
reg training_instance_V_13_ce0;
reg training_instance_V_13_we0;
reg training_instance_V_14_ce0;
reg training_instance_V_14_we0;
reg training_instance_V_15_ce0;
reg training_instance_V_15_we0;
reg training_instance_V_16_ce0;
reg training_instance_V_16_we0;
reg training_instance_V_17_ce0;
reg training_instance_V_17_we0;
reg training_instance_V_18_ce0;
reg training_instance_V_18_we0;
reg training_instance_V_19_ce0;
reg training_instance_V_19_we0;
reg training_instance_V_2_ce0;
reg training_instance_V_2_we0;
reg training_instance_V_20_ce0;
reg training_instance_V_20_we0;
reg training_instance_V_21_ce0;
reg training_instance_V_21_we0;
reg training_instance_V_22_ce0;
reg training_instance_V_22_we0;
reg training_instance_V_23_ce0;
reg training_instance_V_23_we0;
reg training_instance_V_24_ce0;
reg training_instance_V_24_we0;
reg training_instance_V_25_ce0;
reg training_instance_V_25_we0;
reg training_instance_V_26_ce0;
reg training_instance_V_26_we0;
reg training_instance_V_27_ce0;
reg training_instance_V_27_we0;
reg training_instance_V_28_ce0;
reg training_instance_V_28_we0;
reg training_instance_V_29_ce0;
reg training_instance_V_29_we0;
reg training_instance_V_3_ce0;
reg training_instance_V_3_we0;
reg training_instance_V_30_ce0;
reg training_instance_V_30_we0;
reg training_instance_V_31_ce0;
reg training_instance_V_31_we0;
reg training_instance_V_4_ce0;
reg training_instance_V_4_we0;
reg training_instance_V_5_ce0;
reg training_instance_V_5_we0;
reg training_instance_V_6_ce0;
reg training_instance_V_6_we0;
reg training_instance_V_7_ce0;
reg training_instance_V_7_we0;
reg training_instance_V_8_ce0;
reg training_instance_V_8_we0;
reg training_instance_V_9_ce0;
reg training_instance_V_9_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [72:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    trunc_ln204_blk_n;
reg    data_blk_n;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln19_reg_1120;
reg   [5:0] i_reg_692;
reg   [5:0] i_reg_692_pp0_iter1_reg;
wire    ap_block_state72_pp0_stage0_iter0;
reg    ap_block_state73_pp0_stage0_iter1;
wire    ap_block_state74_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [57:0] trunc_ln22_3_reg_1104;
wire   [5:0] add_ln19_fu_742_p2;
reg   [5:0] add_ln19_reg_1115;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln19_fu_748_p2;
reg   [0:0] icmp_ln19_reg_1120_pp0_iter1_reg;
wire   [15:0] trunc_ln674_fu_754_p1;
reg   [15:0] trunc_ln674_reg_1124;
reg   [15:0] p_Result_8_1_i_i_i_reg_1129;
reg   [15:0] p_Result_8_2_i_i_i_reg_1134;
reg   [15:0] p_Result_8_3_i_i_i_reg_1139;
reg   [15:0] p_Result_8_4_i_i_i_reg_1144;
reg   [15:0] p_Result_8_5_i_i_i_reg_1149;
reg   [15:0] p_Result_8_6_i_i_i_reg_1154;
reg   [15:0] p_Result_8_7_i_i_i_reg_1159;
reg   [15:0] p_Result_8_8_i_i_i_reg_1164;
reg   [15:0] p_Result_8_9_i_i_i_reg_1169;
reg   [15:0] p_Result_8_i_i_i_reg_1174;
reg   [15:0] p_Result_8_10_i_i_i_reg_1179;
reg   [15:0] p_Result_8_11_i_i_i_reg_1184;
reg   [15:0] p_Result_8_12_i_i_i_reg_1189;
reg   [15:0] p_Result_8_13_i_i_i_reg_1194;
reg   [15:0] p_Result_8_14_i_i_i_reg_1199;
reg   [15:0] p_Result_8_15_i_i_i_reg_1204;
reg   [15:0] p_Result_8_16_i_i_i_reg_1209;
reg   [15:0] p_Result_8_17_i_i_i_reg_1214;
reg   [15:0] p_Result_8_18_i_i_i_reg_1219;
reg   [15:0] p_Result_8_19_i_i_i_reg_1224;
reg   [15:0] p_Result_8_20_i_i_i_reg_1229;
reg   [15:0] p_Result_8_21_i_i_i_reg_1234;
reg   [15:0] p_Result_8_22_i_i_i_reg_1239;
reg   [15:0] p_Result_8_23_i_i_i_reg_1244;
reg   [15:0] p_Result_8_24_i_i_i_reg_1249;
reg   [15:0] p_Result_8_25_i_i_i_reg_1254;
reg   [15:0] p_Result_8_26_i_i_i_reg_1259;
reg   [15:0] p_Result_8_27_i_i_i_reg_1264;
reg   [15:0] p_Result_8_28_i_i_i_reg_1269;
reg   [15:0] p_Result_8_29_i_i_i_reg_1274;
reg   [15:0] p_Result_8_30_i_i_i_reg_1279;
wire    ap_CS_fsm_state71;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state72;
reg    ap_enable_reg_pp0_iter2;
reg   [5:0] ap_phi_mux_i_phi_fu_696_p4;
wire   [63:0] zext_ln19_fu_1068_p1;
wire  signed [63:0] sext_ln22_fu_732_p1;
reg    ap_block_state1;
wire   [23:0] shl_ln_fu_704_p3;
wire   [63:0] zext_ln22_fu_712_p1;
wire   [63:0] add_ln22_fu_716_p2;
wire    ap_CS_fsm_state75;
reg   [72:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 73'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state75)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state72) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state71)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state72)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state72);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state71)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        i_reg_692 <= 6'd0;
    end else if (((icmp_ln19_reg_1120 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_692 <= add_ln19_reg_1115;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln19_reg_1115 <= add_ln19_fu_742_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_692_pp0_iter1_reg <= i_reg_692;
        icmp_ln19_reg_1120 <= icmp_ln19_fu_748_p2;
        icmp_ln19_reg_1120_pp0_iter1_reg <= icmp_ln19_reg_1120;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln19_reg_1120 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Result_8_10_i_i_i_reg_1179 <= {{m_axi_gmem_RDATA[191:176]}};
        p_Result_8_11_i_i_i_reg_1184 <= {{m_axi_gmem_RDATA[207:192]}};
        p_Result_8_12_i_i_i_reg_1189 <= {{m_axi_gmem_RDATA[223:208]}};
        p_Result_8_13_i_i_i_reg_1194 <= {{m_axi_gmem_RDATA[239:224]}};
        p_Result_8_14_i_i_i_reg_1199 <= {{m_axi_gmem_RDATA[255:240]}};
        p_Result_8_15_i_i_i_reg_1204 <= {{m_axi_gmem_RDATA[271:256]}};
        p_Result_8_16_i_i_i_reg_1209 <= {{m_axi_gmem_RDATA[287:272]}};
        p_Result_8_17_i_i_i_reg_1214 <= {{m_axi_gmem_RDATA[303:288]}};
        p_Result_8_18_i_i_i_reg_1219 <= {{m_axi_gmem_RDATA[319:304]}};
        p_Result_8_19_i_i_i_reg_1224 <= {{m_axi_gmem_RDATA[335:320]}};
        p_Result_8_1_i_i_i_reg_1129 <= {{m_axi_gmem_RDATA[31:16]}};
        p_Result_8_20_i_i_i_reg_1229 <= {{m_axi_gmem_RDATA[351:336]}};
        p_Result_8_21_i_i_i_reg_1234 <= {{m_axi_gmem_RDATA[367:352]}};
        p_Result_8_22_i_i_i_reg_1239 <= {{m_axi_gmem_RDATA[383:368]}};
        p_Result_8_23_i_i_i_reg_1244 <= {{m_axi_gmem_RDATA[399:384]}};
        p_Result_8_24_i_i_i_reg_1249 <= {{m_axi_gmem_RDATA[415:400]}};
        p_Result_8_25_i_i_i_reg_1254 <= {{m_axi_gmem_RDATA[431:416]}};
        p_Result_8_26_i_i_i_reg_1259 <= {{m_axi_gmem_RDATA[447:432]}};
        p_Result_8_27_i_i_i_reg_1264 <= {{m_axi_gmem_RDATA[463:448]}};
        p_Result_8_28_i_i_i_reg_1269 <= {{m_axi_gmem_RDATA[479:464]}};
        p_Result_8_29_i_i_i_reg_1274 <= {{m_axi_gmem_RDATA[495:480]}};
        p_Result_8_2_i_i_i_reg_1134 <= {{m_axi_gmem_RDATA[47:32]}};
        p_Result_8_30_i_i_i_reg_1279 <= {{m_axi_gmem_RDATA[511:496]}};
        p_Result_8_3_i_i_i_reg_1139 <= {{m_axi_gmem_RDATA[63:48]}};
        p_Result_8_4_i_i_i_reg_1144 <= {{m_axi_gmem_RDATA[79:64]}};
        p_Result_8_5_i_i_i_reg_1149 <= {{m_axi_gmem_RDATA[95:80]}};
        p_Result_8_6_i_i_i_reg_1154 <= {{m_axi_gmem_RDATA[111:96]}};
        p_Result_8_7_i_i_i_reg_1159 <= {{m_axi_gmem_RDATA[127:112]}};
        p_Result_8_8_i_i_i_reg_1164 <= {{m_axi_gmem_RDATA[143:128]}};
        p_Result_8_9_i_i_i_reg_1169 <= {{m_axi_gmem_RDATA[159:144]}};
        p_Result_8_i_i_i_reg_1174 <= {{m_axi_gmem_RDATA[175:160]}};
        trunc_ln674_reg_1124 <= trunc_ln674_fu_754_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        trunc_ln22_3_reg_1104 <= {{add_ln22_fu_716_p2[63:6]}};
    end
end

always @ (*) begin
    if ((icmp_ln19_fu_748_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state72 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state72 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln19_reg_1120 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_696_p4 = add_ln19_reg_1115;
    end else begin
        ap_phi_mux_i_phi_fu_696_p4 = i_reg_692;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_blk_n = data_empty_n;
    end else begin
        data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((trunc_ln204_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (data_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_read = 1'b1;
    end else begin
        data_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln19_reg_1120 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (m_axi_gmem_ARREADY == 1'b1))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln19_reg_1120 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_0_ce0 = 1'b1;
    end else begin
        training_instance_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_0_we0 = 1'b1;
    end else begin
        training_instance_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_10_ce0 = 1'b1;
    end else begin
        training_instance_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_10_we0 = 1'b1;
    end else begin
        training_instance_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_11_ce0 = 1'b1;
    end else begin
        training_instance_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_11_we0 = 1'b1;
    end else begin
        training_instance_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_12_ce0 = 1'b1;
    end else begin
        training_instance_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_12_we0 = 1'b1;
    end else begin
        training_instance_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_13_ce0 = 1'b1;
    end else begin
        training_instance_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_13_we0 = 1'b1;
    end else begin
        training_instance_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_14_ce0 = 1'b1;
    end else begin
        training_instance_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_14_we0 = 1'b1;
    end else begin
        training_instance_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_15_ce0 = 1'b1;
    end else begin
        training_instance_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_15_we0 = 1'b1;
    end else begin
        training_instance_V_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_16_ce0 = 1'b1;
    end else begin
        training_instance_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_16_we0 = 1'b1;
    end else begin
        training_instance_V_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_17_ce0 = 1'b1;
    end else begin
        training_instance_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_17_we0 = 1'b1;
    end else begin
        training_instance_V_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_18_ce0 = 1'b1;
    end else begin
        training_instance_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_18_we0 = 1'b1;
    end else begin
        training_instance_V_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_19_ce0 = 1'b1;
    end else begin
        training_instance_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_19_we0 = 1'b1;
    end else begin
        training_instance_V_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_1_ce0 = 1'b1;
    end else begin
        training_instance_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_1_we0 = 1'b1;
    end else begin
        training_instance_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_20_ce0 = 1'b1;
    end else begin
        training_instance_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_20_we0 = 1'b1;
    end else begin
        training_instance_V_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_21_ce0 = 1'b1;
    end else begin
        training_instance_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_21_we0 = 1'b1;
    end else begin
        training_instance_V_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_22_ce0 = 1'b1;
    end else begin
        training_instance_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_22_we0 = 1'b1;
    end else begin
        training_instance_V_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_23_ce0 = 1'b1;
    end else begin
        training_instance_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_23_we0 = 1'b1;
    end else begin
        training_instance_V_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_24_ce0 = 1'b1;
    end else begin
        training_instance_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_24_we0 = 1'b1;
    end else begin
        training_instance_V_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_25_ce0 = 1'b1;
    end else begin
        training_instance_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_25_we0 = 1'b1;
    end else begin
        training_instance_V_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_26_ce0 = 1'b1;
    end else begin
        training_instance_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_26_we0 = 1'b1;
    end else begin
        training_instance_V_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_27_ce0 = 1'b1;
    end else begin
        training_instance_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_27_we0 = 1'b1;
    end else begin
        training_instance_V_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_28_ce0 = 1'b1;
    end else begin
        training_instance_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_28_we0 = 1'b1;
    end else begin
        training_instance_V_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_29_ce0 = 1'b1;
    end else begin
        training_instance_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_29_we0 = 1'b1;
    end else begin
        training_instance_V_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_2_ce0 = 1'b1;
    end else begin
        training_instance_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_2_we0 = 1'b1;
    end else begin
        training_instance_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_30_ce0 = 1'b1;
    end else begin
        training_instance_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_30_we0 = 1'b1;
    end else begin
        training_instance_V_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_31_ce0 = 1'b1;
    end else begin
        training_instance_V_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_31_we0 = 1'b1;
    end else begin
        training_instance_V_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_3_ce0 = 1'b1;
    end else begin
        training_instance_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_3_we0 = 1'b1;
    end else begin
        training_instance_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_4_ce0 = 1'b1;
    end else begin
        training_instance_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_4_we0 = 1'b1;
    end else begin
        training_instance_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_5_ce0 = 1'b1;
    end else begin
        training_instance_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_5_we0 = 1'b1;
    end else begin
        training_instance_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_6_ce0 = 1'b1;
    end else begin
        training_instance_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_6_we0 = 1'b1;
    end else begin
        training_instance_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_7_ce0 = 1'b1;
    end else begin
        training_instance_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_7_we0 = 1'b1;
    end else begin
        training_instance_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_8_ce0 = 1'b1;
    end else begin
        training_instance_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_8_we0 = 1'b1;
    end else begin
        training_instance_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_9_ce0 = 1'b1;
    end else begin
        training_instance_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln19_reg_1120_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        training_instance_V_9_we0 = 1'b1;
    end else begin
        training_instance_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        trunc_ln204_blk_n = trunc_ln204_empty_n;
    end else begin
        trunc_ln204_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((trunc_ln204_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (data_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        trunc_ln204_read = 1'b1;
    end else begin
        trunc_ln204_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((trunc_ln204_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (data_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (m_axi_gmem_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln19_fu_748_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((icmp_ln19_fu_748_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln19_fu_742_p2 = (ap_phi_mux_i_phi_fu_696_p4 + 6'd1);

assign add_ln22_fu_716_p2 = (data_dout + zext_ln22_fu_712_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd72];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln19_reg_1120 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln19_reg_1120 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((trunc_ln204_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (data_empty_n == 1'b0));
end

assign ap_block_state72_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state73_pp0_stage0_iter1 = ((icmp_ln19_reg_1120 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_state74_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign icmp_ln19_fu_748_p2 = ((ap_phi_mux_i_phi_fu_696_p4 == 6'd32) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARADDR = sext_ln22_fu_732_p1;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd32;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 512'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign sext_ln22_fu_732_p1 = $signed(trunc_ln22_3_reg_1104);

assign shl_ln_fu_704_p3 = {{trunc_ln204_dout}, {11'd0}};

assign training_instance_V_0_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_0_d0 = trunc_ln674_reg_1124;

assign training_instance_V_10_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_10_d0 = p_Result_8_i_i_i_reg_1174;

assign training_instance_V_11_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_11_d0 = p_Result_8_10_i_i_i_reg_1179;

assign training_instance_V_12_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_12_d0 = p_Result_8_11_i_i_i_reg_1184;

assign training_instance_V_13_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_13_d0 = p_Result_8_12_i_i_i_reg_1189;

assign training_instance_V_14_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_14_d0 = p_Result_8_13_i_i_i_reg_1194;

assign training_instance_V_15_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_15_d0 = p_Result_8_14_i_i_i_reg_1199;

assign training_instance_V_16_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_16_d0 = p_Result_8_15_i_i_i_reg_1204;

assign training_instance_V_17_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_17_d0 = p_Result_8_16_i_i_i_reg_1209;

assign training_instance_V_18_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_18_d0 = p_Result_8_17_i_i_i_reg_1214;

assign training_instance_V_19_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_19_d0 = p_Result_8_18_i_i_i_reg_1219;

assign training_instance_V_1_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_1_d0 = p_Result_8_1_i_i_i_reg_1129;

assign training_instance_V_20_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_20_d0 = p_Result_8_19_i_i_i_reg_1224;

assign training_instance_V_21_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_21_d0 = p_Result_8_20_i_i_i_reg_1229;

assign training_instance_V_22_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_22_d0 = p_Result_8_21_i_i_i_reg_1234;

assign training_instance_V_23_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_23_d0 = p_Result_8_22_i_i_i_reg_1239;

assign training_instance_V_24_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_24_d0 = p_Result_8_23_i_i_i_reg_1244;

assign training_instance_V_25_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_25_d0 = p_Result_8_24_i_i_i_reg_1249;

assign training_instance_V_26_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_26_d0 = p_Result_8_25_i_i_i_reg_1254;

assign training_instance_V_27_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_27_d0 = p_Result_8_26_i_i_i_reg_1259;

assign training_instance_V_28_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_28_d0 = p_Result_8_27_i_i_i_reg_1264;

assign training_instance_V_29_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_29_d0 = p_Result_8_28_i_i_i_reg_1269;

assign training_instance_V_2_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_2_d0 = p_Result_8_2_i_i_i_reg_1134;

assign training_instance_V_30_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_30_d0 = p_Result_8_29_i_i_i_reg_1274;

assign training_instance_V_31_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_31_d0 = p_Result_8_30_i_i_i_reg_1279;

assign training_instance_V_3_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_3_d0 = p_Result_8_3_i_i_i_reg_1139;

assign training_instance_V_4_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_4_d0 = p_Result_8_4_i_i_i_reg_1144;

assign training_instance_V_5_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_5_d0 = p_Result_8_5_i_i_i_reg_1149;

assign training_instance_V_6_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_6_d0 = p_Result_8_6_i_i_i_reg_1154;

assign training_instance_V_7_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_7_d0 = p_Result_8_7_i_i_i_reg_1159;

assign training_instance_V_8_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_8_d0 = p_Result_8_8_i_i_i_reg_1164;

assign training_instance_V_9_address0 = zext_ln19_fu_1068_p1;

assign training_instance_V_9_d0 = p_Result_8_9_i_i_i_reg_1169;

assign trunc_ln674_fu_754_p1 = m_axi_gmem_RDATA[15:0];

assign zext_ln19_fu_1068_p1 = i_reg_692_pp0_iter1_reg;

assign zext_ln22_fu_712_p1 = shl_ln_fu_704_p3;

endmodule //SgdLR_READ_TRAINING_DATA_proc
