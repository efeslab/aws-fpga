// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rendering_dataflow_in_loop_TRIANGLES (
        ap_clk,
        ap_rst,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        i_V,
        input_r,
        frame_buffer_V_address0,
        frame_buffer_V_ce0,
        frame_buffer_V_d0,
        frame_buffer_V_q0,
        frame_buffer_V_we0,
        frame_buffer_V_address1,
        frame_buffer_V_ce1,
        frame_buffer_V_d1,
        frame_buffer_V_q1,
        frame_buffer_V_we1,
        i_V_ap_vld,
        input_r_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_clk;
input   ap_rst;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [11:0] i_V;
input  [63:0] input_r;
output  [15:0] frame_buffer_V_address0;
output   frame_buffer_V_ce0;
output  [5:0] frame_buffer_V_d0;
input  [5:0] frame_buffer_V_q0;
output   frame_buffer_V_we0;
output  [15:0] frame_buffer_V_address1;
output   frame_buffer_V_ce1;
output  [5:0] frame_buffer_V_d1;
input  [5:0] frame_buffer_V_q1;
output   frame_buffer_V_we1;
input   i_V_ap_vld;
input   input_r_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire   [7:0] fragment_x_V_i_q0;
wire   [7:0] fragment_x_V_t_q0;
wire   [7:0] fragment_y_V_i_q0;
wire   [7:0] fragment_y_V_t_q0;
wire   [7:0] fragment_z_V_i_q0;
wire   [7:0] fragment_z_V_t_q0;
wire   [5:0] fragment_color_V_i_q0;
wire   [5:0] fragment_color_V_t_q0;
wire   [7:0] pixels_x_V_i_q0;
wire   [7:0] pixels_x_V_t_q0;
wire   [7:0] pixels_y_V_i_q0;
wire   [7:0] pixels_y_V_t_q0;
wire   [5:0] pixels_color_V_i_q0;
wire   [5:0] pixels_color_V_t_q0;
wire    projection_U0_ap_start;
wire    projection_U0_ap_done;
wire    projection_U0_ap_continue;
wire    projection_U0_ap_idle;
wire    projection_U0_ap_ready;
wire    projection_U0_m_axi_gmem_AWVALID;
wire   [63:0] projection_U0_m_axi_gmem_AWADDR;
wire   [0:0] projection_U0_m_axi_gmem_AWID;
wire   [31:0] projection_U0_m_axi_gmem_AWLEN;
wire   [2:0] projection_U0_m_axi_gmem_AWSIZE;
wire   [1:0] projection_U0_m_axi_gmem_AWBURST;
wire   [1:0] projection_U0_m_axi_gmem_AWLOCK;
wire   [3:0] projection_U0_m_axi_gmem_AWCACHE;
wire   [2:0] projection_U0_m_axi_gmem_AWPROT;
wire   [3:0] projection_U0_m_axi_gmem_AWQOS;
wire   [3:0] projection_U0_m_axi_gmem_AWREGION;
wire   [0:0] projection_U0_m_axi_gmem_AWUSER;
wire    projection_U0_m_axi_gmem_WVALID;
wire   [511:0] projection_U0_m_axi_gmem_WDATA;
wire   [63:0] projection_U0_m_axi_gmem_WSTRB;
wire    projection_U0_m_axi_gmem_WLAST;
wire   [0:0] projection_U0_m_axi_gmem_WID;
wire   [0:0] projection_U0_m_axi_gmem_WUSER;
wire    projection_U0_m_axi_gmem_ARVALID;
wire   [63:0] projection_U0_m_axi_gmem_ARADDR;
wire   [0:0] projection_U0_m_axi_gmem_ARID;
wire   [31:0] projection_U0_m_axi_gmem_ARLEN;
wire   [2:0] projection_U0_m_axi_gmem_ARSIZE;
wire   [1:0] projection_U0_m_axi_gmem_ARBURST;
wire   [1:0] projection_U0_m_axi_gmem_ARLOCK;
wire   [3:0] projection_U0_m_axi_gmem_ARCACHE;
wire   [2:0] projection_U0_m_axi_gmem_ARPROT;
wire   [3:0] projection_U0_m_axi_gmem_ARQOS;
wire   [3:0] projection_U0_m_axi_gmem_ARREGION;
wire   [0:0] projection_U0_m_axi_gmem_ARUSER;
wire    projection_U0_m_axi_gmem_RREADY;
wire    projection_U0_m_axi_gmem_BREADY;
wire   [11:0] projection_U0_i_V_out_din;
wire    projection_U0_i_V_out_write;
wire   [7:0] projection_U0_ap_return_0;
wire   [7:0] projection_U0_ap_return_1;
wire   [7:0] projection_U0_ap_return_2;
wire   [7:0] projection_U0_ap_return_3;
wire   [7:0] projection_U0_ap_return_4;
wire   [7:0] projection_U0_ap_return_5;
wire   [7:0] projection_U0_ap_return_6;
wire    ap_channel_done_triangle_2ds_z_V;
wire    triangle_2ds_z_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_z_V;
wire    ap_sync_channel_write_triangle_2ds_z_V;
wire    ap_channel_done_triangle_2ds_y2_V;
wire    triangle_2ds_y2_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_y2_V;
wire    ap_sync_channel_write_triangle_2ds_y2_V;
wire    ap_channel_done_triangle_2ds_x2_V;
wire    triangle_2ds_x2_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_x2_V;
wire    ap_sync_channel_write_triangle_2ds_x2_V;
wire    ap_channel_done_triangle_2ds_y1_V;
wire    triangle_2ds_y1_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_y1_V;
wire    ap_sync_channel_write_triangle_2ds_y1_V;
wire    ap_channel_done_triangle_2ds_x1_V;
wire    triangle_2ds_x1_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_x1_V;
wire    ap_sync_channel_write_triangle_2ds_x1_V;
wire    ap_channel_done_triangle_2ds_y0_V;
wire    triangle_2ds_y0_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_y0_V;
wire    ap_sync_channel_write_triangle_2ds_y0_V;
wire    ap_channel_done_triangle_2ds_x0_V;
wire    triangle_2ds_x0_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_x0_V;
wire    ap_sync_channel_write_triangle_2ds_x0_V;
wire    rasterization1_U0_ap_start;
wire    rasterization1_U0_ap_done;
wire    rasterization1_U0_ap_continue;
wire    rasterization1_U0_ap_idle;
wire    rasterization1_U0_ap_ready;
wire   [0:0] rasterization1_U0_ap_return_0;
wire   [7:0] rasterization1_U0_ap_return_1;
wire   [7:0] rasterization1_U0_ap_return_2;
wire   [7:0] rasterization1_U0_ap_return_3;
wire   [7:0] rasterization1_U0_ap_return_4;
wire   [7:0] rasterization1_U0_ap_return_5;
wire   [7:0] rasterization1_U0_ap_return_6;
wire   [7:0] rasterization1_U0_ap_return_7;
wire   [7:0] rasterization1_U0_ap_return_8;
wire   [7:0] rasterization1_U0_ap_return_9;
wire   [7:0] rasterization1_U0_ap_return_10;
wire   [15:0] rasterization1_U0_ap_return_11;
wire    ap_channel_done_max_index_V_0;
wire    max_index_V_0_full_n;
reg    ap_sync_reg_channel_write_max_index_V_0;
wire    ap_sync_channel_write_max_index_V_0;
wire    ap_channel_done_triangle_2ds_same_z_V;
wire    triangle_2ds_same_z_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_same_z_V;
wire    ap_sync_channel_write_triangle_2ds_same_z_V;
wire    ap_channel_done_triangle_2ds_same_y2_V;
wire    triangle_2ds_same_y2_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_same_y2_V;
wire    ap_sync_channel_write_triangle_2ds_same_y2_V;
wire    ap_channel_done_triangle_2ds_same_x2_V;
wire    triangle_2ds_same_x2_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_same_x2_V;
wire    ap_sync_channel_write_triangle_2ds_same_x2_V;
wire    ap_channel_done_triangle_2ds_same_y1_V;
wire    triangle_2ds_same_y1_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_same_y1_V;
wire    ap_sync_channel_write_triangle_2ds_same_y1_V;
wire    ap_channel_done_triangle_2ds_same_x1_V;
wire    triangle_2ds_same_x1_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_same_x1_V;
wire    ap_sync_channel_write_triangle_2ds_same_x1_V;
wire    ap_channel_done_triangle_2ds_same_y0_V;
wire    triangle_2ds_same_y0_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_same_y0_V;
wire    ap_sync_channel_write_triangle_2ds_same_y0_V;
wire    ap_channel_done_triangle_2ds_same_x0_V;
wire    triangle_2ds_same_x0_V_full_n;
reg    ap_sync_reg_channel_write_triangle_2ds_same_x0_V;
wire    ap_sync_channel_write_triangle_2ds_same_x0_V;
wire    ap_channel_done_max_min_V_4;
wire    max_min_V_4_full_n;
reg    ap_sync_reg_channel_write_max_min_V_4;
wire    ap_sync_channel_write_max_min_V_4;
wire    ap_channel_done_max_min_V_2;
wire    max_min_V_2_full_n;
reg    ap_sync_reg_channel_write_max_min_V_2;
wire    ap_sync_channel_write_max_min_V_2;
wire    ap_channel_done_max_min_V_0;
wire    max_min_V_0_full_n;
reg    ap_sync_reg_channel_write_max_min_V_0;
wire    ap_sync_channel_write_max_min_V_0;
wire    ap_channel_done_ref_tmp548_channel;
wire    ref_tmp548_channel_full_n;
reg    ap_sync_reg_channel_write_ref_tmp548_channel;
wire    ap_sync_channel_write_ref_tmp548_channel;
wire    rasterization2_U0_ap_start;
wire    rasterization2_U0_ap_done;
wire    rasterization2_U0_ap_continue;
wire    rasterization2_U0_ap_idle;
wire    rasterization2_U0_ap_ready;
wire   [8:0] rasterization2_U0_fragment_x_V23_address0;
wire    rasterization2_U0_fragment_x_V23_ce0;
wire    rasterization2_U0_fragment_x_V23_we0;
wire   [7:0] rasterization2_U0_fragment_x_V23_d0;
wire   [8:0] rasterization2_U0_fragment_y_V24_address0;
wire    rasterization2_U0_fragment_y_V24_ce0;
wire    rasterization2_U0_fragment_y_V24_we0;
wire   [7:0] rasterization2_U0_fragment_y_V24_d0;
wire   [8:0] rasterization2_U0_fragment_z_V25_address0;
wire    rasterization2_U0_fragment_z_V25_ce0;
wire    rasterization2_U0_fragment_z_V25_we0;
wire   [7:0] rasterization2_U0_fragment_z_V25_d0;
wire   [8:0] rasterization2_U0_fragment_color_V26_address0;
wire    rasterization2_U0_fragment_color_V26_ce0;
wire    rasterization2_U0_fragment_color_V26_we0;
wire   [5:0] rasterization2_U0_fragment_color_V26_d0;
wire   [15:0] rasterization2_U0_ap_return;
wire    ap_channel_done_ref_tmp5722_channel;
wire    ref_tmp5722_channel_full_n;
reg    ap_sync_reg_channel_write_ref_tmp5722_channel;
wire    ap_sync_channel_write_ref_tmp5722_channel;
wire    ap_channel_done_fragment_color_V;
wire    rasterization2_U0_fragment_color_V26_full_n;
reg    ap_sync_reg_channel_write_fragment_color_V;
wire    ap_sync_channel_write_fragment_color_V;
wire    ap_channel_done_fragment_z_V;
wire    rasterization2_U0_fragment_z_V25_full_n;
reg    ap_sync_reg_channel_write_fragment_z_V;
wire    ap_sync_channel_write_fragment_z_V;
wire    ap_channel_done_fragment_y_V;
wire    rasterization2_U0_fragment_y_V24_full_n;
reg    ap_sync_reg_channel_write_fragment_y_V;
wire    ap_sync_channel_write_fragment_y_V;
wire    ap_channel_done_fragment_x_V;
wire    rasterization2_U0_fragment_x_V23_full_n;
reg    ap_sync_reg_channel_write_fragment_x_V;
wire    ap_sync_channel_write_fragment_x_V;
wire    zculling_U0_ap_start;
wire    zculling_U0_ap_done;
wire    zculling_U0_ap_continue;
wire    zculling_U0_ap_idle;
wire    zculling_U0_ap_ready;
wire    zculling_U0_i_V_read;
wire   [8:0] zculling_U0_fragment_x_V23_address0;
wire    zculling_U0_fragment_x_V23_ce0;
wire   [8:0] zculling_U0_fragment_y_V24_address0;
wire    zculling_U0_fragment_y_V24_ce0;
wire   [8:0] zculling_U0_fragment_z_V25_address0;
wire    zculling_U0_fragment_z_V25_ce0;
wire   [8:0] zculling_U0_fragment_color_V26_address0;
wire    zculling_U0_fragment_color_V26_ce0;
wire   [8:0] zculling_U0_pixels_x_V28_address0;
wire    zculling_U0_pixels_x_V28_ce0;
wire    zculling_U0_pixels_x_V28_we0;
wire   [7:0] zculling_U0_pixels_x_V28_d0;
wire   [8:0] zculling_U0_pixels_y_V29_address0;
wire    zculling_U0_pixels_y_V29_ce0;
wire    zculling_U0_pixels_y_V29_we0;
wire   [7:0] zculling_U0_pixels_y_V29_d0;
wire   [8:0] zculling_U0_pixels_color_V30_address0;
wire    zculling_U0_pixels_color_V30_ce0;
wire    zculling_U0_pixels_color_V30_we0;
wire   [5:0] zculling_U0_pixels_color_V30_d0;
wire   [11:0] zculling_U0_i_V_out_din;
wire    zculling_U0_i_V_out_write;
wire   [15:0] zculling_U0_ap_return;
wire    ap_channel_done_ref_tmp6327_channel;
wire    ref_tmp6327_channel_full_n;
reg    ap_sync_reg_channel_write_ref_tmp6327_channel;
wire    ap_sync_channel_write_ref_tmp6327_channel;
wire    ap_channel_done_pixels_color_V;
wire    zculling_U0_pixels_color_V30_full_n;
reg    ap_sync_reg_channel_write_pixels_color_V;
wire    ap_sync_channel_write_pixels_color_V;
wire    ap_channel_done_pixels_y_V;
wire    zculling_U0_pixels_y_V29_full_n;
reg    ap_sync_reg_channel_write_pixels_y_V;
wire    ap_sync_channel_write_pixels_y_V;
wire    ap_channel_done_pixels_x_V;
wire    zculling_U0_pixels_x_V28_full_n;
reg    ap_sync_reg_channel_write_pixels_x_V;
wire    ap_sync_channel_write_pixels_x_V;
wire    coloringFB_U0_ap_start;
wire    coloringFB_U0_ap_done;
wire    coloringFB_U0_ap_continue;
wire    coloringFB_U0_ap_idle;
wire    coloringFB_U0_ap_ready;
wire    coloringFB_U0_i_V_read;
wire   [8:0] coloringFB_U0_pixels_x_V28_address0;
wire    coloringFB_U0_pixels_x_V28_ce0;
wire   [8:0] coloringFB_U0_pixels_y_V29_address0;
wire    coloringFB_U0_pixels_y_V29_ce0;
wire   [8:0] coloringFB_U0_pixels_color_V30_address0;
wire    coloringFB_U0_pixels_color_V30_ce0;
wire   [15:0] coloringFB_U0_frame_buffer_V_address0;
wire    coloringFB_U0_frame_buffer_V_ce0;
wire    coloringFB_U0_frame_buffer_V_we0;
wire   [5:0] coloringFB_U0_frame_buffer_V_d0;
wire   [15:0] coloringFB_U0_frame_buffer_V_address1;
wire    coloringFB_U0_frame_buffer_V_ce1;
wire    coloringFB_U0_frame_buffer_V_we1;
wire   [5:0] coloringFB_U0_frame_buffer_V_d1;
wire    ap_sync_continue;
wire    fragment_x_V_i_full_n;
wire    fragment_x_V_t_empty_n;
wire    fragment_y_V_i_full_n;
wire    fragment_y_V_t_empty_n;
wire    fragment_z_V_i_full_n;
wire    fragment_z_V_t_empty_n;
wire    fragment_color_V_i_full_n;
wire    fragment_color_V_t_empty_n;
wire    pixels_x_V_i_full_n;
wire    pixels_x_V_t_empty_n;
wire    pixels_y_V_i_full_n;
wire    pixels_y_V_t_empty_n;
wire    pixels_color_V_i_full_n;
wire    pixels_color_V_t_empty_n;
wire    i_V_c_full_n;
wire   [11:0] i_V_c_dout;
wire    i_V_c_empty_n;
wire   [7:0] triangle_2ds_x0_V_dout;
wire    triangle_2ds_x0_V_empty_n;
wire   [7:0] triangle_2ds_y0_V_dout;
wire    triangle_2ds_y0_V_empty_n;
wire   [7:0] triangle_2ds_x1_V_dout;
wire    triangle_2ds_x1_V_empty_n;
wire   [7:0] triangle_2ds_y1_V_dout;
wire    triangle_2ds_y1_V_empty_n;
wire   [7:0] triangle_2ds_x2_V_dout;
wire    triangle_2ds_x2_V_empty_n;
wire   [7:0] triangle_2ds_y2_V_dout;
wire    triangle_2ds_y2_V_empty_n;
wire   [7:0] triangle_2ds_z_V_dout;
wire    triangle_2ds_z_V_empty_n;
wire   [0:0] ref_tmp548_channel_dout;
wire    ref_tmp548_channel_empty_n;
wire   [7:0] max_min_V_0_dout;
wire    max_min_V_0_empty_n;
wire   [7:0] max_min_V_2_dout;
wire    max_min_V_2_empty_n;
wire   [7:0] max_min_V_4_dout;
wire    max_min_V_4_empty_n;
wire   [7:0] triangle_2ds_same_x0_V_dout;
wire    triangle_2ds_same_x0_V_empty_n;
wire   [7:0] triangle_2ds_same_y0_V_dout;
wire    triangle_2ds_same_y0_V_empty_n;
wire   [7:0] triangle_2ds_same_x1_V_dout;
wire    triangle_2ds_same_x1_V_empty_n;
wire   [7:0] triangle_2ds_same_y1_V_dout;
wire    triangle_2ds_same_y1_V_empty_n;
wire   [7:0] triangle_2ds_same_x2_V_dout;
wire    triangle_2ds_same_x2_V_empty_n;
wire   [7:0] triangle_2ds_same_y2_V_dout;
wire    triangle_2ds_same_y2_V_empty_n;
wire   [7:0] triangle_2ds_same_z_V_dout;
wire    triangle_2ds_same_z_V_empty_n;
wire   [15:0] max_index_V_0_dout;
wire    max_index_V_0_empty_n;
wire   [15:0] ref_tmp5722_channel_dout;
wire    ref_tmp5722_channel_empty_n;
wire    i_V_c1_full_n;
wire   [11:0] i_V_c1_dout;
wire    i_V_c1_empty_n;
wire   [15:0] ref_tmp6327_channel_dout;
wire    ref_tmp6327_channel_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    projection_U0_start_full_n;
wire    projection_U0_start_write;
wire    rasterization1_U0_start_full_n;
wire    rasterization1_U0_start_write;
wire    rasterization2_U0_start_full_n;
wire    rasterization2_U0_start_write;
wire    zculling_U0_start_full_n;
wire    zculling_U0_start_write;
wire    coloringFB_U0_start_full_n;
wire    coloringFB_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_triangle_2ds_z_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_y2_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_x2_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_y1_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_x1_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_y0_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_x0_V = 1'b0;
#0 ap_sync_reg_channel_write_max_index_V_0 = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_same_z_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_same_y2_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_same_x2_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_same_y1_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_same_x1_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_same_y0_V = 1'b0;
#0 ap_sync_reg_channel_write_triangle_2ds_same_x0_V = 1'b0;
#0 ap_sync_reg_channel_write_max_min_V_4 = 1'b0;
#0 ap_sync_reg_channel_write_max_min_V_2 = 1'b0;
#0 ap_sync_reg_channel_write_max_min_V_0 = 1'b0;
#0 ap_sync_reg_channel_write_ref_tmp548_channel = 1'b0;
#0 ap_sync_reg_channel_write_ref_tmp5722_channel = 1'b0;
#0 ap_sync_reg_channel_write_fragment_color_V = 1'b0;
#0 ap_sync_reg_channel_write_fragment_z_V = 1'b0;
#0 ap_sync_reg_channel_write_fragment_y_V = 1'b0;
#0 ap_sync_reg_channel_write_fragment_x_V = 1'b0;
#0 ap_sync_reg_channel_write_ref_tmp6327_channel = 1'b0;
#0 ap_sync_reg_channel_write_pixels_color_V = 1'b0;
#0 ap_sync_reg_channel_write_pixels_y_V = 1'b0;
#0 ap_sync_reg_channel_write_pixels_x_V = 1'b0;
end

rendering_dataflow_in_loop_TRIANGLES_fragment_x_V #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(rasterization2_U0_fragment_x_V23_address0),
    .i_ce0(rasterization2_U0_fragment_x_V23_ce0),
    .i_we0(rasterization2_U0_fragment_x_V23_we0),
    .i_d0(rasterization2_U0_fragment_x_V23_d0),
    .i_q0(fragment_x_V_i_q0),
    .t_address0(zculling_U0_fragment_x_V23_address0),
    .t_ce0(zculling_U0_fragment_x_V23_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(fragment_x_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(fragment_x_V_i_full_n),
    .i_write(ap_channel_done_fragment_x_V),
    .t_empty_n(fragment_x_V_t_empty_n),
    .t_read(zculling_U0_ap_ready)
);

rendering_dataflow_in_loop_TRIANGLES_fragment_x_V #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(rasterization2_U0_fragment_y_V24_address0),
    .i_ce0(rasterization2_U0_fragment_y_V24_ce0),
    .i_we0(rasterization2_U0_fragment_y_V24_we0),
    .i_d0(rasterization2_U0_fragment_y_V24_d0),
    .i_q0(fragment_y_V_i_q0),
    .t_address0(zculling_U0_fragment_y_V24_address0),
    .t_ce0(zculling_U0_fragment_y_V24_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(fragment_y_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(fragment_y_V_i_full_n),
    .i_write(ap_channel_done_fragment_y_V),
    .t_empty_n(fragment_y_V_t_empty_n),
    .t_read(zculling_U0_ap_ready)
);

rendering_dataflow_in_loop_TRIANGLES_fragment_x_V #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(rasterization2_U0_fragment_z_V25_address0),
    .i_ce0(rasterization2_U0_fragment_z_V25_ce0),
    .i_we0(rasterization2_U0_fragment_z_V25_we0),
    .i_d0(rasterization2_U0_fragment_z_V25_d0),
    .i_q0(fragment_z_V_i_q0),
    .t_address0(zculling_U0_fragment_z_V25_address0),
    .t_ce0(zculling_U0_fragment_z_V25_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(fragment_z_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(fragment_z_V_i_full_n),
    .i_write(ap_channel_done_fragment_z_V),
    .t_empty_n(fragment_z_V_t_empty_n),
    .t_read(zculling_U0_ap_ready)
);

rendering_dataflow_in_loop_TRIANGLES_fragment_color_V #(
    .DataWidth( 6 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
fragment_color_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(rasterization2_U0_fragment_color_V26_address0),
    .i_ce0(rasterization2_U0_fragment_color_V26_ce0),
    .i_we0(rasterization2_U0_fragment_color_V26_we0),
    .i_d0(rasterization2_U0_fragment_color_V26_d0),
    .i_q0(fragment_color_V_i_q0),
    .t_address0(zculling_U0_fragment_color_V26_address0),
    .t_ce0(zculling_U0_fragment_color_V26_ce0),
    .t_we0(1'b0),
    .t_d0(6'd0),
    .t_q0(fragment_color_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(fragment_color_V_i_full_n),
    .i_write(ap_channel_done_fragment_color_V),
    .t_empty_n(fragment_color_V_t_empty_n),
    .t_read(zculling_U0_ap_ready)
);

rendering_dataflow_in_loop_TRIANGLES_fragment_x_V #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
pixels_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(zculling_U0_pixels_x_V28_address0),
    .i_ce0(zculling_U0_pixels_x_V28_ce0),
    .i_we0(zculling_U0_pixels_x_V28_we0),
    .i_d0(zculling_U0_pixels_x_V28_d0),
    .i_q0(pixels_x_V_i_q0),
    .t_address0(coloringFB_U0_pixels_x_V28_address0),
    .t_ce0(coloringFB_U0_pixels_x_V28_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(pixels_x_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(pixels_x_V_i_full_n),
    .i_write(ap_channel_done_pixels_x_V),
    .t_empty_n(pixels_x_V_t_empty_n),
    .t_read(coloringFB_U0_ap_ready)
);

rendering_dataflow_in_loop_TRIANGLES_fragment_x_V #(
    .DataWidth( 8 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
pixels_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(zculling_U0_pixels_y_V29_address0),
    .i_ce0(zculling_U0_pixels_y_V29_ce0),
    .i_we0(zculling_U0_pixels_y_V29_we0),
    .i_d0(zculling_U0_pixels_y_V29_d0),
    .i_q0(pixels_y_V_i_q0),
    .t_address0(coloringFB_U0_pixels_y_V29_address0),
    .t_ce0(coloringFB_U0_pixels_y_V29_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(pixels_y_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(pixels_y_V_i_full_n),
    .i_write(ap_channel_done_pixels_y_V),
    .t_empty_n(pixels_y_V_t_empty_n),
    .t_read(coloringFB_U0_ap_ready)
);

rendering_dataflow_in_loop_TRIANGLES_fragment_color_V #(
    .DataWidth( 6 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
pixels_color_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(zculling_U0_pixels_color_V30_address0),
    .i_ce0(zculling_U0_pixels_color_V30_ce0),
    .i_we0(zculling_U0_pixels_color_V30_we0),
    .i_d0(zculling_U0_pixels_color_V30_d0),
    .i_q0(pixels_color_V_i_q0),
    .t_address0(coloringFB_U0_pixels_color_V30_address0),
    .t_ce0(coloringFB_U0_pixels_color_V30_ce0),
    .t_we0(1'b0),
    .t_d0(6'd0),
    .t_q0(pixels_color_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(pixels_color_V_i_full_n),
    .i_write(ap_channel_done_pixels_color_V),
    .t_empty_n(pixels_color_V_t_empty_n),
    .t_read(coloringFB_U0_ap_ready)
);

rendering_projection projection_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(projection_U0_ap_start),
    .ap_done(projection_U0_ap_done),
    .ap_continue(projection_U0_ap_continue),
    .ap_idle(projection_U0_ap_idle),
    .ap_ready(projection_U0_ap_ready),
    .m_axi_gmem_AWVALID(projection_U0_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(projection_U0_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(projection_U0_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(projection_U0_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(projection_U0_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(projection_U0_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(projection_U0_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(projection_U0_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(projection_U0_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(projection_U0_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(projection_U0_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(projection_U0_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(projection_U0_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(projection_U0_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(projection_U0_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(projection_U0_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(projection_U0_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(projection_U0_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(projection_U0_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
    .m_axi_gmem_ARADDR(projection_U0_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(projection_U0_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(projection_U0_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(projection_U0_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(projection_U0_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(projection_U0_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(projection_U0_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(projection_U0_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(projection_U0_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(projection_U0_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(projection_U0_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(m_axi_gmem_RVALID),
    .m_axi_gmem_RREADY(projection_U0_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(m_axi_gmem_RDATA),
    .m_axi_gmem_RLAST(m_axi_gmem_RLAST),
    .m_axi_gmem_RID(m_axi_gmem_RID),
    .m_axi_gmem_RUSER(m_axi_gmem_RUSER),
    .m_axi_gmem_RRESP(m_axi_gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(projection_U0_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .i_V(i_V),
    .input_r(input_r),
    .i_V_out_din(projection_U0_i_V_out_din),
    .i_V_out_full_n(i_V_c_full_n),
    .i_V_out_write(projection_U0_i_V_out_write),
    .ap_return_0(projection_U0_ap_return_0),
    .ap_return_1(projection_U0_ap_return_1),
    .ap_return_2(projection_U0_ap_return_2),
    .ap_return_3(projection_U0_ap_return_3),
    .ap_return_4(projection_U0_ap_return_4),
    .ap_return_5(projection_U0_ap_return_5),
    .ap_return_6(projection_U0_ap_return_6)
);

rendering_rasterization1 rasterization1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(rasterization1_U0_ap_start),
    .ap_done(rasterization1_U0_ap_done),
    .ap_continue(rasterization1_U0_ap_continue),
    .ap_idle(rasterization1_U0_ap_idle),
    .ap_ready(rasterization1_U0_ap_ready),
    .p_read1(triangle_2ds_x0_V_dout),
    .p_read2(triangle_2ds_y0_V_dout),
    .p_read3(triangle_2ds_x1_V_dout),
    .p_read4(triangle_2ds_y1_V_dout),
    .triangle_2d_same_x2_V_write(triangle_2ds_x2_V_dout),
    .triangle_2d_same_y2_V_write(triangle_2ds_y2_V_dout),
    .triangle_2d_same_z_V_write(triangle_2ds_z_V_dout),
    .ap_return_0(rasterization1_U0_ap_return_0),
    .ap_return_1(rasterization1_U0_ap_return_1),
    .ap_return_2(rasterization1_U0_ap_return_2),
    .ap_return_3(rasterization1_U0_ap_return_3),
    .ap_return_4(rasterization1_U0_ap_return_4),
    .ap_return_5(rasterization1_U0_ap_return_5),
    .ap_return_6(rasterization1_U0_ap_return_6),
    .ap_return_7(rasterization1_U0_ap_return_7),
    .ap_return_8(rasterization1_U0_ap_return_8),
    .ap_return_9(rasterization1_U0_ap_return_9),
    .ap_return_10(rasterization1_U0_ap_return_10),
    .ap_return_11(rasterization1_U0_ap_return_11)
);

rendering_rasterization2 rasterization2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(rasterization2_U0_ap_start),
    .ap_done(rasterization2_U0_ap_done),
    .ap_continue(rasterization2_U0_ap_continue),
    .ap_idle(rasterization2_U0_ap_idle),
    .ap_ready(rasterization2_U0_ap_ready),
    .p_read1(ref_tmp548_channel_dout),
    .p_read2(max_min_V_0_dout),
    .p_read3(max_min_V_2_dout),
    .p_read4(max_min_V_4_dout),
    .p_read5(max_index_V_0_dout),
    .p_read6(triangle_2ds_same_x0_V_dout),
    .p_read7(triangle_2ds_same_y0_V_dout),
    .p_read8(triangle_2ds_same_x1_V_dout),
    .p_read9(triangle_2ds_same_y1_V_dout),
    .p_read10(triangle_2ds_same_x2_V_dout),
    .p_read11(triangle_2ds_same_y2_V_dout),
    .p_read12(triangle_2ds_same_z_V_dout),
    .fragment_x_V23_address0(rasterization2_U0_fragment_x_V23_address0),
    .fragment_x_V23_ce0(rasterization2_U0_fragment_x_V23_ce0),
    .fragment_x_V23_we0(rasterization2_U0_fragment_x_V23_we0),
    .fragment_x_V23_d0(rasterization2_U0_fragment_x_V23_d0),
    .fragment_y_V24_address0(rasterization2_U0_fragment_y_V24_address0),
    .fragment_y_V24_ce0(rasterization2_U0_fragment_y_V24_ce0),
    .fragment_y_V24_we0(rasterization2_U0_fragment_y_V24_we0),
    .fragment_y_V24_d0(rasterization2_U0_fragment_y_V24_d0),
    .fragment_z_V25_address0(rasterization2_U0_fragment_z_V25_address0),
    .fragment_z_V25_ce0(rasterization2_U0_fragment_z_V25_ce0),
    .fragment_z_V25_we0(rasterization2_U0_fragment_z_V25_we0),
    .fragment_z_V25_d0(rasterization2_U0_fragment_z_V25_d0),
    .fragment_color_V26_address0(rasterization2_U0_fragment_color_V26_address0),
    .fragment_color_V26_ce0(rasterization2_U0_fragment_color_V26_ce0),
    .fragment_color_V26_we0(rasterization2_U0_fragment_color_V26_we0),
    .fragment_color_V26_d0(rasterization2_U0_fragment_color_V26_d0),
    .ap_return(rasterization2_U0_ap_return)
);

rendering_zculling zculling_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(zculling_U0_ap_start),
    .ap_done(zculling_U0_ap_done),
    .ap_continue(zculling_U0_ap_continue),
    .ap_idle(zculling_U0_ap_idle),
    .ap_ready(zculling_U0_ap_ready),
    .i_V_dout(i_V_c_dout),
    .i_V_empty_n(i_V_c_empty_n),
    .i_V_read(zculling_U0_i_V_read),
    .fragment_x_V23_address0(zculling_U0_fragment_x_V23_address0),
    .fragment_x_V23_ce0(zculling_U0_fragment_x_V23_ce0),
    .fragment_x_V23_q0(fragment_x_V_t_q0),
    .fragment_y_V24_address0(zculling_U0_fragment_y_V24_address0),
    .fragment_y_V24_ce0(zculling_U0_fragment_y_V24_ce0),
    .fragment_y_V24_q0(fragment_y_V_t_q0),
    .fragment_z_V25_address0(zculling_U0_fragment_z_V25_address0),
    .fragment_z_V25_ce0(zculling_U0_fragment_z_V25_ce0),
    .fragment_z_V25_q0(fragment_z_V_t_q0),
    .fragment_color_V26_address0(zculling_U0_fragment_color_V26_address0),
    .fragment_color_V26_ce0(zculling_U0_fragment_color_V26_ce0),
    .fragment_color_V26_q0(fragment_color_V_t_q0),
    .p_read1(ref_tmp5722_channel_dout),
    .pixels_x_V28_address0(zculling_U0_pixels_x_V28_address0),
    .pixels_x_V28_ce0(zculling_U0_pixels_x_V28_ce0),
    .pixels_x_V28_we0(zculling_U0_pixels_x_V28_we0),
    .pixels_x_V28_d0(zculling_U0_pixels_x_V28_d0),
    .pixels_y_V29_address0(zculling_U0_pixels_y_V29_address0),
    .pixels_y_V29_ce0(zculling_U0_pixels_y_V29_ce0),
    .pixels_y_V29_we0(zculling_U0_pixels_y_V29_we0),
    .pixels_y_V29_d0(zculling_U0_pixels_y_V29_d0),
    .pixels_color_V30_address0(zculling_U0_pixels_color_V30_address0),
    .pixels_color_V30_ce0(zculling_U0_pixels_color_V30_ce0),
    .pixels_color_V30_we0(zculling_U0_pixels_color_V30_we0),
    .pixels_color_V30_d0(zculling_U0_pixels_color_V30_d0),
    .i_V_out_din(zculling_U0_i_V_out_din),
    .i_V_out_full_n(i_V_c1_full_n),
    .i_V_out_write(zculling_U0_i_V_out_write),
    .ap_return(zculling_U0_ap_return)
);

rendering_coloringFB coloringFB_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(coloringFB_U0_ap_start),
    .ap_done(coloringFB_U0_ap_done),
    .ap_continue(coloringFB_U0_ap_continue),
    .ap_idle(coloringFB_U0_ap_idle),
    .ap_ready(coloringFB_U0_ap_ready),
    .i_V_dout(i_V_c1_dout),
    .i_V_empty_n(i_V_c1_empty_n),
    .i_V_read(coloringFB_U0_i_V_read),
    .p_read(ref_tmp6327_channel_dout),
    .pixels_x_V28_address0(coloringFB_U0_pixels_x_V28_address0),
    .pixels_x_V28_ce0(coloringFB_U0_pixels_x_V28_ce0),
    .pixels_x_V28_q0(pixels_x_V_t_q0),
    .pixels_y_V29_address0(coloringFB_U0_pixels_y_V29_address0),
    .pixels_y_V29_ce0(coloringFB_U0_pixels_y_V29_ce0),
    .pixels_y_V29_q0(pixels_y_V_t_q0),
    .pixels_color_V30_address0(coloringFB_U0_pixels_color_V30_address0),
    .pixels_color_V30_ce0(coloringFB_U0_pixels_color_V30_ce0),
    .pixels_color_V30_q0(pixels_color_V_t_q0),
    .frame_buffer_V_address0(coloringFB_U0_frame_buffer_V_address0),
    .frame_buffer_V_ce0(coloringFB_U0_frame_buffer_V_ce0),
    .frame_buffer_V_we0(coloringFB_U0_frame_buffer_V_we0),
    .frame_buffer_V_d0(coloringFB_U0_frame_buffer_V_d0),
    .frame_buffer_V_address1(coloringFB_U0_frame_buffer_V_address1),
    .frame_buffer_V_ce1(coloringFB_U0_frame_buffer_V_ce1),
    .frame_buffer_V_we1(coloringFB_U0_frame_buffer_V_we1),
    .frame_buffer_V_d1(coloringFB_U0_frame_buffer_V_d1)
);

rendering_fifo_w12_d4_S i_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_i_V_out_din),
    .if_full_n(i_V_c_full_n),
    .if_write(projection_U0_i_V_out_write),
    .if_dout(i_V_c_dout),
    .if_empty_n(i_V_c_empty_n),
    .if_read(zculling_U0_i_V_read)
);

rendering_fifo_w8_d2_S triangle_2ds_x0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_ap_return_0),
    .if_full_n(triangle_2ds_x0_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_x0_V),
    .if_dout(triangle_2ds_x0_V_dout),
    .if_empty_n(triangle_2ds_x0_V_empty_n),
    .if_read(rasterization1_U0_ap_ready)
);

rendering_fifo_w8_d2_S triangle_2ds_y0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_ap_return_1),
    .if_full_n(triangle_2ds_y0_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_y0_V),
    .if_dout(triangle_2ds_y0_V_dout),
    .if_empty_n(triangle_2ds_y0_V_empty_n),
    .if_read(rasterization1_U0_ap_ready)
);

rendering_fifo_w8_d2_S triangle_2ds_x1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_ap_return_2),
    .if_full_n(triangle_2ds_x1_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_x1_V),
    .if_dout(triangle_2ds_x1_V_dout),
    .if_empty_n(triangle_2ds_x1_V_empty_n),
    .if_read(rasterization1_U0_ap_ready)
);

rendering_fifo_w8_d2_S triangle_2ds_y1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_ap_return_3),
    .if_full_n(triangle_2ds_y1_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_y1_V),
    .if_dout(triangle_2ds_y1_V_dout),
    .if_empty_n(triangle_2ds_y1_V_empty_n),
    .if_read(rasterization1_U0_ap_ready)
);

rendering_fifo_w8_d2_S triangle_2ds_x2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_ap_return_4),
    .if_full_n(triangle_2ds_x2_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_x2_V),
    .if_dout(triangle_2ds_x2_V_dout),
    .if_empty_n(triangle_2ds_x2_V_empty_n),
    .if_read(rasterization1_U0_ap_ready)
);

rendering_fifo_w8_d2_S triangle_2ds_y2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_ap_return_5),
    .if_full_n(triangle_2ds_y2_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_y2_V),
    .if_dout(triangle_2ds_y2_V_dout),
    .if_empty_n(triangle_2ds_y2_V_empty_n),
    .if_read(rasterization1_U0_ap_ready)
);

rendering_fifo_w8_d2_S triangle_2ds_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(projection_U0_ap_return_6),
    .if_full_n(triangle_2ds_z_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_z_V),
    .if_dout(triangle_2ds_z_V_dout),
    .if_empty_n(triangle_2ds_z_V_empty_n),
    .if_read(rasterization1_U0_ap_ready)
);

rendering_fifo_w1_d2_S ref_tmp548_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rasterization1_U0_ap_return_0),
    .if_full_n(ref_tmp548_channel_full_n),
    .if_write(ap_channel_done_ref_tmp548_channel),
    .if_dout(ref_tmp548_channel_dout),
    .if_empty_n(ref_tmp548_channel_empty_n),
    .if_read(rasterization2_U0_ap_ready)
);

rendering_fifo_w8_d2_S max_min_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rasterization1_U0_ap_return_1),
    .if_full_n(max_min_V_0_full_n),
    .if_write(ap_channel_done_max_min_V_0),
    .if_dout(max_min_V_0_dout),
    .if_empty_n(max_min_V_0_empty_n),
    .if_read(rasterization2_U0_ap_ready)
);

rendering_fifo_w8_d2_S max_min_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rasterization1_U0_ap_return_2),
    .if_full_n(max_min_V_2_full_n),
    .if_write(ap_channel_done_max_min_V_2),
    .if_dout(max_min_V_2_dout),
    .if_empty_n(max_min_V_2_empty_n),
    .if_read(rasterization2_U0_ap_ready)
);

rendering_fifo_w8_d2_S max_min_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rasterization1_U0_ap_return_3),
    .if_full_n(max_min_V_4_full_n),
    .if_write(ap_channel_done_max_min_V_4),
    .if_dout(max_min_V_4_dout),
    .if_empty_n(max_min_V_4_empty_n),
    .if_read(rasterization2_U0_ap_ready)
);

rendering_fifo_w8_d2_S triangle_2ds_same_x0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rasterization1_U0_ap_return_4),
    .if_full_n(triangle_2ds_same_x0_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_same_x0_V),
    .if_dout(triangle_2ds_same_x0_V_dout),
    .if_empty_n(triangle_2ds_same_x0_V_empty_n),
    .if_read(rasterization2_U0_ap_ready)
);

rendering_fifo_w8_d2_S triangle_2ds_same_y0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rasterization1_U0_ap_return_5),
    .if_full_n(triangle_2ds_same_y0_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_same_y0_V),
    .if_dout(triangle_2ds_same_y0_V_dout),
    .if_empty_n(triangle_2ds_same_y0_V_empty_n),
    .if_read(rasterization2_U0_ap_ready)
);

rendering_fifo_w8_d2_S triangle_2ds_same_x1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rasterization1_U0_ap_return_6),
    .if_full_n(triangle_2ds_same_x1_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_same_x1_V),
    .if_dout(triangle_2ds_same_x1_V_dout),
    .if_empty_n(triangle_2ds_same_x1_V_empty_n),
    .if_read(rasterization2_U0_ap_ready)
);

rendering_fifo_w8_d2_S triangle_2ds_same_y1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rasterization1_U0_ap_return_7),
    .if_full_n(triangle_2ds_same_y1_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_same_y1_V),
    .if_dout(triangle_2ds_same_y1_V_dout),
    .if_empty_n(triangle_2ds_same_y1_V_empty_n),
    .if_read(rasterization2_U0_ap_ready)
);

rendering_fifo_w8_d2_S triangle_2ds_same_x2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rasterization1_U0_ap_return_8),
    .if_full_n(triangle_2ds_same_x2_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_same_x2_V),
    .if_dout(triangle_2ds_same_x2_V_dout),
    .if_empty_n(triangle_2ds_same_x2_V_empty_n),
    .if_read(rasterization2_U0_ap_ready)
);

rendering_fifo_w8_d2_S triangle_2ds_same_y2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rasterization1_U0_ap_return_9),
    .if_full_n(triangle_2ds_same_y2_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_same_y2_V),
    .if_dout(triangle_2ds_same_y2_V_dout),
    .if_empty_n(triangle_2ds_same_y2_V_empty_n),
    .if_read(rasterization2_U0_ap_ready)
);

rendering_fifo_w8_d2_S triangle_2ds_same_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rasterization1_U0_ap_return_10),
    .if_full_n(triangle_2ds_same_z_V_full_n),
    .if_write(ap_channel_done_triangle_2ds_same_z_V),
    .if_dout(triangle_2ds_same_z_V_dout),
    .if_empty_n(triangle_2ds_same_z_V_empty_n),
    .if_read(rasterization2_U0_ap_ready)
);

rendering_fifo_w16_d2_S max_index_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rasterization1_U0_ap_return_11),
    .if_full_n(max_index_V_0_full_n),
    .if_write(ap_channel_done_max_index_V_0),
    .if_dout(max_index_V_0_dout),
    .if_empty_n(max_index_V_0_empty_n),
    .if_read(rasterization2_U0_ap_ready)
);

rendering_fifo_w16_d2_S ref_tmp5722_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rasterization2_U0_ap_return),
    .if_full_n(ref_tmp5722_channel_full_n),
    .if_write(ap_channel_done_ref_tmp5722_channel),
    .if_dout(ref_tmp5722_channel_dout),
    .if_empty_n(ref_tmp5722_channel_empty_n),
    .if_read(zculling_U0_ap_ready)
);

rendering_fifo_w12_d2_S i_V_c1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(zculling_U0_i_V_out_din),
    .if_full_n(i_V_c1_full_n),
    .if_write(zculling_U0_i_V_out_write),
    .if_dout(i_V_c1_dout),
    .if_empty_n(i_V_c1_empty_n),
    .if_read(coloringFB_U0_i_V_read)
);

rendering_fifo_w16_d2_S ref_tmp6327_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(zculling_U0_ap_return),
    .if_full_n(ref_tmp6327_channel_full_n),
    .if_write(ap_channel_done_ref_tmp6327_channel),
    .if_dout(ref_tmp6327_channel_dout),
    .if_empty_n(ref_tmp6327_channel_empty_n),
    .if_read(coloringFB_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_fragment_color_V <= 1'b0;
    end else begin
        if (((rasterization2_U0_ap_done & rasterization2_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_fragment_color_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_fragment_color_V <= ap_sync_channel_write_fragment_color_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_fragment_x_V <= 1'b0;
    end else begin
        if (((rasterization2_U0_ap_done & rasterization2_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_fragment_x_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_fragment_x_V <= ap_sync_channel_write_fragment_x_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_fragment_y_V <= 1'b0;
    end else begin
        if (((rasterization2_U0_ap_done & rasterization2_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_fragment_y_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_fragment_y_V <= ap_sync_channel_write_fragment_y_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_fragment_z_V <= 1'b0;
    end else begin
        if (((rasterization2_U0_ap_done & rasterization2_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_fragment_z_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_fragment_z_V <= ap_sync_channel_write_fragment_z_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_max_index_V_0 <= 1'b0;
    end else begin
        if (((rasterization1_U0_ap_done & rasterization1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_max_index_V_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_max_index_V_0 <= ap_sync_channel_write_max_index_V_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_max_min_V_0 <= 1'b0;
    end else begin
        if (((rasterization1_U0_ap_done & rasterization1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_max_min_V_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_max_min_V_0 <= ap_sync_channel_write_max_min_V_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_max_min_V_2 <= 1'b0;
    end else begin
        if (((rasterization1_U0_ap_done & rasterization1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_max_min_V_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_max_min_V_2 <= ap_sync_channel_write_max_min_V_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_max_min_V_4 <= 1'b0;
    end else begin
        if (((rasterization1_U0_ap_done & rasterization1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_max_min_V_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_max_min_V_4 <= ap_sync_channel_write_max_min_V_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_pixels_color_V <= 1'b0;
    end else begin
        if (((zculling_U0_ap_done & zculling_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_pixels_color_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_pixels_color_V <= ap_sync_channel_write_pixels_color_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_pixels_x_V <= 1'b0;
    end else begin
        if (((zculling_U0_ap_done & zculling_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_pixels_x_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_pixels_x_V <= ap_sync_channel_write_pixels_x_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_pixels_y_V <= 1'b0;
    end else begin
        if (((zculling_U0_ap_done & zculling_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_pixels_y_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_pixels_y_V <= ap_sync_channel_write_pixels_y_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ref_tmp548_channel <= 1'b0;
    end else begin
        if (((rasterization1_U0_ap_done & rasterization1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ref_tmp548_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ref_tmp548_channel <= ap_sync_channel_write_ref_tmp548_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ref_tmp5722_channel <= 1'b0;
    end else begin
        if (((rasterization2_U0_ap_done & rasterization2_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ref_tmp5722_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ref_tmp5722_channel <= ap_sync_channel_write_ref_tmp5722_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ref_tmp6327_channel <= 1'b0;
    end else begin
        if (((zculling_U0_ap_done & zculling_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ref_tmp6327_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ref_tmp6327_channel <= ap_sync_channel_write_ref_tmp6327_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_same_x0_V <= 1'b0;
    end else begin
        if (((rasterization1_U0_ap_done & rasterization1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_same_x0_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_same_x0_V <= ap_sync_channel_write_triangle_2ds_same_x0_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_same_x1_V <= 1'b0;
    end else begin
        if (((rasterization1_U0_ap_done & rasterization1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_same_x1_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_same_x1_V <= ap_sync_channel_write_triangle_2ds_same_x1_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_same_x2_V <= 1'b0;
    end else begin
        if (((rasterization1_U0_ap_done & rasterization1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_same_x2_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_same_x2_V <= ap_sync_channel_write_triangle_2ds_same_x2_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_same_y0_V <= 1'b0;
    end else begin
        if (((rasterization1_U0_ap_done & rasterization1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_same_y0_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_same_y0_V <= ap_sync_channel_write_triangle_2ds_same_y0_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_same_y1_V <= 1'b0;
    end else begin
        if (((rasterization1_U0_ap_done & rasterization1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_same_y1_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_same_y1_V <= ap_sync_channel_write_triangle_2ds_same_y1_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_same_y2_V <= 1'b0;
    end else begin
        if (((rasterization1_U0_ap_done & rasterization1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_same_y2_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_same_y2_V <= ap_sync_channel_write_triangle_2ds_same_y2_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_same_z_V <= 1'b0;
    end else begin
        if (((rasterization1_U0_ap_done & rasterization1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_same_z_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_same_z_V <= ap_sync_channel_write_triangle_2ds_same_z_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_x0_V <= 1'b0;
    end else begin
        if (((projection_U0_ap_done & projection_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_x0_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_x0_V <= ap_sync_channel_write_triangle_2ds_x0_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_x1_V <= 1'b0;
    end else begin
        if (((projection_U0_ap_done & projection_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_x1_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_x1_V <= ap_sync_channel_write_triangle_2ds_x1_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_x2_V <= 1'b0;
    end else begin
        if (((projection_U0_ap_done & projection_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_x2_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_x2_V <= ap_sync_channel_write_triangle_2ds_x2_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_y0_V <= 1'b0;
    end else begin
        if (((projection_U0_ap_done & projection_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_y0_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_y0_V <= ap_sync_channel_write_triangle_2ds_y0_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_y1_V <= 1'b0;
    end else begin
        if (((projection_U0_ap_done & projection_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_y1_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_y1_V <= ap_sync_channel_write_triangle_2ds_y1_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_y2_V <= 1'b0;
    end else begin
        if (((projection_U0_ap_done & projection_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_y2_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_y2_V <= ap_sync_channel_write_triangle_2ds_y2_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_triangle_2ds_z_V <= 1'b0;
    end else begin
        if (((projection_U0_ap_done & projection_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_triangle_2ds_z_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_triangle_2ds_z_V <= ap_sync_channel_write_triangle_2ds_z_V;
        end
    end
end

assign ap_channel_done_fragment_color_V = (rasterization2_U0_ap_done & (ap_sync_reg_channel_write_fragment_color_V ^ 1'b1));

assign ap_channel_done_fragment_x_V = (rasterization2_U0_ap_done & (ap_sync_reg_channel_write_fragment_x_V ^ 1'b1));

assign ap_channel_done_fragment_y_V = (rasterization2_U0_ap_done & (ap_sync_reg_channel_write_fragment_y_V ^ 1'b1));

assign ap_channel_done_fragment_z_V = (rasterization2_U0_ap_done & (ap_sync_reg_channel_write_fragment_z_V ^ 1'b1));

assign ap_channel_done_max_index_V_0 = (rasterization1_U0_ap_done & (ap_sync_reg_channel_write_max_index_V_0 ^ 1'b1));

assign ap_channel_done_max_min_V_0 = (rasterization1_U0_ap_done & (ap_sync_reg_channel_write_max_min_V_0 ^ 1'b1));

assign ap_channel_done_max_min_V_2 = (rasterization1_U0_ap_done & (ap_sync_reg_channel_write_max_min_V_2 ^ 1'b1));

assign ap_channel_done_max_min_V_4 = (rasterization1_U0_ap_done & (ap_sync_reg_channel_write_max_min_V_4 ^ 1'b1));

assign ap_channel_done_pixels_color_V = (zculling_U0_ap_done & (ap_sync_reg_channel_write_pixels_color_V ^ 1'b1));

assign ap_channel_done_pixels_x_V = (zculling_U0_ap_done & (ap_sync_reg_channel_write_pixels_x_V ^ 1'b1));

assign ap_channel_done_pixels_y_V = (zculling_U0_ap_done & (ap_sync_reg_channel_write_pixels_y_V ^ 1'b1));

assign ap_channel_done_ref_tmp548_channel = (rasterization1_U0_ap_done & (ap_sync_reg_channel_write_ref_tmp548_channel ^ 1'b1));

assign ap_channel_done_ref_tmp5722_channel = (rasterization2_U0_ap_done & (ap_sync_reg_channel_write_ref_tmp5722_channel ^ 1'b1));

assign ap_channel_done_ref_tmp6327_channel = (zculling_U0_ap_done & (ap_sync_reg_channel_write_ref_tmp6327_channel ^ 1'b1));

assign ap_channel_done_triangle_2ds_same_x0_V = (rasterization1_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_same_x0_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_same_x1_V = (rasterization1_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_same_x1_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_same_x2_V = (rasterization1_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_same_x2_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_same_y0_V = (rasterization1_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_same_y0_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_same_y1_V = (rasterization1_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_same_y1_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_same_y2_V = (rasterization1_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_same_y2_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_same_z_V = (rasterization1_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_same_z_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_x0_V = (projection_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_x0_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_x1_V = (projection_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_x1_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_x2_V = (projection_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_x2_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_y0_V = (projection_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_y0_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_y1_V = (projection_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_y1_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_y2_V = (projection_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_y2_V ^ 1'b1));

assign ap_channel_done_triangle_2ds_z_V = (projection_U0_ap_done & (ap_sync_reg_channel_write_triangle_2ds_z_V ^ 1'b1));

assign ap_done = coloringFB_U0_ap_done;

assign ap_idle = (zculling_U0_ap_idle & rasterization2_U0_ap_idle & rasterization1_U0_ap_idle & projection_U0_ap_idle & (ref_tmp6327_channel_empty_n ^ 1'b1) & (ref_tmp5722_channel_empty_n ^ 1'b1) & (max_index_V_0_empty_n ^ 1'b1) & (triangle_2ds_same_z_V_empty_n ^ 1'b1) & (triangle_2ds_same_y2_V_empty_n ^ 1'b1) & (triangle_2ds_same_x2_V_empty_n ^ 1'b1) & (triangle_2ds_same_y1_V_empty_n ^ 1'b1) & (triangle_2ds_same_x1_V_empty_n ^ 1'b1) & (triangle_2ds_same_y0_V_empty_n ^ 1'b1) & (triangle_2ds_same_x0_V_empty_n ^ 1'b1) & (max_min_V_4_empty_n ^ 1'b1) & (max_min_V_2_empty_n ^ 1'b1) & (max_min_V_0_empty_n ^ 1'b1) & (ref_tmp548_channel_empty_n ^ 1'b1) & (triangle_2ds_z_V_empty_n ^ 1'b1) & (triangle_2ds_y2_V_empty_n ^ 1'b1) & (triangle_2ds_x2_V_empty_n ^ 1'b1) & (triangle_2ds_y1_V_empty_n ^ 1'b1) & (triangle_2ds_x1_V_empty_n ^ 1'b1) & (triangle_2ds_y0_V_empty_n ^ 1'b1) & (triangle_2ds_x0_V_empty_n ^ 1'b1) & (pixels_color_V_t_empty_n ^ 1'b1) & (pixels_y_V_t_empty_n ^ 1'b1) & (pixels_x_V_t_empty_n ^ 1'b1) & (fragment_color_V_t_empty_n ^ 1'b1) & (fragment_z_V_t_empty_n ^ 1'b1) & (fragment_y_V_t_empty_n ^ 1'b1) & (fragment_x_V_t_empty_n ^ 1'b1) & coloringFB_U0_ap_idle);

assign ap_ready = projection_U0_ap_ready;

assign ap_sync_channel_write_fragment_color_V = ((rasterization2_U0_fragment_color_V26_full_n & ap_channel_done_fragment_color_V) | ap_sync_reg_channel_write_fragment_color_V);

assign ap_sync_channel_write_fragment_x_V = ((rasterization2_U0_fragment_x_V23_full_n & ap_channel_done_fragment_x_V) | ap_sync_reg_channel_write_fragment_x_V);

assign ap_sync_channel_write_fragment_y_V = ((rasterization2_U0_fragment_y_V24_full_n & ap_channel_done_fragment_y_V) | ap_sync_reg_channel_write_fragment_y_V);

assign ap_sync_channel_write_fragment_z_V = ((rasterization2_U0_fragment_z_V25_full_n & ap_channel_done_fragment_z_V) | ap_sync_reg_channel_write_fragment_z_V);

assign ap_sync_channel_write_max_index_V_0 = ((max_index_V_0_full_n & ap_channel_done_max_index_V_0) | ap_sync_reg_channel_write_max_index_V_0);

assign ap_sync_channel_write_max_min_V_0 = ((max_min_V_0_full_n & ap_channel_done_max_min_V_0) | ap_sync_reg_channel_write_max_min_V_0);

assign ap_sync_channel_write_max_min_V_2 = ((max_min_V_2_full_n & ap_channel_done_max_min_V_2) | ap_sync_reg_channel_write_max_min_V_2);

assign ap_sync_channel_write_max_min_V_4 = ((max_min_V_4_full_n & ap_channel_done_max_min_V_4) | ap_sync_reg_channel_write_max_min_V_4);

assign ap_sync_channel_write_pixels_color_V = ((zculling_U0_pixels_color_V30_full_n & ap_channel_done_pixels_color_V) | ap_sync_reg_channel_write_pixels_color_V);

assign ap_sync_channel_write_pixels_x_V = ((zculling_U0_pixels_x_V28_full_n & ap_channel_done_pixels_x_V) | ap_sync_reg_channel_write_pixels_x_V);

assign ap_sync_channel_write_pixels_y_V = ((zculling_U0_pixels_y_V29_full_n & ap_channel_done_pixels_y_V) | ap_sync_reg_channel_write_pixels_y_V);

assign ap_sync_channel_write_ref_tmp548_channel = ((ref_tmp548_channel_full_n & ap_channel_done_ref_tmp548_channel) | ap_sync_reg_channel_write_ref_tmp548_channel);

assign ap_sync_channel_write_ref_tmp5722_channel = ((ref_tmp5722_channel_full_n & ap_channel_done_ref_tmp5722_channel) | ap_sync_reg_channel_write_ref_tmp5722_channel);

assign ap_sync_channel_write_ref_tmp6327_channel = ((ref_tmp6327_channel_full_n & ap_channel_done_ref_tmp6327_channel) | ap_sync_reg_channel_write_ref_tmp6327_channel);

assign ap_sync_channel_write_triangle_2ds_same_x0_V = ((triangle_2ds_same_x0_V_full_n & ap_channel_done_triangle_2ds_same_x0_V) | ap_sync_reg_channel_write_triangle_2ds_same_x0_V);

assign ap_sync_channel_write_triangle_2ds_same_x1_V = ((triangle_2ds_same_x1_V_full_n & ap_channel_done_triangle_2ds_same_x1_V) | ap_sync_reg_channel_write_triangle_2ds_same_x1_V);

assign ap_sync_channel_write_triangle_2ds_same_x2_V = ((triangle_2ds_same_x2_V_full_n & ap_channel_done_triangle_2ds_same_x2_V) | ap_sync_reg_channel_write_triangle_2ds_same_x2_V);

assign ap_sync_channel_write_triangle_2ds_same_y0_V = ((triangle_2ds_same_y0_V_full_n & ap_channel_done_triangle_2ds_same_y0_V) | ap_sync_reg_channel_write_triangle_2ds_same_y0_V);

assign ap_sync_channel_write_triangle_2ds_same_y1_V = ((triangle_2ds_same_y1_V_full_n & ap_channel_done_triangle_2ds_same_y1_V) | ap_sync_reg_channel_write_triangle_2ds_same_y1_V);

assign ap_sync_channel_write_triangle_2ds_same_y2_V = ((triangle_2ds_same_y2_V_full_n & ap_channel_done_triangle_2ds_same_y2_V) | ap_sync_reg_channel_write_triangle_2ds_same_y2_V);

assign ap_sync_channel_write_triangle_2ds_same_z_V = ((triangle_2ds_same_z_V_full_n & ap_channel_done_triangle_2ds_same_z_V) | ap_sync_reg_channel_write_triangle_2ds_same_z_V);

assign ap_sync_channel_write_triangle_2ds_x0_V = ((triangle_2ds_x0_V_full_n & ap_channel_done_triangle_2ds_x0_V) | ap_sync_reg_channel_write_triangle_2ds_x0_V);

assign ap_sync_channel_write_triangle_2ds_x1_V = ((triangle_2ds_x1_V_full_n & ap_channel_done_triangle_2ds_x1_V) | ap_sync_reg_channel_write_triangle_2ds_x1_V);

assign ap_sync_channel_write_triangle_2ds_x2_V = ((triangle_2ds_x2_V_full_n & ap_channel_done_triangle_2ds_x2_V) | ap_sync_reg_channel_write_triangle_2ds_x2_V);

assign ap_sync_channel_write_triangle_2ds_y0_V = ((triangle_2ds_y0_V_full_n & ap_channel_done_triangle_2ds_y0_V) | ap_sync_reg_channel_write_triangle_2ds_y0_V);

assign ap_sync_channel_write_triangle_2ds_y1_V = ((triangle_2ds_y1_V_full_n & ap_channel_done_triangle_2ds_y1_V) | ap_sync_reg_channel_write_triangle_2ds_y1_V);

assign ap_sync_channel_write_triangle_2ds_y2_V = ((triangle_2ds_y2_V_full_n & ap_channel_done_triangle_2ds_y2_V) | ap_sync_reg_channel_write_triangle_2ds_y2_V);

assign ap_sync_channel_write_triangle_2ds_z_V = ((triangle_2ds_z_V_full_n & ap_channel_done_triangle_2ds_z_V) | ap_sync_reg_channel_write_triangle_2ds_z_V);

assign ap_sync_continue = ap_continue;

assign ap_sync_done = coloringFB_U0_ap_done;

assign ap_sync_ready = projection_U0_ap_ready;

assign coloringFB_U0_ap_continue = ap_continue;

assign coloringFB_U0_ap_start = (ref_tmp6327_channel_empty_n & pixels_y_V_t_empty_n & pixels_x_V_t_empty_n & pixels_color_V_t_empty_n);

assign coloringFB_U0_start_full_n = 1'b1;

assign coloringFB_U0_start_write = 1'b0;

assign frame_buffer_V_address0 = coloringFB_U0_frame_buffer_V_address0;

assign frame_buffer_V_address1 = coloringFB_U0_frame_buffer_V_address1;

assign frame_buffer_V_ce0 = coloringFB_U0_frame_buffer_V_ce0;

assign frame_buffer_V_ce1 = coloringFB_U0_frame_buffer_V_ce1;

assign frame_buffer_V_d0 = coloringFB_U0_frame_buffer_V_d0;

assign frame_buffer_V_d1 = coloringFB_U0_frame_buffer_V_d1;

assign frame_buffer_V_we0 = coloringFB_U0_frame_buffer_V_we0;

assign frame_buffer_V_we1 = coloringFB_U0_frame_buffer_V_we1;

assign m_axi_gmem_ARADDR = projection_U0_m_axi_gmem_ARADDR;

assign m_axi_gmem_ARBURST = projection_U0_m_axi_gmem_ARBURST;

assign m_axi_gmem_ARCACHE = projection_U0_m_axi_gmem_ARCACHE;

assign m_axi_gmem_ARID = projection_U0_m_axi_gmem_ARID;

assign m_axi_gmem_ARLEN = projection_U0_m_axi_gmem_ARLEN;

assign m_axi_gmem_ARLOCK = projection_U0_m_axi_gmem_ARLOCK;

assign m_axi_gmem_ARPROT = projection_U0_m_axi_gmem_ARPROT;

assign m_axi_gmem_ARQOS = projection_U0_m_axi_gmem_ARQOS;

assign m_axi_gmem_ARREGION = projection_U0_m_axi_gmem_ARREGION;

assign m_axi_gmem_ARSIZE = projection_U0_m_axi_gmem_ARSIZE;

assign m_axi_gmem_ARUSER = projection_U0_m_axi_gmem_ARUSER;

assign m_axi_gmem_ARVALID = projection_U0_m_axi_gmem_ARVALID;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_RREADY = projection_U0_m_axi_gmem_RREADY;

assign m_axi_gmem_WDATA = 512'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign projection_U0_ap_continue = (ap_sync_channel_write_triangle_2ds_z_V & ap_sync_channel_write_triangle_2ds_y2_V & ap_sync_channel_write_triangle_2ds_y1_V & ap_sync_channel_write_triangle_2ds_y0_V & ap_sync_channel_write_triangle_2ds_x2_V & ap_sync_channel_write_triangle_2ds_x1_V & ap_sync_channel_write_triangle_2ds_x0_V);

assign projection_U0_ap_start = ap_start;

assign projection_U0_start_full_n = 1'b1;

assign projection_U0_start_write = 1'b0;

assign rasterization1_U0_ap_continue = (ap_sync_channel_write_triangle_2ds_same_z_V & ap_sync_channel_write_triangle_2ds_same_y2_V & ap_sync_channel_write_triangle_2ds_same_y1_V & ap_sync_channel_write_triangle_2ds_same_y0_V & ap_sync_channel_write_triangle_2ds_same_x2_V & ap_sync_channel_write_triangle_2ds_same_x1_V & ap_sync_channel_write_triangle_2ds_same_x0_V & ap_sync_channel_write_ref_tmp548_channel & ap_sync_channel_write_max_min_V_4 & ap_sync_channel_write_max_min_V_2 & ap_sync_channel_write_max_min_V_0 & ap_sync_channel_write_max_index_V_0);

assign rasterization1_U0_ap_start = (triangle_2ds_z_V_empty_n & triangle_2ds_y2_V_empty_n & triangle_2ds_y1_V_empty_n & triangle_2ds_y0_V_empty_n & triangle_2ds_x2_V_empty_n & triangle_2ds_x1_V_empty_n & triangle_2ds_x0_V_empty_n);

assign rasterization1_U0_start_full_n = 1'b1;

assign rasterization1_U0_start_write = 1'b0;

assign rasterization2_U0_ap_continue = (ap_sync_channel_write_ref_tmp5722_channel & ap_sync_channel_write_fragment_z_V & ap_sync_channel_write_fragment_y_V & ap_sync_channel_write_fragment_x_V & ap_sync_channel_write_fragment_color_V);

assign rasterization2_U0_ap_start = (triangle_2ds_same_z_V_empty_n & triangle_2ds_same_y2_V_empty_n & triangle_2ds_same_y1_V_empty_n & triangle_2ds_same_y0_V_empty_n & triangle_2ds_same_x2_V_empty_n & triangle_2ds_same_x1_V_empty_n & triangle_2ds_same_x0_V_empty_n & ref_tmp548_channel_empty_n & max_min_V_4_empty_n & max_min_V_2_empty_n & max_min_V_0_empty_n & max_index_V_0_empty_n);

assign rasterization2_U0_fragment_color_V26_full_n = fragment_color_V_i_full_n;

assign rasterization2_U0_fragment_x_V23_full_n = fragment_x_V_i_full_n;

assign rasterization2_U0_fragment_y_V24_full_n = fragment_y_V_i_full_n;

assign rasterization2_U0_fragment_z_V25_full_n = fragment_z_V_i_full_n;

assign rasterization2_U0_start_full_n = 1'b1;

assign rasterization2_U0_start_write = 1'b0;

assign zculling_U0_ap_continue = (ap_sync_channel_write_ref_tmp6327_channel & ap_sync_channel_write_pixels_y_V & ap_sync_channel_write_pixels_x_V & ap_sync_channel_write_pixels_color_V);

assign zculling_U0_ap_start = (ref_tmp5722_channel_empty_n & fragment_z_V_t_empty_n & fragment_y_V_t_empty_n & fragment_x_V_t_empty_n & fragment_color_V_t_empty_n);

assign zculling_U0_pixels_color_V30_full_n = pixels_color_V_i_full_n;

assign zculling_U0_pixels_x_V28_full_n = pixels_x_V_i_full_n;

assign zculling_U0_pixels_y_V29_full_n = pixels_y_V_i_full_n;

assign zculling_U0_start_full_n = 1'b1;

assign zculling_U0_start_write = 1'b0;

endmodule //rendering_dataflow_in_loop_TRIANGLES
