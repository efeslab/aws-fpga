// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module face_detect_int_sqrt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        value_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [30:0] value_r;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] c_2_fu_260_p3;
reg   [3:0] c_2_reg_1588;
wire   [1:0] a_29_fu_268_p3;
reg   [1:0] a_29_reg_1593;
reg   [1:0] r_1_reg_1599;
reg   [1:0] r_2_reg_1604;
reg   [1:0] r_3_reg_1610;
reg   [1:0] r_4_reg_1616;
reg   [1:0] r_5_reg_1622;
reg   [1:0] r_6_reg_1628;
reg   [1:0] r_7_reg_1634;
reg   [1:0] r_8_reg_1640;
reg   [1:0] r_9_reg_1646;
reg   [1:0] r_10_reg_1652;
reg   [1:0] r_11_reg_1658;
reg   [1:0] r_12_reg_1664;
reg   [1:0] r_13_reg_1670;
wire   [2:0] a_32_fu_480_p3;
reg   [2:0] a_32_reg_1676;
wire    ap_CS_fsm_state2;
wire   [0:0] xor_ln3408_2_fu_534_p2;
reg   [0:0] xor_ln3408_2_reg_1681;
wire   [29:0] c_8_fu_546_p3;
reg   [29:0] c_8_reg_1686;
wire   [27:0] trunc_ln3403_1_fu_554_p1;
reg   [27:0] trunc_ln3403_1_reg_1691;
wire   [29:0] c_14_fu_732_p3;
reg   [29:0] c_14_reg_1696;
wire    ap_CS_fsm_state3;
wire   [5:0] a_41_fu_740_p3;
reg   [5:0] a_41_reg_1701;
wire   [27:0] trunc_ln3403_3_fu_748_p1;
reg   [27:0] trunc_ln3403_3_reg_1707;
wire   [6:0] a_44_fu_824_p3;
reg   [6:0] a_44_reg_1712;
wire    ap_CS_fsm_state4;
wire   [0:0] xor_ln3408_6_fu_878_p2;
reg   [0:0] xor_ln3408_6_reg_1717;
wire   [29:0] c_20_fu_890_p3;
reg   [29:0] c_20_reg_1722;
wire   [27:0] trunc_ln3403_5_fu_898_p1;
reg   [27:0] trunc_ln3403_5_reg_1727;
wire   [8:0] a_50_fu_996_p3;
reg   [8:0] a_50_reg_1732;
wire    ap_CS_fsm_state5;
wire   [0:0] xor_ln3408_8_fu_1050_p2;
reg   [0:0] xor_ln3408_8_reg_1737;
wire   [29:0] c_26_fu_1062_p3;
reg   [29:0] c_26_reg_1742;
wire   [27:0] trunc_ln3403_7_fu_1070_p1;
reg   [27:0] trunc_ln3403_7_reg_1747;
wire   [10:0] a_56_fu_1168_p3;
reg   [10:0] a_56_reg_1752;
wire    ap_CS_fsm_state6;
wire   [0:0] xor_ln3408_10_fu_1222_p2;
reg   [0:0] xor_ln3408_10_reg_1757;
wire   [29:0] c_32_fu_1234_p3;
reg   [29:0] c_32_reg_1762;
wire   [27:0] trunc_ln3403_9_fu_1242_p1;
reg   [27:0] trunc_ln3403_9_reg_1767;
wire   [12:0] a_62_fu_1340_p3;
reg   [12:0] a_62_reg_1772;
wire    ap_CS_fsm_state7;
wire   [0:0] xor_ln3408_12_fu_1394_p2;
reg   [0:0] xor_ln3408_12_reg_1777;
wire   [29:0] c_38_fu_1406_p3;
reg   [29:0] c_38_reg_1782;
wire   [27:0] trunc_ln3403_11_fu_1414_p1;
reg   [27:0] trunc_ln3403_11_reg_1787;
wire   [1:0] r_fu_176_p4;
wire   [0:0] tmp_fu_198_p3;
wire   [2:0] shl_ln_fu_214_p3;
wire   [2:0] b_fu_222_p2;
wire   [31:0] c_fu_190_p3;
wire   [31:0] zext_ln3396_fu_228_p1;
wire   [0:0] icmp_ln3408_fu_236_p2;
wire   [3:0] zext_ln3403_fu_186_p1;
wire   [3:0] zext_ln3396_1_fu_232_p1;
wire   [1:0] a_fu_206_p3;
wire   [0:0] xor_ln3408_fu_242_p2;
wire   [3:0] c_1_fu_248_p2;
wire   [1:0] a_28_fu_254_p2;
wire  signed [5:0] tmp_24_fu_406_p3;
wire   [3:0] shl_ln3407_1_fu_427_p3;
wire   [3:0] b_1_fu_434_p2;
wire  signed [31:0] c_3_fu_412_p1;
wire   [31:0] zext_ln3396_2_fu_440_p1;
wire   [0:0] icmp_ln3408_1_fu_448_p2;
wire  signed [29:0] sext_ln3396_fu_416_p1;
wire   [29:0] zext_ln3396_3_fu_444_p1;
wire   [2:0] a_30_fu_420_p3;
wire   [0:0] xor_ln3408_1_fu_454_p2;
wire   [29:0] c_4_fu_460_p2;
wire   [2:0] a_31_fu_466_p2;
wire   [29:0] c_5_fu_472_p3;
wire   [27:0] trunc_ln3403_fu_488_p1;
wire   [4:0] shl_ln3407_2_fu_506_p3;
wire   [4:0] b_2_fu_514_p2;
wire   [31:0] c_6_fu_492_p3;
wire   [31:0] zext_ln3396_4_fu_520_p1;
wire   [0:0] icmp_ln3408_2_fu_528_p2;
wire   [29:0] or_ln3396_2_fu_499_p3;
wire   [29:0] zext_ln3396_5_fu_524_p1;
wire   [29:0] c_7_fu_540_p2;
wire   [3:0] a_33_fu_558_p3;
wire   [3:0] a_34_fu_565_p2;
wire   [3:0] a_35_fu_571_p3;
wire   [5:0] shl_ln3407_3_fu_598_p3;
wire   [5:0] b_3_fu_606_p2;
wire   [31:0] c_9_fu_578_p3;
wire   [31:0] zext_ln3396_6_fu_612_p1;
wire   [0:0] icmp_ln3408_3_fu_620_p2;
wire   [29:0] or_ln3396_3_fu_584_p3;
wire   [29:0] zext_ln3396_7_fu_616_p1;
wire   [4:0] a_36_fu_590_p3;
wire   [0:0] xor_ln3408_3_fu_626_p2;
wire   [29:0] c_10_fu_632_p2;
wire   [4:0] a_37_fu_638_p2;
wire   [29:0] c_11_fu_644_p3;
wire   [27:0] trunc_ln3403_2_fu_660_p1;
wire   [4:0] a_38_fu_652_p3;
wire   [6:0] shl_ln3407_4_fu_686_p3;
wire   [6:0] b_4_fu_694_p2;
wire   [31:0] c_12_fu_664_p3;
wire   [31:0] zext_ln3396_8_fu_700_p1;
wire   [0:0] icmp_ln3408_4_fu_708_p2;
wire   [29:0] or_ln3396_4_fu_671_p3;
wire   [29:0] zext_ln3396_9_fu_704_p1;
wire   [5:0] a_39_fu_678_p3;
wire   [0:0] xor_ln3408_4_fu_714_p2;
wire   [29:0] c_13_fu_720_p2;
wire   [5:0] a_40_fu_726_p2;
wire   [7:0] shl_ln3407_5_fu_771_p3;
wire   [7:0] b_5_fu_778_p2;
wire   [31:0] c_15_fu_752_p3;
wire   [31:0] zext_ln3396_10_fu_784_p1;
wire   [0:0] icmp_ln3408_5_fu_792_p2;
wire   [29:0] or_ln3396_5_fu_758_p3;
wire   [29:0] zext_ln3396_11_fu_788_p1;
wire   [6:0] a_42_fu_764_p3;
wire   [0:0] xor_ln3408_5_fu_798_p2;
wire   [29:0] c_16_fu_804_p2;
wire   [6:0] a_43_fu_810_p2;
wire   [29:0] c_17_fu_816_p3;
wire   [27:0] trunc_ln3403_4_fu_832_p1;
wire   [8:0] shl_ln3407_6_fu_850_p3;
wire   [8:0] b_6_fu_858_p2;
wire   [31:0] c_18_fu_836_p3;
wire   [31:0] zext_ln3396_12_fu_864_p1;
wire   [0:0] icmp_ln3408_6_fu_872_p2;
wire   [29:0] or_ln3396_6_fu_843_p3;
wire   [29:0] zext_ln3396_13_fu_868_p1;
wire   [29:0] c_19_fu_884_p2;
wire   [7:0] a_45_fu_902_p3;
wire   [7:0] a_46_fu_909_p2;
wire   [7:0] a_47_fu_915_p3;
wire   [9:0] shl_ln3407_7_fu_942_p3;
wire   [9:0] b_7_fu_950_p2;
wire   [31:0] c_21_fu_922_p3;
wire   [31:0] zext_ln3396_14_fu_956_p1;
wire   [0:0] icmp_ln3408_7_fu_964_p2;
wire   [29:0] or_ln3396_7_fu_928_p3;
wire   [29:0] zext_ln3396_15_fu_960_p1;
wire   [8:0] a_48_fu_934_p3;
wire   [0:0] xor_ln3408_7_fu_970_p2;
wire   [29:0] c_22_fu_976_p2;
wire   [8:0] a_49_fu_982_p2;
wire   [29:0] c_23_fu_988_p3;
wire   [27:0] trunc_ln3403_6_fu_1004_p1;
wire   [10:0] shl_ln3407_8_fu_1022_p3;
wire   [10:0] b_8_fu_1030_p2;
wire   [31:0] c_24_fu_1008_p3;
wire   [31:0] zext_ln3396_16_fu_1036_p1;
wire   [0:0] icmp_ln3408_8_fu_1044_p2;
wire   [29:0] or_ln3396_8_fu_1015_p3;
wire   [29:0] zext_ln3396_17_fu_1040_p1;
wire   [29:0] c_25_fu_1056_p2;
wire   [9:0] a_51_fu_1074_p3;
wire   [9:0] a_52_fu_1081_p2;
wire   [9:0] a_53_fu_1087_p3;
wire   [11:0] shl_ln3407_9_fu_1114_p3;
wire   [11:0] b_9_fu_1122_p2;
wire   [31:0] c_27_fu_1094_p3;
wire   [31:0] zext_ln3396_18_fu_1128_p1;
wire   [0:0] icmp_ln3408_9_fu_1136_p2;
wire   [29:0] or_ln3396_9_fu_1100_p3;
wire   [29:0] zext_ln3396_19_fu_1132_p1;
wire   [10:0] a_54_fu_1106_p3;
wire   [0:0] xor_ln3408_9_fu_1142_p2;
wire   [29:0] c_28_fu_1148_p2;
wire   [10:0] a_55_fu_1154_p2;
wire   [29:0] c_29_fu_1160_p3;
wire   [27:0] trunc_ln3403_8_fu_1176_p1;
wire   [12:0] shl_ln3407_s_fu_1194_p3;
wire   [12:0] b_10_fu_1202_p2;
wire   [31:0] c_30_fu_1180_p3;
wire   [31:0] zext_ln3396_20_fu_1208_p1;
wire   [0:0] icmp_ln3408_10_fu_1216_p2;
wire   [29:0] or_ln3396_s_fu_1187_p3;
wire   [29:0] zext_ln3396_21_fu_1212_p1;
wire   [29:0] c_31_fu_1228_p2;
wire   [11:0] a_57_fu_1246_p3;
wire   [11:0] a_58_fu_1253_p2;
wire   [11:0] a_59_fu_1259_p3;
wire   [13:0] shl_ln3407_10_fu_1286_p3;
wire   [13:0] b_11_fu_1294_p2;
wire   [31:0] c_33_fu_1266_p3;
wire   [31:0] zext_ln3396_22_fu_1300_p1;
wire   [0:0] icmp_ln3408_11_fu_1308_p2;
wire   [29:0] or_ln3396_1_fu_1272_p3;
wire   [29:0] zext_ln3396_23_fu_1304_p1;
wire   [12:0] a_60_fu_1278_p3;
wire   [0:0] xor_ln3408_11_fu_1314_p2;
wire   [29:0] c_34_fu_1320_p2;
wire   [12:0] a_61_fu_1326_p2;
wire   [29:0] c_35_fu_1332_p3;
wire   [27:0] trunc_ln3403_10_fu_1348_p1;
wire   [14:0] shl_ln3407_11_fu_1366_p3;
wire   [14:0] b_12_fu_1374_p2;
wire   [31:0] c_36_fu_1352_p3;
wire   [31:0] zext_ln3396_24_fu_1380_p1;
wire   [0:0] icmp_ln3408_12_fu_1388_p2;
wire   [29:0] or_ln3396_10_fu_1359_p3;
wire   [29:0] zext_ln3396_25_fu_1384_p1;
wire   [29:0] c_37_fu_1400_p2;
wire    ap_CS_fsm_state8;
wire   [13:0] a_63_fu_1421_p3;
wire   [13:0] a_64_fu_1428_p2;
wire   [13:0] a_65_fu_1434_p3;
wire   [15:0] shl_ln3407_12_fu_1461_p3;
wire   [15:0] b_13_fu_1469_p2;
wire   [31:0] c_39_fu_1441_p3;
wire   [31:0] zext_ln3396_26_fu_1475_p1;
wire   [0:0] icmp_ln3408_13_fu_1483_p2;
wire   [29:0] or_ln3396_11_fu_1447_p3;
wire   [29:0] zext_ln3396_27_fu_1479_p1;
wire   [14:0] a_66_fu_1453_p3;
wire   [0:0] xor_ln3408_13_fu_1489_p2;
wire   [29:0] c_40_fu_1495_p2;
wire   [14:0] a_67_fu_1501_p2;
wire   [29:0] c_41_fu_1507_p3;
wire   [1:0] r_14_fu_1418_p1;
wire   [14:0] a_68_fu_1515_p3;
wire   [16:0] shl_ln3407_13_fu_1539_p3;
wire   [16:0] b_14_fu_1547_p2;
wire   [31:0] c_42_fu_1523_p3;
wire   [31:0] zext_ln3396_28_fu_1553_p1;
wire   [0:0] icmp_ln3408_14_fu_1557_p2;
wire   [15:0] a_69_fu_1531_p3;
wire   [0:0] xor_ln3408_14_fu_1563_p2;
wire   [15:0] or_ln3411_fu_1569_p2;
reg   [7:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        a_29_reg_1593 <= a_29_fu_268_p3;
        c_2_reg_1588 <= c_2_fu_260_p3;
        r_10_reg_1652 <= {{value_r[9:8]}};
        r_11_reg_1658 <= {{value_r[7:6]}};
        r_12_reg_1664 <= {{value_r[5:4]}};
        r_13_reg_1670 <= {{value_r[3:2]}};
        r_1_reg_1599 <= {{value_r[27:26]}};
        r_2_reg_1604 <= {{value_r[25:24]}};
        r_3_reg_1610 <= {{value_r[23:22]}};
        r_4_reg_1616 <= {{value_r[21:20]}};
        r_5_reg_1622 <= {{value_r[19:18]}};
        r_6_reg_1628 <= {{value_r[17:16]}};
        r_7_reg_1634 <= {{value_r[15:14]}};
        r_8_reg_1640 <= {{value_r[13:12]}};
        r_9_reg_1646 <= {{value_r[11:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        a_32_reg_1676 <= a_32_fu_480_p3;
        c_8_reg_1686 <= c_8_fu_546_p3;
        trunc_ln3403_1_reg_1691 <= trunc_ln3403_1_fu_554_p1;
        xor_ln3408_2_reg_1681 <= xor_ln3408_2_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        a_41_reg_1701 <= a_41_fu_740_p3;
        c_14_reg_1696 <= c_14_fu_732_p3;
        trunc_ln3403_3_reg_1707 <= trunc_ln3403_3_fu_748_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        a_44_reg_1712 <= a_44_fu_824_p3;
        c_20_reg_1722 <= c_20_fu_890_p3;
        trunc_ln3403_5_reg_1727 <= trunc_ln3403_5_fu_898_p1;
        xor_ln3408_6_reg_1717 <= xor_ln3408_6_fu_878_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        a_50_reg_1732 <= a_50_fu_996_p3;
        c_26_reg_1742 <= c_26_fu_1062_p3;
        trunc_ln3403_7_reg_1747 <= trunc_ln3403_7_fu_1070_p1;
        xor_ln3408_8_reg_1737 <= xor_ln3408_8_fu_1050_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        a_56_reg_1752 <= a_56_fu_1168_p3;
        c_32_reg_1762 <= c_32_fu_1234_p3;
        trunc_ln3403_9_reg_1767 <= trunc_ln3403_9_fu_1242_p1;
        xor_ln3408_10_reg_1757 <= xor_ln3408_10_fu_1222_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        a_62_reg_1772 <= a_62_fu_1340_p3;
        c_38_reg_1782 <= c_38_fu_1406_p3;
        trunc_ln3403_11_reg_1787 <= trunc_ln3403_11_fu_1414_p1;
        xor_ln3408_12_reg_1777 <= xor_ln3408_12_fu_1394_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_28_fu_254_p2 = (2'd1 | a_fu_206_p3);

assign a_29_fu_268_p3 = ((xor_ln3408_fu_242_p2[0:0] == 1'b1) ? a_28_fu_254_p2 : a_fu_206_p3);

assign a_30_fu_420_p3 = {{a_29_reg_1593}, {1'd0}};

assign a_31_fu_466_p2 = (3'd1 | a_30_fu_420_p3);

assign a_32_fu_480_p3 = ((xor_ln3408_1_fu_454_p2[0:0] == 1'b1) ? a_31_fu_466_p2 : a_30_fu_420_p3);

assign a_33_fu_558_p3 = {{a_32_reg_1676}, {1'd0}};

assign a_34_fu_565_p2 = (4'd1 | a_33_fu_558_p3);

assign a_35_fu_571_p3 = ((xor_ln3408_2_reg_1681[0:0] == 1'b1) ? a_34_fu_565_p2 : a_33_fu_558_p3);

assign a_36_fu_590_p3 = {{a_35_fu_571_p3}, {1'd0}};

assign a_37_fu_638_p2 = (5'd1 | a_36_fu_590_p3);

assign a_38_fu_652_p3 = ((xor_ln3408_3_fu_626_p2[0:0] == 1'b1) ? a_37_fu_638_p2 : a_36_fu_590_p3);

assign a_39_fu_678_p3 = {{a_38_fu_652_p3}, {1'd0}};

assign a_40_fu_726_p2 = (6'd1 | a_39_fu_678_p3);

assign a_41_fu_740_p3 = ((xor_ln3408_4_fu_714_p2[0:0] == 1'b1) ? a_40_fu_726_p2 : a_39_fu_678_p3);

assign a_42_fu_764_p3 = {{a_41_reg_1701}, {1'd0}};

assign a_43_fu_810_p2 = (7'd1 | a_42_fu_764_p3);

assign a_44_fu_824_p3 = ((xor_ln3408_5_fu_798_p2[0:0] == 1'b1) ? a_43_fu_810_p2 : a_42_fu_764_p3);

assign a_45_fu_902_p3 = {{a_44_reg_1712}, {1'd0}};

assign a_46_fu_909_p2 = (8'd1 | a_45_fu_902_p3);

assign a_47_fu_915_p3 = ((xor_ln3408_6_reg_1717[0:0] == 1'b1) ? a_46_fu_909_p2 : a_45_fu_902_p3);

assign a_48_fu_934_p3 = {{a_47_fu_915_p3}, {1'd0}};

assign a_49_fu_982_p2 = (9'd1 | a_48_fu_934_p3);

assign a_50_fu_996_p3 = ((xor_ln3408_7_fu_970_p2[0:0] == 1'b1) ? a_49_fu_982_p2 : a_48_fu_934_p3);

assign a_51_fu_1074_p3 = {{a_50_reg_1732}, {1'd0}};

assign a_52_fu_1081_p2 = (10'd1 | a_51_fu_1074_p3);

assign a_53_fu_1087_p3 = ((xor_ln3408_8_reg_1737[0:0] == 1'b1) ? a_52_fu_1081_p2 : a_51_fu_1074_p3);

assign a_54_fu_1106_p3 = {{a_53_fu_1087_p3}, {1'd0}};

assign a_55_fu_1154_p2 = (11'd1 | a_54_fu_1106_p3);

assign a_56_fu_1168_p3 = ((xor_ln3408_9_fu_1142_p2[0:0] == 1'b1) ? a_55_fu_1154_p2 : a_54_fu_1106_p3);

assign a_57_fu_1246_p3 = {{a_56_reg_1752}, {1'd0}};

assign a_58_fu_1253_p2 = (12'd1 | a_57_fu_1246_p3);

assign a_59_fu_1259_p3 = ((xor_ln3408_10_reg_1757[0:0] == 1'b1) ? a_58_fu_1253_p2 : a_57_fu_1246_p3);

assign a_60_fu_1278_p3 = {{a_59_fu_1259_p3}, {1'd0}};

assign a_61_fu_1326_p2 = (13'd1 | a_60_fu_1278_p3);

assign a_62_fu_1340_p3 = ((xor_ln3408_11_fu_1314_p2[0:0] == 1'b1) ? a_61_fu_1326_p2 : a_60_fu_1278_p3);

assign a_63_fu_1421_p3 = {{a_62_reg_1772}, {1'd0}};

assign a_64_fu_1428_p2 = (14'd1 | a_63_fu_1421_p3);

assign a_65_fu_1434_p3 = ((xor_ln3408_12_reg_1777[0:0] == 1'b1) ? a_64_fu_1428_p2 : a_63_fu_1421_p3);

assign a_66_fu_1453_p3 = {{a_65_fu_1434_p3}, {1'd0}};

assign a_67_fu_1501_p2 = (15'd1 | a_66_fu_1453_p3);

assign a_68_fu_1515_p3 = ((xor_ln3408_13_fu_1489_p2[0:0] == 1'b1) ? a_67_fu_1501_p2 : a_66_fu_1453_p3);

assign a_69_fu_1531_p3 = {{a_68_fu_1515_p3}, {1'd0}};

assign a_fu_206_p3 = {{tmp_fu_198_p3}, {1'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_return = ((xor_ln3408_14_fu_1563_p2[0:0] == 1'b1) ? or_ln3411_fu_1569_p2 : a_69_fu_1531_p3);

assign b_10_fu_1202_p2 = (shl_ln3407_s_fu_1194_p3 | 13'd1);

assign b_11_fu_1294_p2 = (shl_ln3407_10_fu_1286_p3 | 14'd1);

assign b_12_fu_1374_p2 = (shl_ln3407_11_fu_1366_p3 | 15'd1);

assign b_13_fu_1469_p2 = (shl_ln3407_12_fu_1461_p3 | 16'd1);

assign b_14_fu_1547_p2 = (shl_ln3407_13_fu_1539_p3 | 17'd1);

assign b_1_fu_434_p2 = (shl_ln3407_1_fu_427_p3 | 4'd1);

assign b_2_fu_514_p2 = (shl_ln3407_2_fu_506_p3 | 5'd1);

assign b_3_fu_606_p2 = (shl_ln3407_3_fu_598_p3 | 6'd1);

assign b_4_fu_694_p2 = (shl_ln3407_4_fu_686_p3 | 7'd1);

assign b_5_fu_778_p2 = (shl_ln3407_5_fu_771_p3 | 8'd1);

assign b_6_fu_858_p2 = (shl_ln3407_6_fu_850_p3 | 9'd1);

assign b_7_fu_950_p2 = (shl_ln3407_7_fu_942_p3 | 10'd1);

assign b_8_fu_1030_p2 = (shl_ln3407_8_fu_1022_p3 | 11'd1);

assign b_9_fu_1122_p2 = (shl_ln3407_9_fu_1114_p3 | 12'd1);

assign b_fu_222_p2 = (shl_ln_fu_214_p3 | 3'd1);

assign c_10_fu_632_p2 = (or_ln3396_3_fu_584_p3 - zext_ln3396_7_fu_616_p1);

assign c_11_fu_644_p3 = ((xor_ln3408_3_fu_626_p2[0:0] == 1'b1) ? c_10_fu_632_p2 : or_ln3396_3_fu_584_p3);

assign c_12_fu_664_p3 = {{c_11_fu_644_p3}, {r_4_reg_1616}};

assign c_13_fu_720_p2 = (or_ln3396_4_fu_671_p3 - zext_ln3396_9_fu_704_p1);

assign c_14_fu_732_p3 = ((xor_ln3408_4_fu_714_p2[0:0] == 1'b1) ? c_13_fu_720_p2 : or_ln3396_4_fu_671_p3);

assign c_15_fu_752_p3 = {{c_14_reg_1696}, {r_5_reg_1622}};

assign c_16_fu_804_p2 = (or_ln3396_5_fu_758_p3 - zext_ln3396_11_fu_788_p1);

assign c_17_fu_816_p3 = ((xor_ln3408_5_fu_798_p2[0:0] == 1'b1) ? c_16_fu_804_p2 : or_ln3396_5_fu_758_p3);

assign c_18_fu_836_p3 = {{c_17_fu_816_p3}, {r_6_reg_1628}};

assign c_19_fu_884_p2 = (or_ln3396_6_fu_843_p3 - zext_ln3396_13_fu_868_p1);

assign c_1_fu_248_p2 = (zext_ln3403_fu_186_p1 - zext_ln3396_1_fu_232_p1);

assign c_20_fu_890_p3 = ((xor_ln3408_6_fu_878_p2[0:0] == 1'b1) ? c_19_fu_884_p2 : or_ln3396_6_fu_843_p3);

assign c_21_fu_922_p3 = {{c_20_reg_1722}, {r_7_reg_1634}};

assign c_22_fu_976_p2 = (or_ln3396_7_fu_928_p3 - zext_ln3396_15_fu_960_p1);

assign c_23_fu_988_p3 = ((xor_ln3408_7_fu_970_p2[0:0] == 1'b1) ? c_22_fu_976_p2 : or_ln3396_7_fu_928_p3);

assign c_24_fu_1008_p3 = {{c_23_fu_988_p3}, {r_8_reg_1640}};

assign c_25_fu_1056_p2 = (or_ln3396_8_fu_1015_p3 - zext_ln3396_17_fu_1040_p1);

assign c_26_fu_1062_p3 = ((xor_ln3408_8_fu_1050_p2[0:0] == 1'b1) ? c_25_fu_1056_p2 : or_ln3396_8_fu_1015_p3);

assign c_27_fu_1094_p3 = {{c_26_reg_1742}, {r_9_reg_1646}};

assign c_28_fu_1148_p2 = (or_ln3396_9_fu_1100_p3 - zext_ln3396_19_fu_1132_p1);

assign c_29_fu_1160_p3 = ((xor_ln3408_9_fu_1142_p2[0:0] == 1'b1) ? c_28_fu_1148_p2 : or_ln3396_9_fu_1100_p3);

assign c_2_fu_260_p3 = ((xor_ln3408_fu_242_p2[0:0] == 1'b1) ? c_1_fu_248_p2 : zext_ln3403_fu_186_p1);

assign c_30_fu_1180_p3 = {{c_29_fu_1160_p3}, {r_10_reg_1652}};

assign c_31_fu_1228_p2 = (or_ln3396_s_fu_1187_p3 - zext_ln3396_21_fu_1212_p1);

assign c_32_fu_1234_p3 = ((xor_ln3408_10_fu_1222_p2[0:0] == 1'b1) ? c_31_fu_1228_p2 : or_ln3396_s_fu_1187_p3);

assign c_33_fu_1266_p3 = {{c_32_reg_1762}, {r_11_reg_1658}};

assign c_34_fu_1320_p2 = (or_ln3396_1_fu_1272_p3 - zext_ln3396_23_fu_1304_p1);

assign c_35_fu_1332_p3 = ((xor_ln3408_11_fu_1314_p2[0:0] == 1'b1) ? c_34_fu_1320_p2 : or_ln3396_1_fu_1272_p3);

assign c_36_fu_1352_p3 = {{c_35_fu_1332_p3}, {r_12_reg_1664}};

assign c_37_fu_1400_p2 = (or_ln3396_10_fu_1359_p3 - zext_ln3396_25_fu_1384_p1);

assign c_38_fu_1406_p3 = ((xor_ln3408_12_fu_1394_p2[0:0] == 1'b1) ? c_37_fu_1400_p2 : or_ln3396_10_fu_1359_p3);

assign c_39_fu_1441_p3 = {{c_38_reg_1782}, {r_13_reg_1670}};

assign c_3_fu_412_p1 = tmp_24_fu_406_p3;

assign c_40_fu_1495_p2 = (or_ln3396_11_fu_1447_p3 - zext_ln3396_27_fu_1479_p1);

assign c_41_fu_1507_p3 = ((xor_ln3408_13_fu_1489_p2[0:0] == 1'b1) ? c_40_fu_1495_p2 : or_ln3396_11_fu_1447_p3);

assign c_42_fu_1523_p3 = {{c_41_fu_1507_p3}, {r_14_fu_1418_p1}};

assign c_4_fu_460_p2 = ($signed(sext_ln3396_fu_416_p1) - $signed(zext_ln3396_3_fu_444_p1));

assign c_5_fu_472_p3 = ((xor_ln3408_1_fu_454_p2[0:0] == 1'b1) ? c_4_fu_460_p2 : sext_ln3396_fu_416_p1);

assign c_6_fu_492_p3 = {{c_5_fu_472_p3}, {r_2_reg_1604}};

assign c_7_fu_540_p2 = (or_ln3396_2_fu_499_p3 - zext_ln3396_5_fu_524_p1);

assign c_8_fu_546_p3 = ((xor_ln3408_2_fu_534_p2[0:0] == 1'b1) ? c_7_fu_540_p2 : or_ln3396_2_fu_499_p3);

assign c_9_fu_578_p3 = {{c_8_reg_1686}, {r_3_reg_1610}};

assign c_fu_190_p3 = {{30'd0}, {r_fu_176_p4}};

assign icmp_ln3408_10_fu_1216_p2 = ((c_30_fu_1180_p3 < zext_ln3396_20_fu_1208_p1) ? 1'b1 : 1'b0);

assign icmp_ln3408_11_fu_1308_p2 = ((c_33_fu_1266_p3 < zext_ln3396_22_fu_1300_p1) ? 1'b1 : 1'b0);

assign icmp_ln3408_12_fu_1388_p2 = ((c_36_fu_1352_p3 < zext_ln3396_24_fu_1380_p1) ? 1'b1 : 1'b0);

assign icmp_ln3408_13_fu_1483_p2 = ((c_39_fu_1441_p3 < zext_ln3396_26_fu_1475_p1) ? 1'b1 : 1'b0);

assign icmp_ln3408_14_fu_1557_p2 = ((c_42_fu_1523_p3 < zext_ln3396_28_fu_1553_p1) ? 1'b1 : 1'b0);

assign icmp_ln3408_1_fu_448_p2 = ((c_3_fu_412_p1 < zext_ln3396_2_fu_440_p1) ? 1'b1 : 1'b0);

assign icmp_ln3408_2_fu_528_p2 = ((c_6_fu_492_p3 < zext_ln3396_4_fu_520_p1) ? 1'b1 : 1'b0);

assign icmp_ln3408_3_fu_620_p2 = ((c_9_fu_578_p3 < zext_ln3396_6_fu_612_p1) ? 1'b1 : 1'b0);

assign icmp_ln3408_4_fu_708_p2 = ((c_12_fu_664_p3 < zext_ln3396_8_fu_700_p1) ? 1'b1 : 1'b0);

assign icmp_ln3408_5_fu_792_p2 = ((c_15_fu_752_p3 < zext_ln3396_10_fu_784_p1) ? 1'b1 : 1'b0);

assign icmp_ln3408_6_fu_872_p2 = ((c_18_fu_836_p3 < zext_ln3396_12_fu_864_p1) ? 1'b1 : 1'b0);

assign icmp_ln3408_7_fu_964_p2 = ((c_21_fu_922_p3 < zext_ln3396_14_fu_956_p1) ? 1'b1 : 1'b0);

assign icmp_ln3408_8_fu_1044_p2 = ((c_24_fu_1008_p3 < zext_ln3396_16_fu_1036_p1) ? 1'b1 : 1'b0);

assign icmp_ln3408_9_fu_1136_p2 = ((c_27_fu_1094_p3 < zext_ln3396_18_fu_1128_p1) ? 1'b1 : 1'b0);

assign icmp_ln3408_fu_236_p2 = ((c_fu_190_p3 < zext_ln3396_fu_228_p1) ? 1'b1 : 1'b0);

assign or_ln3396_10_fu_1359_p3 = {{trunc_ln3403_10_fu_1348_p1}, {r_12_reg_1664}};

assign or_ln3396_11_fu_1447_p3 = {{trunc_ln3403_11_reg_1787}, {r_13_reg_1670}};

assign or_ln3396_1_fu_1272_p3 = {{trunc_ln3403_9_reg_1767}, {r_11_reg_1658}};

assign or_ln3396_2_fu_499_p3 = {{trunc_ln3403_fu_488_p1}, {r_2_reg_1604}};

assign or_ln3396_3_fu_584_p3 = {{trunc_ln3403_1_reg_1691}, {r_3_reg_1610}};

assign or_ln3396_4_fu_671_p3 = {{trunc_ln3403_2_fu_660_p1}, {r_4_reg_1616}};

assign or_ln3396_5_fu_758_p3 = {{trunc_ln3403_3_reg_1707}, {r_5_reg_1622}};

assign or_ln3396_6_fu_843_p3 = {{trunc_ln3403_4_fu_832_p1}, {r_6_reg_1628}};

assign or_ln3396_7_fu_928_p3 = {{trunc_ln3403_5_reg_1727}, {r_7_reg_1634}};

assign or_ln3396_8_fu_1015_p3 = {{trunc_ln3403_6_fu_1004_p1}, {r_8_reg_1640}};

assign or_ln3396_9_fu_1100_p3 = {{trunc_ln3403_7_reg_1747}, {r_9_reg_1646}};

assign or_ln3396_s_fu_1187_p3 = {{trunc_ln3403_8_fu_1176_p1}, {r_10_reg_1652}};

assign or_ln3411_fu_1569_p2 = (16'd1 | a_69_fu_1531_p3);

assign r_14_fu_1418_p1 = value_r[1:0];

assign r_fu_176_p4 = {{value_r[29:28]}};

assign sext_ln3396_fu_416_p1 = tmp_24_fu_406_p3;

assign shl_ln3407_10_fu_1286_p3 = {{a_59_fu_1259_p3}, {2'd0}};

assign shl_ln3407_11_fu_1366_p3 = {{a_62_fu_1340_p3}, {2'd0}};

assign shl_ln3407_12_fu_1461_p3 = {{a_65_fu_1434_p3}, {2'd0}};

assign shl_ln3407_13_fu_1539_p3 = {{a_68_fu_1515_p3}, {2'd0}};

assign shl_ln3407_1_fu_427_p3 = {{a_29_reg_1593}, {2'd0}};

assign shl_ln3407_2_fu_506_p3 = {{a_32_fu_480_p3}, {2'd0}};

assign shl_ln3407_3_fu_598_p3 = {{a_35_fu_571_p3}, {2'd0}};

assign shl_ln3407_4_fu_686_p3 = {{a_38_fu_652_p3}, {2'd0}};

assign shl_ln3407_5_fu_771_p3 = {{a_41_reg_1701}, {2'd0}};

assign shl_ln3407_6_fu_850_p3 = {{a_44_fu_824_p3}, {2'd0}};

assign shl_ln3407_7_fu_942_p3 = {{a_47_fu_915_p3}, {2'd0}};

assign shl_ln3407_8_fu_1022_p3 = {{a_50_fu_996_p3}, {2'd0}};

assign shl_ln3407_9_fu_1114_p3 = {{a_53_fu_1087_p3}, {2'd0}};

assign shl_ln3407_s_fu_1194_p3 = {{a_56_fu_1168_p3}, {2'd0}};

assign shl_ln_fu_214_p3 = {{tmp_fu_198_p3}, {2'd0}};

assign tmp_24_fu_406_p3 = {{c_2_reg_1588}, {r_1_reg_1599}};

assign tmp_fu_198_p3 = value_r[32'd30];

assign trunc_ln3403_10_fu_1348_p1 = c_35_fu_1332_p3[27:0];

assign trunc_ln3403_11_fu_1414_p1 = c_38_fu_1406_p3[27:0];

assign trunc_ln3403_1_fu_554_p1 = c_8_fu_546_p3[27:0];

assign trunc_ln3403_2_fu_660_p1 = c_11_fu_644_p3[27:0];

assign trunc_ln3403_3_fu_748_p1 = c_14_fu_732_p3[27:0];

assign trunc_ln3403_4_fu_832_p1 = c_17_fu_816_p3[27:0];

assign trunc_ln3403_5_fu_898_p1 = c_20_fu_890_p3[27:0];

assign trunc_ln3403_6_fu_1004_p1 = c_23_fu_988_p3[27:0];

assign trunc_ln3403_7_fu_1070_p1 = c_26_fu_1062_p3[27:0];

assign trunc_ln3403_8_fu_1176_p1 = c_29_fu_1160_p3[27:0];

assign trunc_ln3403_9_fu_1242_p1 = c_32_fu_1234_p3[27:0];

assign trunc_ln3403_fu_488_p1 = c_5_fu_472_p3[27:0];

assign xor_ln3408_10_fu_1222_p2 = (icmp_ln3408_10_fu_1216_p2 ^ 1'd1);

assign xor_ln3408_11_fu_1314_p2 = (icmp_ln3408_11_fu_1308_p2 ^ 1'd1);

assign xor_ln3408_12_fu_1394_p2 = (icmp_ln3408_12_fu_1388_p2 ^ 1'd1);

assign xor_ln3408_13_fu_1489_p2 = (icmp_ln3408_13_fu_1483_p2 ^ 1'd1);

assign xor_ln3408_14_fu_1563_p2 = (icmp_ln3408_14_fu_1557_p2 ^ 1'd1);

assign xor_ln3408_1_fu_454_p2 = (icmp_ln3408_1_fu_448_p2 ^ 1'd1);

assign xor_ln3408_2_fu_534_p2 = (icmp_ln3408_2_fu_528_p2 ^ 1'd1);

assign xor_ln3408_3_fu_626_p2 = (icmp_ln3408_3_fu_620_p2 ^ 1'd1);

assign xor_ln3408_4_fu_714_p2 = (icmp_ln3408_4_fu_708_p2 ^ 1'd1);

assign xor_ln3408_5_fu_798_p2 = (icmp_ln3408_5_fu_792_p2 ^ 1'd1);

assign xor_ln3408_6_fu_878_p2 = (icmp_ln3408_6_fu_872_p2 ^ 1'd1);

assign xor_ln3408_7_fu_970_p2 = (icmp_ln3408_7_fu_964_p2 ^ 1'd1);

assign xor_ln3408_8_fu_1050_p2 = (icmp_ln3408_8_fu_1044_p2 ^ 1'd1);

assign xor_ln3408_9_fu_1142_p2 = (icmp_ln3408_9_fu_1136_p2 ^ 1'd1);

assign xor_ln3408_fu_242_p2 = (icmp_ln3408_fu_236_p2 ^ 1'd1);

assign zext_ln3396_10_fu_784_p1 = b_5_fu_778_p2;

assign zext_ln3396_11_fu_788_p1 = b_5_fu_778_p2;

assign zext_ln3396_12_fu_864_p1 = b_6_fu_858_p2;

assign zext_ln3396_13_fu_868_p1 = b_6_fu_858_p2;

assign zext_ln3396_14_fu_956_p1 = b_7_fu_950_p2;

assign zext_ln3396_15_fu_960_p1 = b_7_fu_950_p2;

assign zext_ln3396_16_fu_1036_p1 = b_8_fu_1030_p2;

assign zext_ln3396_17_fu_1040_p1 = b_8_fu_1030_p2;

assign zext_ln3396_18_fu_1128_p1 = b_9_fu_1122_p2;

assign zext_ln3396_19_fu_1132_p1 = b_9_fu_1122_p2;

assign zext_ln3396_1_fu_232_p1 = b_fu_222_p2;

assign zext_ln3396_20_fu_1208_p1 = b_10_fu_1202_p2;

assign zext_ln3396_21_fu_1212_p1 = b_10_fu_1202_p2;

assign zext_ln3396_22_fu_1300_p1 = b_11_fu_1294_p2;

assign zext_ln3396_23_fu_1304_p1 = b_11_fu_1294_p2;

assign zext_ln3396_24_fu_1380_p1 = b_12_fu_1374_p2;

assign zext_ln3396_25_fu_1384_p1 = b_12_fu_1374_p2;

assign zext_ln3396_26_fu_1475_p1 = b_13_fu_1469_p2;

assign zext_ln3396_27_fu_1479_p1 = b_13_fu_1469_p2;

assign zext_ln3396_28_fu_1553_p1 = b_14_fu_1547_p2;

assign zext_ln3396_2_fu_440_p1 = b_1_fu_434_p2;

assign zext_ln3396_3_fu_444_p1 = b_1_fu_434_p2;

assign zext_ln3396_4_fu_520_p1 = b_2_fu_514_p2;

assign zext_ln3396_5_fu_524_p1 = b_2_fu_514_p2;

assign zext_ln3396_6_fu_612_p1 = b_3_fu_606_p2;

assign zext_ln3396_7_fu_616_p1 = b_3_fu_606_p2;

assign zext_ln3396_8_fu_700_p1 = b_4_fu_694_p2;

assign zext_ln3396_9_fu_704_p1 = b_4_fu_694_p2;

assign zext_ln3396_fu_228_p1 = b_fu_222_p2;

assign zext_ln3403_fu_186_p1 = r_fu_176_p4;

endmodule //face_detect_int_sqrt
