// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module optical_flow_tensor_weight_y (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        out_product_dout,
        out_product_empty_n,
        out_product_read,
        tensor_y_din,
        tensor_y_full_n,
        tensor_y_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_pp0_stage0 = 8'd2;
parameter    ap_ST_fsm_pp0_stage1 = 8'd4;
parameter    ap_ST_fsm_pp0_stage2 = 8'd8;
parameter    ap_ST_fsm_pp0_stage3 = 8'd16;
parameter    ap_ST_fsm_pp0_stage4 = 8'd32;
parameter    ap_ST_fsm_pp0_stage5 = 8'd64;
parameter    ap_ST_fsm_state14 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [191:0] out_product_dout;
input   out_product_empty_n;
output   out_product_read;
output  [191:0] tensor_y_din;
input   tensor_y_full_n;
output   tensor_y_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg out_product_read;
reg tensor_y_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    out_product_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln261_reg_1231;
reg   [0:0] select_ln261_1_reg_1241;
reg    tensor_y_blk_n;
wire    ap_CS_fsm_pp0_stage5;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage5;
reg   [0:0] select_ln261_2_reg_1245;
reg   [0:0] select_ln261_2_reg_1245_pp0_iter1_reg;
reg   [18:0] indvar_flatten_reg_252;
reg   [8:0] r_reg_263;
reg   [10:0] c_reg_274;
reg  signed [31:0] tmp_val_0_V_3_reg_285;
reg  signed [31:0] tmp_val_0_V_3_reg_285_pp0_iter1_reg;
reg    ap_predicate_op64_read_state3;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state9_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg  signed [31:0] tmp_val_1_V_3_reg_298;
reg  signed [31:0] tmp_val_1_V_3_reg_298_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state10_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg  signed [31:0] tmp_val_2_V_3_reg_311;
reg  signed [31:0] tmp_val_3_V_3_reg_324;
reg  signed [31:0] tmp_val_4_V_3_reg_337;
reg  signed [31:0] tmp_val_5_V_reg_350;
wire   [31:0] buf_1_val_val_V_q0;
reg  signed [31:0] reg_363;
reg   [0:0] select_ln261_3_reg_1249;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state11_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state12_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_state13_pp0_stage5_iter1;
reg    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln261_reg_1231_pp0_iter1_reg;
reg   [0:0] select_ln261_3_reg_1249_pp0_iter1_reg;
wire   [31:0] buf_2_val_val_V_q0;
reg  signed [31:0] reg_367;
wire   [18:0] add_ln261_1_fu_371_p2;
reg   [18:0] add_ln261_1_reg_1226;
wire   [0:0] icmp_ln261_fu_417_p2;
wire   [10:0] select_ln261_fu_435_p3;
reg   [10:0] select_ln261_reg_1235;
wire   [0:0] select_ln261_1_fu_449_p3;
wire   [0:0] select_ln261_2_fu_463_p3;
wire   [0:0] select_ln261_3_fu_499_p3;
wire   [8:0] select_ln261_4_fu_507_p3;
reg   [8:0] select_ln261_4_reg_1259;
wire   [9:0] trunc_ln872_fu_515_p1;
reg   [9:0] trunc_ln872_reg_1264;
wire   [12:0] sub_ln872_fu_537_p2;
reg   [12:0] sub_ln872_reg_1269;
reg   [12:0] buf_1_val_val_V_addr_reg_1278;
wire   [10:0] add_ln263_fu_604_p2;
reg   [10:0] add_ln263_reg_1314;
reg   [12:0] buf_1_val_val_V_addr_1_reg_1319;
reg   [12:0] buf_1_val_val_V_addr_2_reg_1330;
reg   [12:0] buf_1_val_val_V_addr_3_reg_1351;
reg   [31:0] tmp_2_reg_1362;
wire   [50:0] grp_fu_645_p2;
reg   [50:0] mul_ln703_reg_1372;
reg   [12:0] buf_1_val_val_V_addr_4_reg_1387;
reg   [31:0] tmp_3_reg_1398;
reg   [31:0] tmp_8_reg_1408;
wire   [50:0] grp_fu_686_p2;
reg   [50:0] mul_ln703_1_reg_1413;
wire   [50:0] grp_fu_696_p2;
reg   [50:0] mul_ln703_8_reg_1423;
reg   [12:0] buf_1_val_val_V_addr_5_reg_1433;
reg   [31:0] tmp_4_reg_1444;
reg   [31:0] tmp_9_reg_1454;
wire   [50:0] grp_fu_759_p2;
reg   [50:0] mul_ln703_2_reg_1459;
wire   [50:0] grp_fu_769_p2;
reg   [50:0] mul_ln703_9_reg_1469;
reg   [31:0] tmp_5_reg_1479;
wire   [50:0] grp_fu_832_p2;
reg   [50:0] mul_ln703_3_reg_1489;
reg   [31:0] acc_val_2_V_reg_1499;
wire   [50:0] grp_fu_842_p2;
reg   [50:0] mul_ln703_10_reg_1504;
reg   [31:0] tmp_6_reg_1514;
wire   [50:0] grp_fu_902_p2;
reg   [50:0] mul_ln703_4_reg_1524;
reg   [31:0] acc_val_3_V_reg_1539;
wire   [50:0] grp_fu_927_p2;
reg   [50:0] mul_ln703_11_reg_1544;
reg   [31:0] tmp_7_reg_1549;
wire   [50:0] grp_fu_987_p2;
reg   [50:0] mul_ln703_5_reg_1554;
wire   [50:0] grp_fu_997_p2;
reg   [50:0] mul_ln703_6_reg_1559;
reg   [31:0] acc_val_4_V_reg_1569;
reg   [31:0] acc_val_0_V_reg_1574;
wire   [50:0] grp_fu_1062_p2;
reg   [50:0] mul_ln703_7_reg_1579;
reg   [31:0] acc_val_5_V_reg_1584;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage5_subdone;
reg   [12:0] buf_1_val_val_V_address0;
reg    buf_1_val_val_V_ce0;
reg   [12:0] buf_1_val_val_V_address1;
reg    buf_1_val_val_V_ce1;
reg    buf_1_val_val_V_we1;
reg   [12:0] buf_2_val_val_V_address0;
reg    buf_2_val_val_V_ce0;
reg   [12:0] buf_2_val_val_V_address1;
reg    buf_2_val_val_V_ce1;
reg    buf_2_val_val_V_we1;
reg   [31:0] buf_2_val_val_V_d1;
reg   [18:0] ap_phi_mux_indvar_flatten_phi_fu_256_p4;
wire    ap_block_pp0_stage0;
reg   [8:0] ap_phi_mux_r_phi_fu_267_p4;
reg   [10:0] ap_phi_mux_c_phi_fu_278_p4;
reg  signed [31:0] ap_phi_mux_tmp_val_0_V_3_phi_fu_289_p4;
wire   [31:0] tmp_val_0_V_fu_549_p1;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_0_V_3_reg_285;
reg  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_1_V_3_reg_298;
reg  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_2_V_3_reg_311;
reg  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_3_V_3_reg_324;
reg  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_4_V_3_reg_337;
reg  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_5_V_reg_350;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_val_5_V_reg_350;
wire   [63:0] zext_ln872_1_fu_543_p1;
wire   [63:0] zext_ln872_2_fu_614_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln872_3_fu_625_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln872_4_fu_656_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln872_5_fu_707_p1;
wire   [63:0] zext_ln872_6_fu_780_p1;
reg    ap_block_pp0_stage5_01001;
wire   [7:0] tmp_fu_389_p4;
wire   [0:0] cmp3_i_fu_377_p2;
wire   [0:0] icmp_fu_399_p2;
wire   [0:0] cmp16_not_i_fu_405_p2;
wire   [0:0] icmp_ln263_fu_429_p2;
wire   [8:0] add_ln261_fu_423_p2;
wire   [0:0] cmp3_i_mid1_fu_443_p2;
wire   [0:0] cmp33_i_mid1_fu_457_p2;
wire   [0:0] cmp33_i_fu_383_p2;
wire   [7:0] tmp_14_fu_471_p4;
wire   [0:0] icmp86_fu_481_p2;
wire   [0:0] cmp16_not_i_mid1_fu_487_p2;
wire   [0:0] brmerge_i_mid1_fu_493_p2;
wire   [0:0] brmerge_i_fu_411_p2;
wire   [11:0] tmp_1_fu_526_p3;
wire   [12:0] tmp_cast_fu_519_p3;
wire   [12:0] zext_ln872_fu_533_p1;
wire   [12:0] or_ln872_fu_609_p2;
wire   [12:0] add_ln872_fu_620_p2;
wire   [18:0] grp_fu_635_p1;
wire   [18:0] grp_fu_645_p1;
wire   [12:0] add_ln872_1_fu_651_p2;
wire   [50:0] grp_fu_635_p2;
wire   [18:0] grp_fu_676_p1;
wire   [18:0] grp_fu_686_p1;
wire   [18:0] grp_fu_696_p1;
wire   [12:0] add_ln872_2_fu_702_p2;
wire   [50:0] grp_fu_676_p2;
wire   [18:0] grp_fu_734_p1;
wire   [50:0] and_ln_fu_713_p3;
wire   [50:0] add_ln1192_fu_740_p2;
wire   [18:0] grp_fu_759_p1;
wire   [18:0] grp_fu_769_p1;
wire   [12:0] add_ln872_3_fu_775_p2;
wire   [50:0] grp_fu_734_p2;
wire   [18:0] grp_fu_807_p1;
wire   [50:0] and_ln728_1_fu_786_p3;
wire   [50:0] add_ln1192_1_fu_813_p2;
wire   [18:0] grp_fu_832_p1;
wire   [18:0] grp_fu_842_p1;
wire   [50:0] grp_fu_807_p2;
wire   [18:0] grp_fu_869_p1;
wire   [50:0] and_ln728_2_fu_848_p3;
wire   [50:0] add_ln1192_2_fu_875_p2;
wire   [31:0] tmp_s_fu_880_p4;
wire   [18:0] grp_fu_902_p1;
wire   [50:0] and_ln728_8_fu_890_p3;
wire   [50:0] add_ln1192_8_fu_908_p2;
wire   [18:0] grp_fu_927_p1;
wire   [50:0] grp_fu_869_p2;
wire   [18:0] grp_fu_954_p1;
wire   [50:0] and_ln728_3_fu_933_p3;
wire   [50:0] add_ln1192_3_fu_960_p2;
wire   [31:0] tmp_10_fu_965_p4;
wire   [18:0] grp_fu_987_p1;
wire   [18:0] grp_fu_997_p1;
wire   [50:0] and_ln728_9_fu_975_p3;
wire   [50:0] add_ln1192_9_fu_1003_p2;
wire   [50:0] grp_fu_954_p2;
wire   [50:0] and_ln728_4_fu_1018_p3;
wire   [50:0] add_ln1192_4_fu_1035_p2;
wire   [31:0] tmp_11_fu_1040_p4;
wire   [18:0] grp_fu_1062_p1;
wire   [50:0] and_ln728_s_fu_1050_p3;
wire   [50:0] add_ln1192_10_fu_1068_p2;
wire   [50:0] and_ln728_5_fu_1083_p3;
wire   [50:0] add_ln1192_5_fu_1097_p2;
wire   [31:0] tmp_12_fu_1102_p4;
wire   [50:0] and_ln728_6_fu_1090_p3;
wire   [50:0] add_ln1192_6_fu_1120_p2;
wire   [50:0] and_ln728_10_fu_1112_p3;
wire   [50:0] add_ln1192_11_fu_1135_p2;
wire   [50:0] and_ln728_7_fu_1150_p3;
wire   [50:0] add_ln1192_7_fu_1157_p2;
wire   [31:0] acc_val_1_V_fu_1162_p4;
wire   [31:0] acc_val_V_5_0_i_fu_1172_p3;
wire   [31:0] acc_val_V_4_0_i_fu_1178_p3;
wire   [31:0] acc_val_V_3_0_i_fu_1184_p3;
wire   [31:0] acc_val_V_2_0_i_fu_1190_p3;
wire   [31:0] acc_val_V_1_0_i_fu_1196_p3;
wire   [31:0] acc_val_V_0_0_i_fu_1203_p3;
reg    grp_fu_635_ce;
reg    grp_fu_645_ce;
reg    grp_fu_676_ce;
reg    grp_fu_686_ce;
reg    grp_fu_696_ce;
reg    grp_fu_734_ce;
reg    grp_fu_759_ce;
reg    grp_fu_769_ce;
reg    grp_fu_807_ce;
reg    grp_fu_832_ce;
reg    grp_fu_842_ce;
reg    grp_fu_869_ce;
reg    grp_fu_902_ce;
reg    grp_fu_927_ce;
reg    grp_fu_954_ce;
reg    grp_fu_987_ce;
reg    grp_fu_997_ce;
reg    grp_fu_1062_ce;
wire    ap_CS_fsm_state14;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0;
reg    ap_enable_operation_73;
reg    ap_enable_state3_pp0_iter0_stage1;
reg    ap_enable_operation_63;
reg    ap_enable_operation_82;
reg    ap_enable_state4_pp0_iter0_stage2;
reg    ap_predicate_op62_load_state3;
reg    ap_enable_operation_62;
reg    ap_predicate_op80_load_state4;
reg    ap_enable_operation_80;
reg    ap_enable_operation_84;
reg    ap_enable_operation_86;
reg    ap_enable_operation_83;
reg    ap_enable_operation_93;
reg    ap_enable_state5_pp0_iter0_stage3;
reg    ap_predicate_op81_load_state4;
reg    ap_enable_operation_81;
reg    ap_predicate_op91_load_state5;
reg    ap_enable_operation_91;
reg    ap_enable_operation_95;
reg    ap_enable_operation_97;
reg    ap_enable_operation_94;
reg    ap_enable_operation_108;
reg    ap_enable_state6_pp0_iter0_stage4;
reg    ap_predicate_op92_load_state5;
reg    ap_enable_operation_92;
reg    ap_predicate_op106_load_state6;
reg    ap_enable_operation_106;
reg    ap_enable_operation_110;
reg    ap_enable_operation_112;
reg    ap_enable_operation_109;
reg    ap_enable_operation_128;
reg    ap_enable_state7_pp0_iter0_stage5;
reg    ap_predicate_op107_load_state6;
reg    ap_enable_operation_107;
reg    ap_predicate_op126_load_state7;
reg    ap_enable_operation_126;
reg    ap_enable_operation_130;
reg    ap_enable_operation_132;
reg    ap_enable_operation_129;
reg    ap_enable_operation_152;
reg    ap_enable_state8_pp0_iter1_stage0;
reg    ap_predicate_op127_load_state7;
reg    ap_enable_operation_127;
reg    ap_predicate_op150_load_state8;
reg    ap_enable_operation_150;
reg    ap_enable_operation_154;
wire    ap_enable_operation_156;
reg    ap_enable_operation_153;
reg    ap_enable_operation_175;
reg    ap_enable_state9_pp0_iter1_stage1;
reg    ap_predicate_op151_load_state8;
reg    ap_enable_operation_151;
reg    ap_predicate_op174_load_state9;
reg    ap_enable_operation_174;
reg    ap_enable_operation_176;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_249;
reg    ap_condition_1191;
reg    ap_condition_260;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

optical_flow_tensor_weight_y_buf_1_val_val_V #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
buf_1_val_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_val_val_V_address0),
    .ce0(buf_1_val_val_V_ce0),
    .q0(buf_1_val_val_V_q0),
    .address1(buf_1_val_val_V_address1),
    .ce1(buf_1_val_val_V_ce1),
    .we1(buf_1_val_val_V_we1),
    .d1(buf_2_val_val_V_q0)
);

optical_flow_tensor_weight_y_buf_1_val_val_V #(
    .DataWidth( 32 ),
    .AddressRange( 6144 ),
    .AddressWidth( 13 ))
buf_2_val_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2_val_val_V_address0),
    .ce0(buf_2_val_val_V_ce0),
    .q0(buf_2_val_val_V_q0),
    .address1(buf_2_val_val_V_address1),
    .ce1(buf_2_val_val_V_ce1),
    .we1(buf_2_val_val_V_we1),
    .d1(buf_2_val_val_V_d1)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_363),
    .din1(grp_fu_635_p1),
    .ce(grp_fu_635_ce),
    .dout(grp_fu_635_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_367),
    .din1(grp_fu_645_p1),
    .ce(grp_fu_645_ce),
    .dout(grp_fu_645_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_363),
    .din1(grp_fu_676_p1),
    .ce(grp_fu_676_ce),
    .dout(grp_fu_676_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_367),
    .din1(grp_fu_686_p1),
    .ce(grp_fu_686_ce),
    .dout(grp_fu_686_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_2_V_3_reg_311),
    .din1(grp_fu_696_p1),
    .ce(grp_fu_696_ce),
    .dout(grp_fu_696_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_363),
    .din1(grp_fu_734_p1),
    .ce(grp_fu_734_ce),
    .dout(grp_fu_734_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_367),
    .din1(grp_fu_759_p1),
    .ce(grp_fu_759_ce),
    .dout(grp_fu_759_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_3_V_3_reg_324),
    .din1(grp_fu_769_p1),
    .ce(grp_fu_769_ce),
    .dout(grp_fu_769_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U106(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_363),
    .din1(grp_fu_807_p1),
    .ce(grp_fu_807_ce),
    .dout(grp_fu_807_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U107(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_367),
    .din1(grp_fu_832_p1),
    .ce(grp_fu_832_ce),
    .dout(grp_fu_832_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U108(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_4_V_3_reg_337),
    .din1(grp_fu_842_p1),
    .ce(grp_fu_842_ce),
    .dout(grp_fu_842_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U109(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_363),
    .din1(grp_fu_869_p1),
    .ce(grp_fu_869_ce),
    .dout(grp_fu_869_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U110(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_367),
    .din1(grp_fu_902_p1),
    .ce(grp_fu_902_ce),
    .dout(grp_fu_902_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U111(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_5_V_reg_350),
    .din1(grp_fu_927_p1),
    .ce(grp_fu_927_ce),
    .dout(grp_fu_927_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U112(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_363),
    .din1(grp_fu_954_p1),
    .ce(grp_fu_954_ce),
    .dout(grp_fu_954_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U113(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_367),
    .din1(grp_fu_987_p1),
    .ce(grp_fu_987_ce),
    .dout(grp_fu_987_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U114(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_0_V_3_reg_285_pp0_iter1_reg),
    .din1(grp_fu_997_p1),
    .ce(grp_fu_997_ce),
    .dout(grp_fu_997_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U115(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_1_V_3_reg_298_pp0_iter1_reg),
    .din1(grp_fu_1062_p1),
    .ce(grp_fu_1062_ce),
    .dout(grp_fu_1062_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1191)) begin
            ap_phi_reg_pp0_iter0_tmp_val_1_V_3_reg_298 <= 32'd0;
        end else if ((1'b1 == ap_condition_249)) begin
            ap_phi_reg_pp0_iter0_tmp_val_1_V_3_reg_298 <= {{out_product_dout[63:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1191)) begin
            ap_phi_reg_pp0_iter0_tmp_val_2_V_3_reg_311 <= 32'd0;
        end else if ((1'b1 == ap_condition_249)) begin
            ap_phi_reg_pp0_iter0_tmp_val_2_V_3_reg_311 <= {{out_product_dout[95:64]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1191)) begin
            ap_phi_reg_pp0_iter0_tmp_val_3_V_3_reg_324 <= 32'd0;
        end else if ((1'b1 == ap_condition_249)) begin
            ap_phi_reg_pp0_iter0_tmp_val_3_V_3_reg_324 <= {{out_product_dout[127:96]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1191)) begin
            ap_phi_reg_pp0_iter0_tmp_val_4_V_3_reg_337 <= 32'd0;
        end else if ((1'b1 == ap_condition_249)) begin
            ap_phi_reg_pp0_iter0_tmp_val_4_V_3_reg_337 <= {{out_product_dout[159:128]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1191)) begin
            ap_phi_reg_pp0_iter0_tmp_val_5_V_reg_350 <= 32'd0;
        end else if ((1'b1 == ap_condition_249)) begin
            ap_phi_reg_pp0_iter0_tmp_val_5_V_reg_350 <= {{out_product_dout[191:160]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_reg_274 <= add_ln263_reg_1314;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c_reg_274 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_252 <= add_ln261_1_reg_1226;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_252 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_reg_263 <= select_ln261_4_reg_1259;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_reg_263 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_260)) begin
        if (((select_ln261_1_reg_1241 == 1'd1) & (icmp_ln261_reg_1231 == 1'd0))) begin
            tmp_val_0_V_3_reg_285 <= tmp_val_0_V_fu_549_p1;
        end else if ((1'b1 == 1'b1)) begin
            tmp_val_0_V_3_reg_285 <= ap_phi_reg_pp0_iter0_tmp_val_0_V_3_reg_285;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (select_ln261_3_reg_1249_pp0_iter1_reg == 1'd0))) begin
        acc_val_0_V_reg_1574 <= {{add_ln1192_6_fu_1120_p2[50:19]}};
        acc_val_5_V_reg_1584 <= {{add_ln1192_11_fu_1135_p2[50:19]}};
        mul_ln703_7_reg_1579 <= grp_fu_1062_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln261_3_reg_1249_pp0_iter1_reg == 1'd0))) begin
        acc_val_2_V_reg_1499 <= {{add_ln1192_8_fu_908_p2[50:19]}};
        mul_ln703_10_reg_1504 <= grp_fu_842_p2;
        mul_ln703_3_reg_1489 <= grp_fu_832_p2;
        tmp_5_reg_1479 <= {{grp_fu_807_p2[50:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (select_ln261_3_reg_1249_pp0_iter1_reg == 1'd0))) begin
        acc_val_3_V_reg_1539 <= {{add_ln1192_9_fu_1003_p2[50:19]}};
        mul_ln703_11_reg_1544 <= grp_fu_927_p2;
        mul_ln703_4_reg_1524 <= grp_fu_902_p2;
        tmp_6_reg_1514 <= {{grp_fu_869_p2[50:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (select_ln261_3_reg_1249_pp0_iter1_reg == 1'd0))) begin
        acc_val_4_V_reg_1569 <= {{add_ln1192_10_fu_1068_p2[50:19]}};
        mul_ln703_5_reg_1554 <= grp_fu_987_p2;
        mul_ln703_6_reg_1559 <= grp_fu_997_p2;
        tmp_7_reg_1549 <= {{grp_fu_954_p2[50:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln261_1_reg_1226 <= add_ln261_1_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln263_reg_1314 <= add_ln263_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_phi_reg_pp0_iter1_tmp_val_5_V_reg_350 <= ap_phi_reg_pp0_iter0_tmp_val_5_V_reg_350;
        tmp_val_4_V_3_reg_337 <= ap_phi_reg_pp0_iter0_tmp_val_4_V_3_reg_337;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        buf_1_val_val_V_addr_1_reg_1319[12 : 1] <= zext_ln872_2_fu_614_p1[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        buf_1_val_val_V_addr_2_reg_1330[12 : 1] <= zext_ln872_3_fu_625_p1[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        buf_1_val_val_V_addr_3_reg_1351[12 : 1] <= zext_ln872_4_fu_656_p1[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        buf_1_val_val_V_addr_4_reg_1387[12 : 1] <= zext_ln872_5_fu_707_p1[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_1_val_val_V_addr_5_reg_1433[12 : 1] <= zext_ln872_6_fu_780_p1[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        buf_1_val_val_V_addr_reg_1278[12 : 1] <= zext_ln872_1_fu_543_p1[12 : 1];
        sub_ln872_reg_1269[12 : 1] <= sub_ln872_fu_537_p2[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln261_reg_1231 <= icmp_ln261_fu_417_p2;
        icmp_ln261_reg_1231_pp0_iter1_reg <= icmp_ln261_reg_1231;
        select_ln261_2_reg_1245_pp0_iter1_reg <= select_ln261_2_reg_1245;
        select_ln261_3_reg_1249_pp0_iter1_reg <= select_ln261_3_reg_1249;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (select_ln261_3_reg_1249 == 1'd0))) begin
        mul_ln703_1_reg_1413 <= grp_fu_686_p2;
        mul_ln703_8_reg_1423 <= grp_fu_696_p2;
        tmp_3_reg_1398 <= {{grp_fu_676_p2[50:19]}};
        tmp_8_reg_1408 <= {{add_ln1192_fu_740_p2[50:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln261_3_reg_1249 == 1'd0))) begin
        mul_ln703_2_reg_1459 <= grp_fu_759_p2;
        mul_ln703_9_reg_1469 <= grp_fu_769_p2;
        tmp_4_reg_1444 <= {{grp_fu_734_p2[50:19]}};
        tmp_9_reg_1454 <= {{add_ln1192_1_fu_813_p2[50:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (select_ln261_3_reg_1249 == 1'd0))) begin
        mul_ln703_reg_1372 <= grp_fu_645_p2;
        tmp_2_reg_1362 <= {{grp_fu_635_p2[50:19]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln261_3_reg_1249 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln261_3_reg_1249_pp0_iter1_reg == 1'd0) & (icmp_ln261_reg_1231_pp0_iter1_reg == 1'd0)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (select_ln261_3_reg_1249 == 1'd0)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (select_ln261_3_reg_1249 == 1'd0)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (select_ln261_3_reg_1249 == 1'd0)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (select_ln261_3_reg_1249 == 1'd0)))) begin
        reg_363 <= buf_1_val_val_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln261_reg_1231_pp0_iter1_reg == 1'd0)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_367 <= buf_2_val_val_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln261_fu_417_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln261_1_reg_1241 <= select_ln261_1_fu_449_p3;
        select_ln261_2_reg_1245 <= select_ln261_2_fu_463_p3;
        select_ln261_3_reg_1249 <= select_ln261_3_fu_499_p3;
        select_ln261_reg_1235 <= select_ln261_fu_435_p3;
        trunc_ln872_reg_1264 <= trunc_ln872_fu_515_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln261_fu_417_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln261_4_reg_1259 <= select_ln261_4_fu_507_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_val_0_V_3_reg_285_pp0_iter1_reg <= tmp_val_0_V_3_reg_285;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_val_1_V_3_reg_298 <= ap_phi_reg_pp0_iter0_tmp_val_1_V_3_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_val_1_V_3_reg_298_pp0_iter1_reg <= tmp_val_1_V_3_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_val_2_V_3_reg_311 <= ap_phi_reg_pp0_iter0_tmp_val_2_V_3_reg_311;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_val_3_V_3_reg_324 <= ap_phi_reg_pp0_iter0_tmp_val_3_V_3_reg_324;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_val_5_V_reg_350 <= ap_phi_reg_pp0_iter1_tmp_val_5_V_reg_350;
    end
end

always @ (*) begin
    if ((icmp_ln261_fu_417_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_c_phi_fu_278_p4 = add_ln263_reg_1314;
    end else begin
        ap_phi_mux_c_phi_fu_278_p4 = c_reg_274;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_256_p4 = add_ln261_1_reg_1226;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_256_p4 = indvar_flatten_reg_252;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_r_phi_fu_267_p4 = select_ln261_4_reg_1259;
    end else begin
        ap_phi_mux_r_phi_fu_267_p4 = r_reg_263;
    end
end

always @ (*) begin
    if (((select_ln261_1_reg_1241 == 1'd1) & (icmp_ln261_reg_1231 == 1'd0))) begin
        ap_phi_mux_tmp_val_0_V_3_phi_fu_289_p4 = tmp_val_0_V_fu_549_p1;
    end else begin
        ap_phi_mux_tmp_val_0_V_3_phi_fu_289_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_1_val_val_V_address0 = zext_ln872_6_fu_780_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        buf_1_val_val_V_address0 = zext_ln872_5_fu_707_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        buf_1_val_val_V_address0 = zext_ln872_4_fu_656_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        buf_1_val_val_V_address0 = zext_ln872_3_fu_625_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        buf_1_val_val_V_address0 = zext_ln872_2_fu_614_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        buf_1_val_val_V_address0 = zext_ln872_1_fu_543_p1;
    end else begin
        buf_1_val_val_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        buf_1_val_val_V_address1 = buf_1_val_val_V_addr_5_reg_1433;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_1_val_val_V_address1 = buf_1_val_val_V_addr_4_reg_1387;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        buf_1_val_val_V_address1 = buf_1_val_val_V_addr_3_reg_1351;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        buf_1_val_val_V_address1 = buf_1_val_val_V_addr_2_reg_1330;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        buf_1_val_val_V_address1 = buf_1_val_val_V_addr_1_reg_1319;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        buf_1_val_val_V_address1 = buf_1_val_val_V_addr_reg_1278;
    end else begin
        buf_1_val_val_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        buf_1_val_val_V_ce0 = 1'b1;
    end else begin
        buf_1_val_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        buf_1_val_val_V_ce1 = 1'b1;
    end else begin
        buf_1_val_val_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln261_reg_1231_pp0_iter1_reg == 1'd0)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        buf_1_val_val_V_we1 = 1'b1;
    end else begin
        buf_1_val_val_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2_val_val_V_address0 = zext_ln872_6_fu_780_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        buf_2_val_val_V_address0 = zext_ln872_5_fu_707_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        buf_2_val_val_V_address0 = zext_ln872_4_fu_656_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        buf_2_val_val_V_address0 = zext_ln872_3_fu_625_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        buf_2_val_val_V_address0 = zext_ln872_2_fu_614_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        buf_2_val_val_V_address0 = zext_ln872_1_fu_543_p1;
    end else begin
        buf_2_val_val_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2_val_val_V_address1 = zext_ln872_6_fu_780_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        buf_2_val_val_V_address1 = zext_ln872_5_fu_707_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        buf_2_val_val_V_address1 = zext_ln872_4_fu_656_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        buf_2_val_val_V_address1 = zext_ln872_3_fu_625_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        buf_2_val_val_V_address1 = zext_ln872_2_fu_614_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        buf_2_val_val_V_address1 = zext_ln872_1_fu_543_p1;
    end else begin
        buf_2_val_val_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        buf_2_val_val_V_ce0 = 1'b1;
    end else begin
        buf_2_val_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        buf_2_val_val_V_ce1 = 1'b1;
    end else begin
        buf_2_val_val_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2_val_val_V_d1 = ap_phi_reg_pp0_iter1_tmp_val_5_V_reg_350;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        buf_2_val_val_V_d1 = ap_phi_reg_pp0_iter0_tmp_val_4_V_3_reg_337;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        buf_2_val_val_V_d1 = ap_phi_reg_pp0_iter0_tmp_val_3_V_3_reg_324;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        buf_2_val_val_V_d1 = ap_phi_reg_pp0_iter0_tmp_val_2_V_3_reg_311;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        buf_2_val_val_V_d1 = ap_phi_reg_pp0_iter0_tmp_val_1_V_3_reg_298;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        buf_2_val_val_V_d1 = ap_phi_mux_tmp_val_0_V_3_phi_fu_289_p4;
    end else begin
        buf_2_val_val_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        buf_2_val_val_V_we1 = 1'b1;
    end else begin
        buf_2_val_val_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_1062_ce = 1'b1;
    end else begin
        grp_fu_1062_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_635_ce = 1'b1;
    end else begin
        grp_fu_635_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_645_ce = 1'b1;
    end else begin
        grp_fu_645_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_676_ce = 1'b1;
    end else begin
        grp_fu_676_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_686_ce = 1'b1;
    end else begin
        grp_fu_686_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_696_ce = 1'b1;
    end else begin
        grp_fu_696_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_734_ce = 1'b1;
    end else begin
        grp_fu_734_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_759_ce = 1'b1;
    end else begin
        grp_fu_759_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_769_ce = 1'b1;
    end else begin
        grp_fu_769_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_807_ce = 1'b1;
    end else begin
        grp_fu_807_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_832_ce = 1'b1;
    end else begin
        grp_fu_832_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_842_ce = 1'b1;
    end else begin
        grp_fu_842_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_869_ce = 1'b1;
    end else begin
        grp_fu_869_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_902_ce = 1'b1;
    end else begin
        grp_fu_902_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_927_ce = 1'b1;
    end else begin
        grp_fu_927_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_954_ce = 1'b1;
    end else begin
        grp_fu_954_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_987_ce = 1'b1;
    end else begin
        grp_fu_987_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_997_ce = 1'b1;
    end else begin
        grp_fu_997_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln261_1_reg_1241 == 1'd1) & (icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_product_blk_n = out_product_empty_n;
    end else begin
        out_product_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op64_read_state3 == 1'b1))) begin
        out_product_read = 1'b1;
    end else begin
        out_product_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln261_2_reg_1245_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tensor_y_blk_n = tensor_y_full_n;
    end else begin
        tensor_y_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((select_ln261_2_reg_1245_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tensor_y_write = 1'b1;
    end else begin
        tensor_y_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln261_fu_417_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln261_fu_417_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5)) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_val_1_V_fu_1162_p4 = {{add_ln1192_7_fu_1157_p2[50:19]}};

assign acc_val_V_0_0_i_fu_1203_p3 = ((select_ln261_3_reg_1249_pp0_iter1_reg[0:0] == 1'b1) ? 32'd0 : acc_val_0_V_reg_1574);

assign acc_val_V_1_0_i_fu_1196_p3 = ((select_ln261_3_reg_1249_pp0_iter1_reg[0:0] == 1'b1) ? 32'd0 : acc_val_1_V_fu_1162_p4);

assign acc_val_V_2_0_i_fu_1190_p3 = ((select_ln261_3_reg_1249_pp0_iter1_reg[0:0] == 1'b1) ? 32'd0 : acc_val_2_V_reg_1499);

assign acc_val_V_3_0_i_fu_1184_p3 = ((select_ln261_3_reg_1249_pp0_iter1_reg[0:0] == 1'b1) ? 32'd0 : acc_val_3_V_reg_1539);

assign acc_val_V_4_0_i_fu_1178_p3 = ((select_ln261_3_reg_1249_pp0_iter1_reg[0:0] == 1'b1) ? 32'd0 : acc_val_4_V_reg_1569);

assign acc_val_V_5_0_i_fu_1172_p3 = ((select_ln261_3_reg_1249_pp0_iter1_reg[0:0] == 1'b1) ? 32'd0 : acc_val_5_V_reg_1584);

assign add_ln1192_10_fu_1068_p2 = (and_ln728_s_fu_1050_p3 + mul_ln703_10_reg_1504);

assign add_ln1192_11_fu_1135_p2 = (and_ln728_10_fu_1112_p3 + mul_ln703_11_reg_1544);

assign add_ln1192_1_fu_813_p2 = (and_ln728_1_fu_786_p3 + mul_ln703_1_reg_1413);

assign add_ln1192_2_fu_875_p2 = (and_ln728_2_fu_848_p3 + mul_ln703_2_reg_1459);

assign add_ln1192_3_fu_960_p2 = (and_ln728_3_fu_933_p3 + mul_ln703_3_reg_1489);

assign add_ln1192_4_fu_1035_p2 = (and_ln728_4_fu_1018_p3 + mul_ln703_4_reg_1524);

assign add_ln1192_5_fu_1097_p2 = (and_ln728_5_fu_1083_p3 + mul_ln703_5_reg_1554);

assign add_ln1192_6_fu_1120_p2 = (and_ln728_6_fu_1090_p3 + mul_ln703_6_reg_1559);

assign add_ln1192_7_fu_1157_p2 = (and_ln728_7_fu_1150_p3 + mul_ln703_7_reg_1579);

assign add_ln1192_8_fu_908_p2 = (and_ln728_8_fu_890_p3 + mul_ln703_8_reg_1423);

assign add_ln1192_9_fu_1003_p2 = (and_ln728_9_fu_975_p3 + mul_ln703_9_reg_1469);

assign add_ln1192_fu_740_p2 = (and_ln_fu_713_p3 + mul_ln703_reg_1372);

assign add_ln261_1_fu_371_p2 = (ap_phi_mux_indvar_flatten_phi_fu_256_p4 + 19'd1);

assign add_ln261_fu_423_p2 = (ap_phi_mux_r_phi_fu_267_p4 + 9'd1);

assign add_ln263_fu_604_p2 = (select_ln261_reg_1235 + 11'd1);

assign add_ln872_1_fu_651_p2 = (sub_ln872_reg_1269 + 13'd3);

assign add_ln872_2_fu_702_p2 = (sub_ln872_reg_1269 + 13'd4);

assign add_ln872_3_fu_775_p2 = (sub_ln872_reg_1269 + 13'd5);

assign add_ln872_fu_620_p2 = (sub_ln872_reg_1269 + 13'd2);

assign and_ln728_10_fu_1112_p3 = {{tmp_12_fu_1102_p4}, {19'd0}};

assign and_ln728_1_fu_786_p3 = {{tmp_3_reg_1398}, {19'd0}};

assign and_ln728_2_fu_848_p3 = {{tmp_4_reg_1444}, {19'd0}};

assign and_ln728_3_fu_933_p3 = {{tmp_5_reg_1479}, {19'd0}};

assign and_ln728_4_fu_1018_p3 = {{tmp_6_reg_1514}, {19'd0}};

assign and_ln728_5_fu_1083_p3 = {{tmp_7_reg_1549}, {19'd0}};

assign and_ln728_6_fu_1090_p3 = {{tmp_8_reg_1408}, {19'd0}};

assign and_ln728_7_fu_1150_p3 = {{tmp_9_reg_1454}, {19'd0}};

assign and_ln728_8_fu_890_p3 = {{tmp_s_fu_880_p4}, {19'd0}};

assign and_ln728_9_fu_975_p3 = {{tmp_10_fu_965_p4}, {19'd0}};

assign and_ln728_s_fu_1050_p3 = {{tmp_11_fu_1040_p4}, {19'd0}};

assign and_ln_fu_713_p3 = {{tmp_2_reg_1362}, {19'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_pp0 = (((ap_ST_fsm_pp0_stage5 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage5_subdone)) | ((ap_ST_fsm_pp0_stage1 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage1_subdone)) | ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone)) | ((ap_ST_fsm_pp0_stage4 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage4_subdone)) | ((ap_ST_fsm_pp0_stage3 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage3_subdone)) | ((ap_ST_fsm_pp0_stage2 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage2_subdone)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (out_product_empty_n == 1'b0) & (ap_predicate_op64_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (out_product_empty_n == 1'b0) & (ap_predicate_op64_read_state3 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((select_ln261_2_reg_1245_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tensor_y_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((select_ln261_2_reg_1245_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tensor_y_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((select_ln261_2_reg_1245_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tensor_y_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state10_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp0_stage5_iter1 = ((select_ln261_2_reg_1245_pp0_iter1_reg == 1'd0) & (tensor_y_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((out_product_empty_n == 1'b0) & (ap_predicate_op64_read_state3 == 1'b1));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1191 = ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln261_1_fu_449_p3 == 1'd0) & (icmp_ln261_fu_417_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_249 = ((select_ln261_1_reg_1241 == 1'd1) & (icmp_ln261_reg_1231 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_260 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_operation_106 = (ap_predicate_op106_load_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_107 = (ap_predicate_op107_load_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_108 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_109 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_110 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_112 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_126 = (ap_predicate_op126_load_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_127 = (ap_predicate_op127_load_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_128 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_129 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_130 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_132 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_150 = (ap_predicate_op150_load_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_151 = (ap_predicate_op151_load_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_152 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_153 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_154 = (icmp_ln261_reg_1231 == 1'd0);
end

assign ap_enable_operation_156 = (1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_174 = (ap_predicate_op174_load_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_175 = (icmp_ln261_reg_1231_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_176 = (icmp_ln261_reg_1231_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_62 = (ap_predicate_op62_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_63 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_73 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_80 = (ap_predicate_op80_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_81 = (ap_predicate_op81_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_82 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_83 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_84 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_86 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_91 = (ap_predicate_op91_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_92 = (ap_predicate_op92_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_93 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_94 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_95 = (icmp_ln261_reg_1231 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_97 = (icmp_ln261_reg_1231 == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage1 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state4_pp0_iter0_stage2 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_enable_state5_pp0_iter0_stage3 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_enable_state6_pp0_iter0_stage4 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

always @ (*) begin
    ap_enable_state7_pp0_iter0_stage5 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

always @ (*) begin
    ap_enable_state8_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state9_pp0_iter1_stage1 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_phi_reg_pp0_iter0_tmp_val_0_V_3_reg_285 = 32'd0;

always @ (*) begin
    ap_predicate_op106_load_state6 = ((icmp_ln261_reg_1231 == 1'd0) & (select_ln261_3_reg_1249 == 1'd0));
end

always @ (*) begin
    ap_predicate_op107_load_state6 = ((icmp_ln261_reg_1231 == 1'd0) & (select_ln261_3_reg_1249 == 1'd0));
end

always @ (*) begin
    ap_predicate_op126_load_state7 = ((icmp_ln261_reg_1231 == 1'd0) & (select_ln261_3_reg_1249 == 1'd0));
end

always @ (*) begin
    ap_predicate_op127_load_state7 = ((icmp_ln261_reg_1231 == 1'd0) & (select_ln261_3_reg_1249 == 1'd0));
end

always @ (*) begin
    ap_predicate_op150_load_state8 = ((icmp_ln261_reg_1231 == 1'd0) & (select_ln261_3_reg_1249 == 1'd0));
end

always @ (*) begin
    ap_predicate_op151_load_state8 = ((icmp_ln261_reg_1231 == 1'd0) & (select_ln261_3_reg_1249 == 1'd0));
end

always @ (*) begin
    ap_predicate_op174_load_state9 = ((select_ln261_3_reg_1249_pp0_iter1_reg == 1'd0) & (icmp_ln261_reg_1231_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op62_load_state3 = ((icmp_ln261_reg_1231 == 1'd0) & (select_ln261_3_reg_1249 == 1'd0));
end

always @ (*) begin
    ap_predicate_op64_read_state3 = ((select_ln261_1_reg_1241 == 1'd1) & (icmp_ln261_reg_1231 == 1'd0));
end

always @ (*) begin
    ap_predicate_op80_load_state4 = ((icmp_ln261_reg_1231 == 1'd0) & (select_ln261_3_reg_1249 == 1'd0));
end

always @ (*) begin
    ap_predicate_op81_load_state4 = ((icmp_ln261_reg_1231 == 1'd0) & (select_ln261_3_reg_1249 == 1'd0));
end

always @ (*) begin
    ap_predicate_op91_load_state5 = ((icmp_ln261_reg_1231 == 1'd0) & (select_ln261_3_reg_1249 == 1'd0));
end

always @ (*) begin
    ap_predicate_op92_load_state5 = ((icmp_ln261_reg_1231 == 1'd0) & (select_ln261_3_reg_1249 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign brmerge_i_fu_411_p2 = (icmp_fu_399_p2 | cmp16_not_i_fu_405_p2);

assign brmerge_i_mid1_fu_493_p2 = (icmp86_fu_481_p2 | cmp16_not_i_mid1_fu_487_p2);

assign cmp16_not_i_fu_405_p2 = (cmp3_i_fu_377_p2 ^ 1'd1);

assign cmp16_not_i_mid1_fu_487_p2 = (cmp3_i_mid1_fu_443_p2 ^ 1'd1);

assign cmp33_i_fu_383_p2 = ((ap_phi_mux_r_phi_fu_267_p4 == 9'd0) ? 1'b1 : 1'b0);

assign cmp33_i_mid1_fu_457_p2 = ((add_ln261_fu_423_p2 == 9'd0) ? 1'b1 : 1'b0);

assign cmp3_i_fu_377_p2 = ((ap_phi_mux_r_phi_fu_267_p4 < 9'd436) ? 1'b1 : 1'b0);

assign cmp3_i_mid1_fu_443_p2 = ((add_ln261_fu_423_p2 < 9'd436) ? 1'b1 : 1'b0);

assign grp_fu_1062_p1 = 51'd170026;

assign grp_fu_635_p1 = 51'd170026;

assign grp_fu_645_p1 = 51'd184182;

assign grp_fu_676_p1 = 51'd170026;

assign grp_fu_686_p1 = 51'd184182;

assign grp_fu_696_p1 = 51'd170026;

assign grp_fu_734_p1 = 51'd170026;

assign grp_fu_759_p1 = 51'd184182;

assign grp_fu_769_p1 = 51'd170026;

assign grp_fu_807_p1 = 51'd170026;

assign grp_fu_832_p1 = 51'd184182;

assign grp_fu_842_p1 = 51'd170026;

assign grp_fu_869_p1 = 51'd170026;

assign grp_fu_902_p1 = 51'd184182;

assign grp_fu_927_p1 = 51'd170026;

assign grp_fu_954_p1 = 51'd170026;

assign grp_fu_987_p1 = 51'd184182;

assign grp_fu_997_p1 = 51'd170026;

assign icmp86_fu_481_p2 = ((tmp_14_fu_471_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_fu_399_p2 = ((tmp_fu_389_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln261_fu_417_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_256_p4 == 19'd447488) ? 1'b1 : 1'b0);

assign icmp_ln263_fu_429_p2 = ((ap_phi_mux_c_phi_fu_278_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign or_ln872_fu_609_p2 = (sub_ln872_reg_1269 | 13'd1);

assign select_ln261_1_fu_449_p3 = ((icmp_ln263_fu_429_p2[0:0] == 1'b1) ? cmp3_i_mid1_fu_443_p2 : cmp3_i_fu_377_p2);

assign select_ln261_2_fu_463_p3 = ((icmp_ln263_fu_429_p2[0:0] == 1'b1) ? cmp33_i_mid1_fu_457_p2 : cmp33_i_fu_383_p2);

assign select_ln261_3_fu_499_p3 = ((icmp_ln263_fu_429_p2[0:0] == 1'b1) ? brmerge_i_mid1_fu_493_p2 : brmerge_i_fu_411_p2);

assign select_ln261_4_fu_507_p3 = ((icmp_ln263_fu_429_p2[0:0] == 1'b1) ? add_ln261_fu_423_p2 : ap_phi_mux_r_phi_fu_267_p4);

assign select_ln261_fu_435_p3 = ((icmp_ln263_fu_429_p2[0:0] == 1'b1) ? 11'd0 : ap_phi_mux_c_phi_fu_278_p4);

assign start_out = real_start;

assign sub_ln872_fu_537_p2 = (tmp_cast_fu_519_p3 - zext_ln872_fu_533_p1);

assign tensor_y_din = {{{{{{acc_val_V_5_0_i_fu_1172_p3}, {acc_val_V_4_0_i_fu_1178_p3}}, {acc_val_V_3_0_i_fu_1184_p3}}, {acc_val_V_2_0_i_fu_1190_p3}}, {acc_val_V_1_0_i_fu_1196_p3}}, {acc_val_V_0_0_i_fu_1203_p3}};

assign tmp_10_fu_965_p4 = {{add_ln1192_3_fu_960_p2[50:19]}};

assign tmp_11_fu_1040_p4 = {{add_ln1192_4_fu_1035_p2[50:19]}};

assign tmp_12_fu_1102_p4 = {{add_ln1192_5_fu_1097_p2[50:19]}};

assign tmp_14_fu_471_p4 = {{add_ln261_fu_423_p2[8:1]}};

assign tmp_1_fu_526_p3 = {{select_ln261_reg_1235}, {1'd0}};

assign tmp_cast_fu_519_p3 = {{trunc_ln872_reg_1264}, {3'd0}};

assign tmp_fu_389_p4 = {{ap_phi_mux_r_phi_fu_267_p4[8:1]}};

assign tmp_s_fu_880_p4 = {{add_ln1192_2_fu_875_p2[50:19]}};

assign tmp_val_0_V_fu_549_p1 = out_product_dout[31:0];

assign trunc_ln872_fu_515_p1 = select_ln261_fu_435_p3[9:0];

assign zext_ln872_1_fu_543_p1 = sub_ln872_fu_537_p2;

assign zext_ln872_2_fu_614_p1 = or_ln872_fu_609_p2;

assign zext_ln872_3_fu_625_p1 = add_ln872_fu_620_p2;

assign zext_ln872_4_fu_656_p1 = add_ln872_1_fu_651_p2;

assign zext_ln872_5_fu_707_p1 = add_ln872_2_fu_702_p2;

assign zext_ln872_6_fu_780_p1 = add_ln872_3_fu_775_p2;

assign zext_ln872_fu_533_p1 = tmp_1_fu_526_p3;

always @ (posedge ap_clk) begin
    sub_ln872_reg_1269[0] <= 1'b0;
    buf_1_val_val_V_addr_reg_1278[0] <= 1'b0;
    buf_1_val_val_V_addr_1_reg_1319[0] <= 1'b1;
    buf_1_val_val_V_addr_2_reg_1330[0] <= 1'b0;
    buf_1_val_val_V_addr_3_reg_1351[0] <= 1'b1;
    buf_1_val_val_V_addr_4_reg_1387[0] <= 1'b0;
    buf_1_val_val_V_addr_5_reg_1433[0] <= 1'b1;
end

endmodule //optical_flow_tensor_weight_y
