// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module optical_flow_flow_calc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        outputs_dout,
        outputs_empty_n,
        outputs_read,
        tensor_dout,
        tensor_empty_n,
        tensor_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state89 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] outputs_dout;
input   outputs_empty_n;
output   outputs_read;
input  [191:0] tensor_dout;
input   tensor_empty_n;
output   tensor_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem_AWVALID;
reg[63:0] m_axi_gmem_AWADDR;
reg m_axi_gmem_WVALID;
reg[511:0] m_axi_gmem_WDATA;
reg[63:0] m_axi_gmem_WSTRB;
reg m_axi_gmem_BREADY;
reg outputs_read;
reg tensor_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter39;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln357_reg_801;
reg   [0:0] icmp_ln357_reg_801_pp0_iter39_reg;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter40;
wire    ap_block_pp0_stage0;
reg    gmem_blk_n_B;
reg    ap_enable_reg_pp0_iter42;
reg   [0:0] icmp_ln357_reg_801_pp0_iter42_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter40_reg;
reg    ap_enable_reg_pp0_iter43;
reg    outputs_blk_n;
reg    tensor_blk_n;
reg    ap_enable_reg_pp0_iter0;
reg   [18:0] indvar_flatten_reg_184;
reg   [8:0] r_reg_195;
reg   [10:0] c_reg_206;
reg   [63:0] outputs_read_reg_786;
wire   [5:0] trunc_ln392_fu_245_p1;
reg   [5:0] trunc_ln392_reg_791;
wire   [18:0] add_ln357_1_fu_249_p2;
reg   [18:0] add_ln357_1_reg_796;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state10_pp0_stage0_iter4;
wire    ap_block_state12_pp0_stage0_iter5;
wire    ap_block_state14_pp0_stage0_iter6;
wire    ap_block_state16_pp0_stage0_iter7;
wire    ap_block_state18_pp0_stage0_iter8;
wire    ap_block_state20_pp0_stage0_iter9;
wire    ap_block_state22_pp0_stage0_iter10;
wire    ap_block_state24_pp0_stage0_iter11;
wire    ap_block_state26_pp0_stage0_iter12;
wire    ap_block_state28_pp0_stage0_iter13;
wire    ap_block_state30_pp0_stage0_iter14;
wire    ap_block_state32_pp0_stage0_iter15;
wire    ap_block_state34_pp0_stage0_iter16;
wire    ap_block_state36_pp0_stage0_iter17;
wire    ap_block_state38_pp0_stage0_iter18;
wire    ap_block_state40_pp0_stage0_iter19;
wire    ap_block_state42_pp0_stage0_iter20;
wire    ap_block_state44_pp0_stage0_iter21;
wire    ap_block_state46_pp0_stage0_iter22;
wire    ap_block_state48_pp0_stage0_iter23;
wire    ap_block_state50_pp0_stage0_iter24;
wire    ap_block_state52_pp0_stage0_iter25;
wire    ap_block_state54_pp0_stage0_iter26;
wire    ap_block_state56_pp0_stage0_iter27;
wire    ap_block_state58_pp0_stage0_iter28;
wire    ap_block_state60_pp0_stage0_iter29;
wire    ap_block_state62_pp0_stage0_iter30;
wire    ap_block_state64_pp0_stage0_iter31;
wire    ap_block_state66_pp0_stage0_iter32;
wire    ap_block_state68_pp0_stage0_iter33;
wire    ap_block_state70_pp0_stage0_iter34;
wire    ap_block_state72_pp0_stage0_iter35;
wire    ap_block_state74_pp0_stage0_iter36;
wire    ap_block_state76_pp0_stage0_iter37;
wire    ap_block_state78_pp0_stage0_iter38;
wire    ap_block_state80_pp0_stage0_iter39;
wire    ap_block_state82_pp0_stage0_iter40;
reg    ap_block_state82_io;
wire    ap_block_state84_pp0_stage0_iter41;
wire    ap_block_state86_pp0_stage0_iter42;
reg    ap_block_state88_pp0_stage0_iter43;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln357_fu_255_p2;
reg   [0:0] icmp_ln357_reg_801_pp0_iter1_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter2_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter3_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter4_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter5_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter6_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter7_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter8_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter9_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter10_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter11_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter12_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter13_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter14_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter15_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter16_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter17_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter18_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter19_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter20_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter21_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter22_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter23_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter24_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter25_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter26_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter27_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter28_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter29_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter30_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter31_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter32_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter33_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter34_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter35_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter36_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter37_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter38_reg;
reg   [0:0] icmp_ln357_reg_801_pp0_iter41_reg;
wire   [10:0] select_ln357_fu_301_p3;
reg   [10:0] select_ln357_reg_805;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state7_pp0_stage1_iter2;
wire    ap_block_state9_pp0_stage1_iter3;
wire    ap_block_state11_pp0_stage1_iter4;
wire    ap_block_state13_pp0_stage1_iter5;
wire    ap_block_state15_pp0_stage1_iter6;
wire    ap_block_state17_pp0_stage1_iter7;
wire    ap_block_state19_pp0_stage1_iter8;
wire    ap_block_state21_pp0_stage1_iter9;
wire    ap_block_state23_pp0_stage1_iter10;
wire    ap_block_state25_pp0_stage1_iter11;
wire    ap_block_state27_pp0_stage1_iter12;
wire    ap_block_state29_pp0_stage1_iter13;
wire    ap_block_state31_pp0_stage1_iter14;
wire    ap_block_state33_pp0_stage1_iter15;
wire    ap_block_state35_pp0_stage1_iter16;
wire    ap_block_state37_pp0_stage1_iter17;
wire    ap_block_state39_pp0_stage1_iter18;
wire    ap_block_state41_pp0_stage1_iter19;
wire    ap_block_state43_pp0_stage1_iter20;
wire    ap_block_state45_pp0_stage1_iter21;
wire    ap_block_state47_pp0_stage1_iter22;
wire    ap_block_state49_pp0_stage1_iter23;
wire    ap_block_state51_pp0_stage1_iter24;
wire    ap_block_state53_pp0_stage1_iter25;
wire    ap_block_state55_pp0_stage1_iter26;
wire    ap_block_state57_pp0_stage1_iter27;
wire    ap_block_state59_pp0_stage1_iter28;
wire    ap_block_state61_pp0_stage1_iter29;
wire    ap_block_state63_pp0_stage1_iter30;
wire    ap_block_state65_pp0_stage1_iter31;
wire    ap_block_state67_pp0_stage1_iter32;
wire    ap_block_state69_pp0_stage1_iter33;
wire    ap_block_state71_pp0_stage1_iter34;
wire    ap_block_state73_pp0_stage1_iter35;
wire    ap_block_state75_pp0_stage1_iter36;
wire    ap_block_state77_pp0_stage1_iter37;
wire    ap_block_state79_pp0_stage1_iter38;
wire    ap_block_state81_pp0_stage1_iter39;
reg    ap_block_state81_io;
wire    ap_block_state83_pp0_stage1_iter40;
reg    ap_block_state83_io;
wire    ap_block_state85_pp0_stage1_iter41;
reg    ap_block_state87_pp0_stage1_iter42;
reg    ap_block_pp0_stage1_11001;
reg   [10:0] select_ln357_reg_805_pp0_iter1_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter2_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter3_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter4_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter5_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter6_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter7_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter8_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter9_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter10_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter11_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter12_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter13_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter14_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter15_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter16_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter17_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter18_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter19_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter20_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter21_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter22_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter23_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter24_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter25_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter26_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter27_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter28_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter29_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter30_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter31_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter32_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter33_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter34_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter35_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter36_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter37_reg;
reg   [10:0] select_ln357_reg_805_pp0_iter38_reg;
wire   [8:0] select_ln357_2_fu_345_p3;
reg   [8:0] select_ln357_2_reg_812;
reg   [8:0] select_ln357_2_reg_812_pp0_iter1_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter2_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter3_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter4_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter5_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter6_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter7_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter8_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter9_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter10_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter11_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter12_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter13_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter14_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter15_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter16_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter17_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter18_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter19_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter20_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter21_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter22_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter23_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter24_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter25_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter26_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter27_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter28_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter29_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter30_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter31_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter32_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter33_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter34_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter35_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter36_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter37_reg;
reg   [8:0] select_ln357_2_reg_812_pp0_iter38_reg;
wire   [0:0] and_ln363_1_fu_381_p2;
reg   [0:0] and_ln363_1_reg_818;
reg   [0:0] and_ln363_1_reg_818_pp0_iter1_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter2_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter3_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter4_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter5_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter6_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter7_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter8_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter9_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter10_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter11_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter12_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter13_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter14_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter15_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter16_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter17_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter18_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter19_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter20_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter21_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter22_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter23_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter24_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter25_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter26_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter27_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter28_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter29_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter30_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter31_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter32_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter33_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter34_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter35_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter36_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter37_reg;
reg   [0:0] and_ln363_1_reg_818_pp0_iter38_reg;
wire   [31:0] trunc_ln728_fu_387_p1;
reg   [31:0] trunc_ln728_reg_822;
reg   [31:0] tmp_s_reg_827;
reg   [31:0] tmp_54_reg_832;
reg   [31:0] tmp_55_reg_837;
reg   [31:0] tmp_56_reg_842;
wire  signed [69:0] sext_ln1115_fu_459_p1;
reg  signed [69:0] sext_ln1115_reg_847;
wire  signed [69:0] sext_ln1118_fu_463_p1;
reg  signed [69:0] sext_ln1118_reg_853;
wire  signed [69:0] sext_ln1115_3_fu_473_p1;
reg  signed [69:0] sext_ln1115_3_reg_859;
wire  signed [69:0] sext_ln1115_4_fu_483_p1;
reg  signed [69:0] sext_ln1115_4_reg_867;
wire   [10:0] add_ln359_fu_493_p2;
reg   [10:0] add_ln359_reg_873;
reg    ap_enable_reg_pp0_iter1;
wire   [69:0] grp_fu_467_p2;
reg   [69:0] r_V_9_reg_878;
wire   [69:0] grp_fu_477_p2;
reg   [69:0] r_V_11_reg_883;
wire   [69:0] grp_fu_487_p2;
reg   [69:0] r_V_13_reg_888;
wire  signed [69:0] sext_ln1115_5_fu_505_p1;
wire  signed [61:0] trunc_ln1_fu_527_p4;
reg  signed [61:0] trunc_ln1_reg_899;
wire   [69:0] grp_fu_509_p2;
reg   [69:0] r_V_15_reg_904;
wire   [69:0] grp_fu_514_p2;
reg   [69:0] r_V_16_reg_909;
wire   [69:0] grp_fu_519_p2;
reg   [69:0] r_V_17_reg_914;
wire   [0:0] icmp_ln1499_fu_537_p2;
reg   [0:0] icmp_ln1499_reg_919;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter3_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter4_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter5_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter6_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter7_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter8_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter9_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter10_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter11_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter12_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter13_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter14_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter15_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter16_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter17_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter18_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter19_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter20_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter21_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter22_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter23_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter24_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter25_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter26_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter27_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter28_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter29_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter30_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter31_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter32_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter33_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter34_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter35_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter36_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter37_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter38_reg;
reg   [0:0] icmp_ln1499_reg_919_pp0_iter39_reg;
reg   [61:0] tmp_58_reg_928;
wire  signed [69:0] sext_ln1148_fu_579_p1;
reg  signed [69:0] sext_ln1148_reg_933;
reg   [17:0] tmp_59_reg_944;
wire   [5:0] add_ln392_1_fu_642_p2;
reg   [5:0] add_ln392_1_reg_949;
wire   [63:0] shl_ln392_fu_651_p2;
reg   [63:0] shl_ln392_reg_955;
reg   [57:0] trunc_ln392_2_reg_960;
reg   [57:0] trunc_ln2_reg_965;
wire   [31:0] and_ln380_1_fu_701_p3;
wire   [511:0] shl_ln392_1_fu_724_p2;
reg   [511:0] shl_ln392_1_reg_975;
wire   [5:0] add_ln393_1_fu_740_p2;
reg   [5:0] add_ln393_1_reg_986;
wire   [63:0] shl_ln393_fu_749_p2;
reg   [63:0] shl_ln393_reg_991;
wire   [511:0] shl_ln393_2_fu_770_p2;
reg   [511:0] shl_ln393_2_reg_996;
reg    ap_block_state1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter41;
reg   [18:0] ap_phi_mux_indvar_flatten_phi_fu_188_p4;
reg   [8:0] ap_phi_mux_r_phi_fu_199_p4;
reg   [10:0] ap_phi_mux_c_phi_fu_210_p4;
reg   [31:0] ap_phi_mux_phi_ln731_1_phi_fu_221_p6;
wire   [31:0] and_ln_fu_683_p3;
reg   [31:0] ap_phi_reg_pp0_iter39_phi_ln731_1_reg_217;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter1_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter2_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter3_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter4_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter5_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter6_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter7_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter8_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter9_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter10_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter11_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter12_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter13_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter14_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter15_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter16_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter17_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter18_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter19_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter20_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter21_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter22_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter23_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter24_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter25_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter26_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter27_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter28_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter29_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter30_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter31_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter32_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter33_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter34_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter35_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter36_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter37_phi_ln731_1_reg_217;
reg   [31:0] ap_phi_reg_pp0_iter38_phi_ln731_1_reg_217;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter1_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter2_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter3_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter4_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter5_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter6_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter7_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter8_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter9_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter10_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter11_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter12_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter13_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter14_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter15_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter16_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter17_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter18_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter19_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter20_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter21_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter22_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter23_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter24_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter25_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter26_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter27_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter28_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter29_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter30_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter31_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter32_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter33_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter34_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter35_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter36_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter37_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter38_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter39_phi_ln731_reg_231;
reg   [31:0] ap_phi_reg_pp0_iter40_phi_ln731_reg_231;
wire  signed [63:0] sext_ln392_fu_730_p1;
wire  signed [63:0] sext_ln393_fu_776_p1;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage1_01001;
wire   [7:0] tmp_fu_261_p4;
wire   [0:0] notrhs_i_i_fu_277_p2;
wire   [0:0] icmp_fu_271_p2;
wire   [0:0] icmp_ln359_fu_295_p2;
wire   [8:0] add_ln357_fu_289_p2;
wire   [7:0] tmp_78_fu_309_p4;
wire   [0:0] notrhs_i_i_mid1_fu_325_p2;
wire   [0:0] icmp10_fu_319_p2;
wire   [0:0] and_ln363_3_fu_331_p2;
wire   [0:0] and_ln363_fu_283_p2;
wire   [9:0] tmp_79_fu_353_p4;
wire   [0:0] icmp_ln363_fu_363_p2;
wire   [0:0] icmp_ln363_1_fu_369_p2;
wire   [0:0] and_ln363_2_fu_375_p2;
wire   [0:0] select_ln357_1_fu_337_p3;
wire  signed [34:0] t1_fu_431_p3;
wire  signed [34:0] t2_fu_438_p3;
wire   [34:0] t4_fu_445_p3;
wire  signed [34:0] grp_fu_477_p0;
wire  signed [34:0] grp_fu_477_p1;
wire  signed [34:0] t6_fu_452_p3;
wire  signed [34:0] grp_fu_487_p1;
wire   [34:0] t5_fu_498_p3;
wire  signed [34:0] grp_fu_509_p0;
wire  signed [34:0] grp_fu_509_p1;
wire  signed [34:0] grp_fu_514_p0;
wire  signed [34:0] grp_fu_514_p1;
wire  signed [34:0] grp_fu_519_p0;
wire  signed [34:0] grp_fu_519_p1;
wire   [69:0] ret_V_fu_523_p2;
wire   [69:0] ret_V_1_fu_543_p2;
wire   [61:0] tmp_57_fu_547_p4;
wire   [69:0] ret_V_2_fu_565_p2;
wire   [69:0] grp_fu_582_p0;
wire   [69:0] grp_fu_595_p0;
wire  signed [61:0] grp_fu_595_p1;
wire   [69:0] grp_fu_582_p2;
wire   [2:0] trunc_ln392_4_fu_613_p1;
wire   [9:0] trunc_ln392_3_fu_610_p1;
wire   [21:0] tmp2_fu_624_p4;
wire   [63:0] zext_ln392_fu_633_p1;
wire   [5:0] trunc_ln392_1_fu_616_p3;
wire   [63:0] zext_ln392_2_fu_647_p1;
wire   [63:0] add_ln392_fu_637_p2;
wire   [63:0] add_ln393_fu_667_p2;
wire   [69:0] grp_fu_595_p2;
wire   [17:0] tmp_60_fu_691_p4;
wire   [8:0] shl_ln392_2_fu_713_p3;
wire   [511:0] zext_ln392_1_fu_709_p1;
wire   [511:0] zext_ln392_3_fu_720_p1;
wire   [63:0] zext_ln393_1_fu_745_p1;
wire   [8:0] shl_ln393_1_fu_759_p3;
wire   [511:0] zext_ln393_fu_755_p1;
wire   [511:0] zext_ln393_2_fu_766_p1;
reg    grp_fu_467_ce;
reg    grp_fu_477_ce;
reg    grp_fu_487_ce;
reg    grp_fu_509_ce;
reg    grp_fu_514_ce;
reg    grp_fu_519_ce;
reg    grp_fu_582_ce;
reg    grp_fu_595_ce;
wire    ap_CS_fsm_state89;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_379;
reg    ap_condition_711;
reg    ap_condition_892;
reg    ap_condition_1094;
reg    ap_condition_2254;
reg    ap_condition_2258;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
end

optical_flow_mul_35s_35s_70_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 70 ))
mul_35s_35s_70_2_1_U139(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(t2_fu_438_p3),
    .din1(t1_fu_431_p3),
    .ce(grp_fu_467_ce),
    .dout(grp_fu_467_p2)
);

optical_flow_mul_35s_35s_70_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 70 ))
mul_35s_35s_70_2_1_U140(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_477_p0),
    .din1(grp_fu_477_p1),
    .ce(grp_fu_477_ce),
    .dout(grp_fu_477_p2)
);

optical_flow_mul_35s_35s_70_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 70 ))
mul_35s_35s_70_2_1_U141(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(t6_fu_452_p3),
    .din1(grp_fu_487_p1),
    .ce(grp_fu_487_ce),
    .dout(grp_fu_487_p2)
);

optical_flow_mul_35s_35s_70_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 70 ))
mul_35s_35s_70_2_1_U142(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_509_p0),
    .din1(grp_fu_509_p1),
    .ce(grp_fu_509_ce),
    .dout(grp_fu_509_p2)
);

optical_flow_mul_35s_35s_70_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 70 ))
mul_35s_35s_70_2_1_U143(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_514_p0),
    .din1(grp_fu_514_p1),
    .ce(grp_fu_514_ce),
    .dout(grp_fu_514_p2)
);

optical_flow_mul_35s_35s_70_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 70 ))
mul_35s_35s_70_2_1_U144(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_519_p0),
    .din1(grp_fu_519_p1),
    .ce(grp_fu_519_ce),
    .dout(grp_fu_519_p2)
);

optical_flow_sdiv_70ns_62s_70_74_1 #(
    .ID( 1 ),
    .NUM_STAGE( 74 ),
    .din0_WIDTH( 70 ),
    .din1_WIDTH( 62 ),
    .dout_WIDTH( 70 ))
sdiv_70ns_62s_70_74_1_U145(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_582_p0),
    .din1(trunc_ln1_reg_899),
    .ce(grp_fu_582_ce),
    .dout(grp_fu_582_p2)
);

optical_flow_sdiv_70ns_62s_70_74_1 #(
    .ID( 1 ),
    .NUM_STAGE( 74 ),
    .din0_WIDTH( 70 ),
    .din1_WIDTH( 62 ),
    .dout_WIDTH( 70 ))
sdiv_70ns_62s_70_74_1_U146(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_595_p0),
    .din1(grp_fu_595_p1),
    .ce(grp_fu_595_ce),
    .dout(grp_fu_595_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state89)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (outputs_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end else if ((~((ap_start == 1'b0) | (outputs_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter43 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_379)) begin
        if (((1'd0 == and_ln363_1_fu_381_p2) & (icmp_ln357_reg_801 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_phi_ln731_1_reg_217 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter0_phi_ln731_1_reg_217;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_379)) begin
        if (((1'd0 == and_ln363_1_fu_381_p2) & (icmp_ln357_reg_801 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_phi_ln731_reg_231 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter0_phi_ln731_reg_231;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1499_fu_537_p2 == 1'd1) & (1'd1 == and_ln363_1_reg_818_pp0_iter1_reg) & (icmp_ln357_reg_801_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_phi_ln731_1_reg_217 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter2_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter1_phi_ln731_1_reg_217;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1499_fu_537_p2 == 1'd1) & (1'd1 == and_ln363_1_reg_818_pp0_iter1_reg) & (icmp_ln357_reg_801_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_phi_ln731_reg_231 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter2_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter1_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_892)) begin
        if ((1'b1 == ap_condition_711)) begin
            ap_phi_reg_pp0_iter40_phi_ln731_reg_231 <= and_ln380_1_fu_701_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter40_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter39_phi_ln731_reg_231;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln357_reg_801_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        c_reg_206 <= add_ln359_reg_873;
    end else if ((~((ap_start == 1'b0) | (outputs_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        c_reg_206 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln357_reg_801 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_184 <= add_ln357_1_reg_796;
    end else if ((~((ap_start == 1'b0) | (outputs_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_184 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln357_reg_801_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        r_reg_195 <= select_ln357_2_reg_812;
    end else if ((~((ap_start == 1'b0) | (outputs_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_reg_195 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln357_1_reg_796 <= add_ln357_1_fu_249_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln357_reg_801 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln359_reg_873 <= add_ln359_fu_493_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln357_reg_801_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln392_1_reg_949 <= add_ln392_1_fu_642_p2;
        shl_ln392_reg_955 <= shl_ln392_fu_651_p2;
        trunc_ln2_reg_965 <= {{add_ln393_fu_667_p2[63:6]}};
        trunc_ln392_2_reg_960 <= {{add_ln392_fu_637_p2[63:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln357_reg_801_pp0_iter39_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln393_1_reg_986 <= add_ln393_1_fu_740_p2;
        shl_ln392_1_reg_975 <= shl_ln392_1_fu_724_p2;
        shl_ln393_reg_991 <= shl_ln393_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln357_reg_801 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        and_ln363_1_reg_818 <= and_ln363_1_fu_381_p2;
        select_ln357_reg_805 <= select_ln357_fu_301_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        and_ln363_1_reg_818_pp0_iter10_reg <= and_ln363_1_reg_818_pp0_iter9_reg;
        and_ln363_1_reg_818_pp0_iter11_reg <= and_ln363_1_reg_818_pp0_iter10_reg;
        and_ln363_1_reg_818_pp0_iter12_reg <= and_ln363_1_reg_818_pp0_iter11_reg;
        and_ln363_1_reg_818_pp0_iter13_reg <= and_ln363_1_reg_818_pp0_iter12_reg;
        and_ln363_1_reg_818_pp0_iter14_reg <= and_ln363_1_reg_818_pp0_iter13_reg;
        and_ln363_1_reg_818_pp0_iter15_reg <= and_ln363_1_reg_818_pp0_iter14_reg;
        and_ln363_1_reg_818_pp0_iter16_reg <= and_ln363_1_reg_818_pp0_iter15_reg;
        and_ln363_1_reg_818_pp0_iter17_reg <= and_ln363_1_reg_818_pp0_iter16_reg;
        and_ln363_1_reg_818_pp0_iter18_reg <= and_ln363_1_reg_818_pp0_iter17_reg;
        and_ln363_1_reg_818_pp0_iter19_reg <= and_ln363_1_reg_818_pp0_iter18_reg;
        and_ln363_1_reg_818_pp0_iter1_reg <= and_ln363_1_reg_818;
        and_ln363_1_reg_818_pp0_iter20_reg <= and_ln363_1_reg_818_pp0_iter19_reg;
        and_ln363_1_reg_818_pp0_iter21_reg <= and_ln363_1_reg_818_pp0_iter20_reg;
        and_ln363_1_reg_818_pp0_iter22_reg <= and_ln363_1_reg_818_pp0_iter21_reg;
        and_ln363_1_reg_818_pp0_iter23_reg <= and_ln363_1_reg_818_pp0_iter22_reg;
        and_ln363_1_reg_818_pp0_iter24_reg <= and_ln363_1_reg_818_pp0_iter23_reg;
        and_ln363_1_reg_818_pp0_iter25_reg <= and_ln363_1_reg_818_pp0_iter24_reg;
        and_ln363_1_reg_818_pp0_iter26_reg <= and_ln363_1_reg_818_pp0_iter25_reg;
        and_ln363_1_reg_818_pp0_iter27_reg <= and_ln363_1_reg_818_pp0_iter26_reg;
        and_ln363_1_reg_818_pp0_iter28_reg <= and_ln363_1_reg_818_pp0_iter27_reg;
        and_ln363_1_reg_818_pp0_iter29_reg <= and_ln363_1_reg_818_pp0_iter28_reg;
        and_ln363_1_reg_818_pp0_iter2_reg <= and_ln363_1_reg_818_pp0_iter1_reg;
        and_ln363_1_reg_818_pp0_iter30_reg <= and_ln363_1_reg_818_pp0_iter29_reg;
        and_ln363_1_reg_818_pp0_iter31_reg <= and_ln363_1_reg_818_pp0_iter30_reg;
        and_ln363_1_reg_818_pp0_iter32_reg <= and_ln363_1_reg_818_pp0_iter31_reg;
        and_ln363_1_reg_818_pp0_iter33_reg <= and_ln363_1_reg_818_pp0_iter32_reg;
        and_ln363_1_reg_818_pp0_iter34_reg <= and_ln363_1_reg_818_pp0_iter33_reg;
        and_ln363_1_reg_818_pp0_iter35_reg <= and_ln363_1_reg_818_pp0_iter34_reg;
        and_ln363_1_reg_818_pp0_iter36_reg <= and_ln363_1_reg_818_pp0_iter35_reg;
        and_ln363_1_reg_818_pp0_iter37_reg <= and_ln363_1_reg_818_pp0_iter36_reg;
        and_ln363_1_reg_818_pp0_iter38_reg <= and_ln363_1_reg_818_pp0_iter37_reg;
        and_ln363_1_reg_818_pp0_iter3_reg <= and_ln363_1_reg_818_pp0_iter2_reg;
        and_ln363_1_reg_818_pp0_iter4_reg <= and_ln363_1_reg_818_pp0_iter3_reg;
        and_ln363_1_reg_818_pp0_iter5_reg <= and_ln363_1_reg_818_pp0_iter4_reg;
        and_ln363_1_reg_818_pp0_iter6_reg <= and_ln363_1_reg_818_pp0_iter5_reg;
        and_ln363_1_reg_818_pp0_iter7_reg <= and_ln363_1_reg_818_pp0_iter6_reg;
        and_ln363_1_reg_818_pp0_iter8_reg <= and_ln363_1_reg_818_pp0_iter7_reg;
        and_ln363_1_reg_818_pp0_iter9_reg <= and_ln363_1_reg_818_pp0_iter8_reg;
        select_ln357_2_reg_812_pp0_iter10_reg <= select_ln357_2_reg_812_pp0_iter9_reg;
        select_ln357_2_reg_812_pp0_iter11_reg <= select_ln357_2_reg_812_pp0_iter10_reg;
        select_ln357_2_reg_812_pp0_iter12_reg <= select_ln357_2_reg_812_pp0_iter11_reg;
        select_ln357_2_reg_812_pp0_iter13_reg <= select_ln357_2_reg_812_pp0_iter12_reg;
        select_ln357_2_reg_812_pp0_iter14_reg <= select_ln357_2_reg_812_pp0_iter13_reg;
        select_ln357_2_reg_812_pp0_iter15_reg <= select_ln357_2_reg_812_pp0_iter14_reg;
        select_ln357_2_reg_812_pp0_iter16_reg <= select_ln357_2_reg_812_pp0_iter15_reg;
        select_ln357_2_reg_812_pp0_iter17_reg <= select_ln357_2_reg_812_pp0_iter16_reg;
        select_ln357_2_reg_812_pp0_iter18_reg <= select_ln357_2_reg_812_pp0_iter17_reg;
        select_ln357_2_reg_812_pp0_iter19_reg <= select_ln357_2_reg_812_pp0_iter18_reg;
        select_ln357_2_reg_812_pp0_iter1_reg <= select_ln357_2_reg_812;
        select_ln357_2_reg_812_pp0_iter20_reg <= select_ln357_2_reg_812_pp0_iter19_reg;
        select_ln357_2_reg_812_pp0_iter21_reg <= select_ln357_2_reg_812_pp0_iter20_reg;
        select_ln357_2_reg_812_pp0_iter22_reg <= select_ln357_2_reg_812_pp0_iter21_reg;
        select_ln357_2_reg_812_pp0_iter23_reg <= select_ln357_2_reg_812_pp0_iter22_reg;
        select_ln357_2_reg_812_pp0_iter24_reg <= select_ln357_2_reg_812_pp0_iter23_reg;
        select_ln357_2_reg_812_pp0_iter25_reg <= select_ln357_2_reg_812_pp0_iter24_reg;
        select_ln357_2_reg_812_pp0_iter26_reg <= select_ln357_2_reg_812_pp0_iter25_reg;
        select_ln357_2_reg_812_pp0_iter27_reg <= select_ln357_2_reg_812_pp0_iter26_reg;
        select_ln357_2_reg_812_pp0_iter28_reg <= select_ln357_2_reg_812_pp0_iter27_reg;
        select_ln357_2_reg_812_pp0_iter29_reg <= select_ln357_2_reg_812_pp0_iter28_reg;
        select_ln357_2_reg_812_pp0_iter2_reg <= select_ln357_2_reg_812_pp0_iter1_reg;
        select_ln357_2_reg_812_pp0_iter30_reg <= select_ln357_2_reg_812_pp0_iter29_reg;
        select_ln357_2_reg_812_pp0_iter31_reg <= select_ln357_2_reg_812_pp0_iter30_reg;
        select_ln357_2_reg_812_pp0_iter32_reg <= select_ln357_2_reg_812_pp0_iter31_reg;
        select_ln357_2_reg_812_pp0_iter33_reg <= select_ln357_2_reg_812_pp0_iter32_reg;
        select_ln357_2_reg_812_pp0_iter34_reg <= select_ln357_2_reg_812_pp0_iter33_reg;
        select_ln357_2_reg_812_pp0_iter35_reg <= select_ln357_2_reg_812_pp0_iter34_reg;
        select_ln357_2_reg_812_pp0_iter36_reg <= select_ln357_2_reg_812_pp0_iter35_reg;
        select_ln357_2_reg_812_pp0_iter37_reg <= select_ln357_2_reg_812_pp0_iter36_reg;
        select_ln357_2_reg_812_pp0_iter38_reg <= select_ln357_2_reg_812_pp0_iter37_reg;
        select_ln357_2_reg_812_pp0_iter3_reg <= select_ln357_2_reg_812_pp0_iter2_reg;
        select_ln357_2_reg_812_pp0_iter4_reg <= select_ln357_2_reg_812_pp0_iter3_reg;
        select_ln357_2_reg_812_pp0_iter5_reg <= select_ln357_2_reg_812_pp0_iter4_reg;
        select_ln357_2_reg_812_pp0_iter6_reg <= select_ln357_2_reg_812_pp0_iter5_reg;
        select_ln357_2_reg_812_pp0_iter7_reg <= select_ln357_2_reg_812_pp0_iter6_reg;
        select_ln357_2_reg_812_pp0_iter8_reg <= select_ln357_2_reg_812_pp0_iter7_reg;
        select_ln357_2_reg_812_pp0_iter9_reg <= select_ln357_2_reg_812_pp0_iter8_reg;
        select_ln357_reg_805_pp0_iter10_reg <= select_ln357_reg_805_pp0_iter9_reg;
        select_ln357_reg_805_pp0_iter11_reg <= select_ln357_reg_805_pp0_iter10_reg;
        select_ln357_reg_805_pp0_iter12_reg <= select_ln357_reg_805_pp0_iter11_reg;
        select_ln357_reg_805_pp0_iter13_reg <= select_ln357_reg_805_pp0_iter12_reg;
        select_ln357_reg_805_pp0_iter14_reg <= select_ln357_reg_805_pp0_iter13_reg;
        select_ln357_reg_805_pp0_iter15_reg <= select_ln357_reg_805_pp0_iter14_reg;
        select_ln357_reg_805_pp0_iter16_reg <= select_ln357_reg_805_pp0_iter15_reg;
        select_ln357_reg_805_pp0_iter17_reg <= select_ln357_reg_805_pp0_iter16_reg;
        select_ln357_reg_805_pp0_iter18_reg <= select_ln357_reg_805_pp0_iter17_reg;
        select_ln357_reg_805_pp0_iter19_reg <= select_ln357_reg_805_pp0_iter18_reg;
        select_ln357_reg_805_pp0_iter1_reg <= select_ln357_reg_805;
        select_ln357_reg_805_pp0_iter20_reg <= select_ln357_reg_805_pp0_iter19_reg;
        select_ln357_reg_805_pp0_iter21_reg <= select_ln357_reg_805_pp0_iter20_reg;
        select_ln357_reg_805_pp0_iter22_reg <= select_ln357_reg_805_pp0_iter21_reg;
        select_ln357_reg_805_pp0_iter23_reg <= select_ln357_reg_805_pp0_iter22_reg;
        select_ln357_reg_805_pp0_iter24_reg <= select_ln357_reg_805_pp0_iter23_reg;
        select_ln357_reg_805_pp0_iter25_reg <= select_ln357_reg_805_pp0_iter24_reg;
        select_ln357_reg_805_pp0_iter26_reg <= select_ln357_reg_805_pp0_iter25_reg;
        select_ln357_reg_805_pp0_iter27_reg <= select_ln357_reg_805_pp0_iter26_reg;
        select_ln357_reg_805_pp0_iter28_reg <= select_ln357_reg_805_pp0_iter27_reg;
        select_ln357_reg_805_pp0_iter29_reg <= select_ln357_reg_805_pp0_iter28_reg;
        select_ln357_reg_805_pp0_iter2_reg <= select_ln357_reg_805_pp0_iter1_reg;
        select_ln357_reg_805_pp0_iter30_reg <= select_ln357_reg_805_pp0_iter29_reg;
        select_ln357_reg_805_pp0_iter31_reg <= select_ln357_reg_805_pp0_iter30_reg;
        select_ln357_reg_805_pp0_iter32_reg <= select_ln357_reg_805_pp0_iter31_reg;
        select_ln357_reg_805_pp0_iter33_reg <= select_ln357_reg_805_pp0_iter32_reg;
        select_ln357_reg_805_pp0_iter34_reg <= select_ln357_reg_805_pp0_iter33_reg;
        select_ln357_reg_805_pp0_iter35_reg <= select_ln357_reg_805_pp0_iter34_reg;
        select_ln357_reg_805_pp0_iter36_reg <= select_ln357_reg_805_pp0_iter35_reg;
        select_ln357_reg_805_pp0_iter37_reg <= select_ln357_reg_805_pp0_iter36_reg;
        select_ln357_reg_805_pp0_iter38_reg <= select_ln357_reg_805_pp0_iter37_reg;
        select_ln357_reg_805_pp0_iter3_reg <= select_ln357_reg_805_pp0_iter2_reg;
        select_ln357_reg_805_pp0_iter4_reg <= select_ln357_reg_805_pp0_iter3_reg;
        select_ln357_reg_805_pp0_iter5_reg <= select_ln357_reg_805_pp0_iter4_reg;
        select_ln357_reg_805_pp0_iter6_reg <= select_ln357_reg_805_pp0_iter5_reg;
        select_ln357_reg_805_pp0_iter7_reg <= select_ln357_reg_805_pp0_iter6_reg;
        select_ln357_reg_805_pp0_iter8_reg <= select_ln357_reg_805_pp0_iter7_reg;
        select_ln357_reg_805_pp0_iter9_reg <= select_ln357_reg_805_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter10_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter9_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter10_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter9_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter11_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter10_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter11_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter10_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter12_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter11_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter12_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter11_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter13_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter12_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter13_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter12_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter14_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter13_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter14_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter13_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter15_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter14_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter15_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter14_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter16_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter15_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter16_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter15_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter17_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter16_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter17_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter16_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter18_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter17_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter18_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter17_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter19_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter18_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter19_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter18_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter20_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter19_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter20_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter19_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter21_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter20_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter21_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter20_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter22_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter21_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter22_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter21_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter23_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter22_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter23_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter22_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter24_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter23_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter24_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter23_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter25_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter24_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter25_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter24_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter26_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter25_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter26_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter25_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter27_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter26_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter27_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter26_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter27 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter28_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter27_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter28_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter27_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter28 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter29_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter28_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter29_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter28_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter30_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter29_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter30_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter29_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter30 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter31_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter30_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter31_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter30_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter31 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter32_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter31_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter32_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter31_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter32 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter33_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter32_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter33_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter32_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter33 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter34_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter33_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter34_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter33_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter35_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter34_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter35_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter34_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter35 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter36_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter35_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter36_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter35_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter36 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter37_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter36_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter37_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter36_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter38_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter37_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter38_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter37_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter38 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter39_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter38_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter39_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter38_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter3_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter2_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter3_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter2_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter4_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter3_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter4_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter3_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter5_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter4_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter5_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter4_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter6_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter5_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter6_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter5_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter7_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter6_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter7_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter6_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter8_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter7_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter8_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter7_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter9_phi_ln731_1_reg_217 <= ap_phi_reg_pp0_iter8_phi_ln731_1_reg_217;
        ap_phi_reg_pp0_iter9_phi_ln731_reg_231 <= ap_phi_reg_pp0_iter8_phi_ln731_reg_231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln363_1_reg_818_pp0_iter1_reg) & (icmp_ln357_reg_801_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1499_reg_919 <= icmp_ln1499_fu_537_p2;
        r_V_15_reg_904 <= grp_fu_509_p2;
        r_V_16_reg_909 <= grp_fu_514_p2;
        r_V_17_reg_914 <= grp_fu_519_p2;
        trunc_ln1_reg_899 <= {{ret_V_fu_523_p2[69:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1499_reg_919_pp0_iter10_reg <= icmp_ln1499_reg_919_pp0_iter9_reg;
        icmp_ln1499_reg_919_pp0_iter11_reg <= icmp_ln1499_reg_919_pp0_iter10_reg;
        icmp_ln1499_reg_919_pp0_iter12_reg <= icmp_ln1499_reg_919_pp0_iter11_reg;
        icmp_ln1499_reg_919_pp0_iter13_reg <= icmp_ln1499_reg_919_pp0_iter12_reg;
        icmp_ln1499_reg_919_pp0_iter14_reg <= icmp_ln1499_reg_919_pp0_iter13_reg;
        icmp_ln1499_reg_919_pp0_iter15_reg <= icmp_ln1499_reg_919_pp0_iter14_reg;
        icmp_ln1499_reg_919_pp0_iter16_reg <= icmp_ln1499_reg_919_pp0_iter15_reg;
        icmp_ln1499_reg_919_pp0_iter17_reg <= icmp_ln1499_reg_919_pp0_iter16_reg;
        icmp_ln1499_reg_919_pp0_iter18_reg <= icmp_ln1499_reg_919_pp0_iter17_reg;
        icmp_ln1499_reg_919_pp0_iter19_reg <= icmp_ln1499_reg_919_pp0_iter18_reg;
        icmp_ln1499_reg_919_pp0_iter20_reg <= icmp_ln1499_reg_919_pp0_iter19_reg;
        icmp_ln1499_reg_919_pp0_iter21_reg <= icmp_ln1499_reg_919_pp0_iter20_reg;
        icmp_ln1499_reg_919_pp0_iter22_reg <= icmp_ln1499_reg_919_pp0_iter21_reg;
        icmp_ln1499_reg_919_pp0_iter23_reg <= icmp_ln1499_reg_919_pp0_iter22_reg;
        icmp_ln1499_reg_919_pp0_iter24_reg <= icmp_ln1499_reg_919_pp0_iter23_reg;
        icmp_ln1499_reg_919_pp0_iter25_reg <= icmp_ln1499_reg_919_pp0_iter24_reg;
        icmp_ln1499_reg_919_pp0_iter26_reg <= icmp_ln1499_reg_919_pp0_iter25_reg;
        icmp_ln1499_reg_919_pp0_iter27_reg <= icmp_ln1499_reg_919_pp0_iter26_reg;
        icmp_ln1499_reg_919_pp0_iter28_reg <= icmp_ln1499_reg_919_pp0_iter27_reg;
        icmp_ln1499_reg_919_pp0_iter29_reg <= icmp_ln1499_reg_919_pp0_iter28_reg;
        icmp_ln1499_reg_919_pp0_iter30_reg <= icmp_ln1499_reg_919_pp0_iter29_reg;
        icmp_ln1499_reg_919_pp0_iter31_reg <= icmp_ln1499_reg_919_pp0_iter30_reg;
        icmp_ln1499_reg_919_pp0_iter32_reg <= icmp_ln1499_reg_919_pp0_iter31_reg;
        icmp_ln1499_reg_919_pp0_iter33_reg <= icmp_ln1499_reg_919_pp0_iter32_reg;
        icmp_ln1499_reg_919_pp0_iter34_reg <= icmp_ln1499_reg_919_pp0_iter33_reg;
        icmp_ln1499_reg_919_pp0_iter35_reg <= icmp_ln1499_reg_919_pp0_iter34_reg;
        icmp_ln1499_reg_919_pp0_iter36_reg <= icmp_ln1499_reg_919_pp0_iter35_reg;
        icmp_ln1499_reg_919_pp0_iter37_reg <= icmp_ln1499_reg_919_pp0_iter36_reg;
        icmp_ln1499_reg_919_pp0_iter38_reg <= icmp_ln1499_reg_919_pp0_iter37_reg;
        icmp_ln1499_reg_919_pp0_iter39_reg <= icmp_ln1499_reg_919_pp0_iter38_reg;
        icmp_ln1499_reg_919_pp0_iter3_reg <= icmp_ln1499_reg_919;
        icmp_ln1499_reg_919_pp0_iter4_reg <= icmp_ln1499_reg_919_pp0_iter3_reg;
        icmp_ln1499_reg_919_pp0_iter5_reg <= icmp_ln1499_reg_919_pp0_iter4_reg;
        icmp_ln1499_reg_919_pp0_iter6_reg <= icmp_ln1499_reg_919_pp0_iter5_reg;
        icmp_ln1499_reg_919_pp0_iter7_reg <= icmp_ln1499_reg_919_pp0_iter6_reg;
        icmp_ln1499_reg_919_pp0_iter8_reg <= icmp_ln1499_reg_919_pp0_iter7_reg;
        icmp_ln1499_reg_919_pp0_iter9_reg <= icmp_ln1499_reg_919_pp0_iter8_reg;
        icmp_ln357_reg_801 <= icmp_ln357_fu_255_p2;
        icmp_ln357_reg_801_pp0_iter10_reg <= icmp_ln357_reg_801_pp0_iter9_reg;
        icmp_ln357_reg_801_pp0_iter11_reg <= icmp_ln357_reg_801_pp0_iter10_reg;
        icmp_ln357_reg_801_pp0_iter12_reg <= icmp_ln357_reg_801_pp0_iter11_reg;
        icmp_ln357_reg_801_pp0_iter13_reg <= icmp_ln357_reg_801_pp0_iter12_reg;
        icmp_ln357_reg_801_pp0_iter14_reg <= icmp_ln357_reg_801_pp0_iter13_reg;
        icmp_ln357_reg_801_pp0_iter15_reg <= icmp_ln357_reg_801_pp0_iter14_reg;
        icmp_ln357_reg_801_pp0_iter16_reg <= icmp_ln357_reg_801_pp0_iter15_reg;
        icmp_ln357_reg_801_pp0_iter17_reg <= icmp_ln357_reg_801_pp0_iter16_reg;
        icmp_ln357_reg_801_pp0_iter18_reg <= icmp_ln357_reg_801_pp0_iter17_reg;
        icmp_ln357_reg_801_pp0_iter19_reg <= icmp_ln357_reg_801_pp0_iter18_reg;
        icmp_ln357_reg_801_pp0_iter1_reg <= icmp_ln357_reg_801;
        icmp_ln357_reg_801_pp0_iter20_reg <= icmp_ln357_reg_801_pp0_iter19_reg;
        icmp_ln357_reg_801_pp0_iter21_reg <= icmp_ln357_reg_801_pp0_iter20_reg;
        icmp_ln357_reg_801_pp0_iter22_reg <= icmp_ln357_reg_801_pp0_iter21_reg;
        icmp_ln357_reg_801_pp0_iter23_reg <= icmp_ln357_reg_801_pp0_iter22_reg;
        icmp_ln357_reg_801_pp0_iter24_reg <= icmp_ln357_reg_801_pp0_iter23_reg;
        icmp_ln357_reg_801_pp0_iter25_reg <= icmp_ln357_reg_801_pp0_iter24_reg;
        icmp_ln357_reg_801_pp0_iter26_reg <= icmp_ln357_reg_801_pp0_iter25_reg;
        icmp_ln357_reg_801_pp0_iter27_reg <= icmp_ln357_reg_801_pp0_iter26_reg;
        icmp_ln357_reg_801_pp0_iter28_reg <= icmp_ln357_reg_801_pp0_iter27_reg;
        icmp_ln357_reg_801_pp0_iter29_reg <= icmp_ln357_reg_801_pp0_iter28_reg;
        icmp_ln357_reg_801_pp0_iter2_reg <= icmp_ln357_reg_801_pp0_iter1_reg;
        icmp_ln357_reg_801_pp0_iter30_reg <= icmp_ln357_reg_801_pp0_iter29_reg;
        icmp_ln357_reg_801_pp0_iter31_reg <= icmp_ln357_reg_801_pp0_iter30_reg;
        icmp_ln357_reg_801_pp0_iter32_reg <= icmp_ln357_reg_801_pp0_iter31_reg;
        icmp_ln357_reg_801_pp0_iter33_reg <= icmp_ln357_reg_801_pp0_iter32_reg;
        icmp_ln357_reg_801_pp0_iter34_reg <= icmp_ln357_reg_801_pp0_iter33_reg;
        icmp_ln357_reg_801_pp0_iter35_reg <= icmp_ln357_reg_801_pp0_iter34_reg;
        icmp_ln357_reg_801_pp0_iter36_reg <= icmp_ln357_reg_801_pp0_iter35_reg;
        icmp_ln357_reg_801_pp0_iter37_reg <= icmp_ln357_reg_801_pp0_iter36_reg;
        icmp_ln357_reg_801_pp0_iter38_reg <= icmp_ln357_reg_801_pp0_iter37_reg;
        icmp_ln357_reg_801_pp0_iter39_reg <= icmp_ln357_reg_801_pp0_iter38_reg;
        icmp_ln357_reg_801_pp0_iter3_reg <= icmp_ln357_reg_801_pp0_iter2_reg;
        icmp_ln357_reg_801_pp0_iter40_reg <= icmp_ln357_reg_801_pp0_iter39_reg;
        icmp_ln357_reg_801_pp0_iter41_reg <= icmp_ln357_reg_801_pp0_iter40_reg;
        icmp_ln357_reg_801_pp0_iter42_reg <= icmp_ln357_reg_801_pp0_iter41_reg;
        icmp_ln357_reg_801_pp0_iter4_reg <= icmp_ln357_reg_801_pp0_iter3_reg;
        icmp_ln357_reg_801_pp0_iter5_reg <= icmp_ln357_reg_801_pp0_iter4_reg;
        icmp_ln357_reg_801_pp0_iter6_reg <= icmp_ln357_reg_801_pp0_iter5_reg;
        icmp_ln357_reg_801_pp0_iter7_reg <= icmp_ln357_reg_801_pp0_iter6_reg;
        icmp_ln357_reg_801_pp0_iter8_reg <= icmp_ln357_reg_801_pp0_iter7_reg;
        icmp_ln357_reg_801_pp0_iter9_reg <= icmp_ln357_reg_801_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        outputs_read_reg_786 <= outputs_dout;
        trunc_ln392_reg_791 <= trunc_ln392_fu_245_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln363_1_reg_818) & (icmp_ln357_reg_801_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        r_V_11_reg_883 <= grp_fu_477_p2;
        r_V_13_reg_888 <= grp_fu_487_p2;
        r_V_9_reg_878 <= grp_fu_467_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln357_reg_801 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        select_ln357_2_reg_812 <= select_ln357_2_fu_345_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln363_1_reg_818) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln357_reg_801 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sext_ln1115_3_reg_859[69 : 3] <= sext_ln1115_3_fu_473_p1[69 : 3];
        sext_ln1115_4_reg_867[69 : 3] <= sext_ln1115_4_fu_483_p1[69 : 3];
        sext_ln1115_reg_847[69 : 3] <= sext_ln1115_fu_459_p1[69 : 3];
        sext_ln1118_reg_853[69 : 3] <= sext_ln1118_fu_463_p1[69 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1499_reg_919 == 1'd0) & (1'd1 == and_ln363_1_reg_818_pp0_iter1_reg) & (icmp_ln357_reg_801_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sext_ln1148_reg_933 <= sext_ln1148_fu_579_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln357_reg_801_pp0_iter39_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        shl_ln393_2_reg_996 <= shl_ln393_2_fu_770_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln363_1_fu_381_p2) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln357_reg_801 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_54_reg_832 <= {{tensor_dout[127:96]}};
        tmp_55_reg_837 <= {{tensor_dout[159:128]}};
        tmp_56_reg_842 <= {{tensor_dout[191:160]}};
        tmp_s_reg_827 <= {{tensor_dout[63:32]}};
        trunc_ln728_reg_822 <= trunc_ln728_fu_387_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln363_1_reg_818_pp0_iter1_reg) & (icmp_ln357_reg_801_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_58_reg_928 <= {{ret_V_2_fu_565_p2[69:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1499_reg_919_pp0_iter38_reg == 1'd0) & (1'd1 == and_ln363_1_reg_818_pp0_iter38_reg) & (icmp_ln357_reg_801_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_59_reg_944 <= {{grp_fu_582_p2[20:3]}};
    end
end

always @ (*) begin
    if ((icmp_ln357_reg_801 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln357_reg_801_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_c_phi_fu_210_p4 = add_ln359_reg_873;
    end else begin
        ap_phi_mux_c_phi_fu_210_p4 = c_reg_206;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln357_reg_801 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_188_p4 = add_ln357_1_reg_796;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_188_p4 = indvar_flatten_reg_184;
    end
end

always @ (*) begin
    if (((icmp_ln1499_reg_919_pp0_iter39_reg == 1'd0) & (1'd1 == and_ln363_1_reg_818_pp0_iter38_reg) & (icmp_ln357_reg_801_pp0_iter39_reg == 1'd0))) begin
        ap_phi_mux_phi_ln731_1_phi_fu_221_p6 = and_ln_fu_683_p3;
    end else begin
        ap_phi_mux_phi_ln731_1_phi_fu_221_p6 = ap_phi_reg_pp0_iter39_phi_ln731_1_reg_217;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln357_reg_801_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_r_phi_fu_199_p4 = select_ln357_2_reg_812;
    end else begin
        ap_phi_mux_r_phi_fu_199_p4 = r_reg_195;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter39 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln357_reg_801_pp0_iter39_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1) & (icmp_ln357_reg_801_pp0_iter39_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln357_reg_801_pp0_iter42_reg == 1'd0) & (ap_enable_reg_pp0_iter42 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter43 == 1'b1) & (icmp_ln357_reg_801_pp0_iter42_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln357_reg_801_pp0_iter40_reg == 1'd0) & (ap_enable_reg_pp0_iter40 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1) & (icmp_ln357_reg_801_pp0_iter39_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_467_ce = 1'b1;
    end else begin
        grp_fu_467_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_477_ce = 1'b1;
    end else begin
        grp_fu_477_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_487_ce = 1'b1;
    end else begin
        grp_fu_487_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_509_ce = 1'b1;
    end else begin
        grp_fu_509_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_514_ce = 1'b1;
    end else begin
        grp_fu_514_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_519_ce = 1'b1;
    end else begin
        grp_fu_519_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_582_ce = 1'b1;
    end else begin
        grp_fu_582_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_595_ce = 1'b1;
    end else begin
        grp_fu_595_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln357_reg_801_pp0_iter39_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_1094)) begin
            m_axi_gmem_AWADDR = sext_ln393_fu_776_p1;
        end else if ((1'b1 == ap_condition_892)) begin
            m_axi_gmem_AWADDR = sext_ln392_fu_730_p1;
        end else begin
            m_axi_gmem_AWADDR = 'bx;
        end
    end else begin
        m_axi_gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter39 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln357_reg_801_pp0_iter39_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1) & (icmp_ln357_reg_801_pp0_iter39_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln357_reg_801_pp0_iter42_reg == 1'd0) & (ap_enable_reg_pp0_iter42 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter43 == 1'b1) & (icmp_ln357_reg_801_pp0_iter42_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter40 == 1'b1)) begin
        if ((1'b1 == ap_condition_2258)) begin
            m_axi_gmem_WDATA = shl_ln393_2_reg_996;
        end else if ((1'b1 == ap_condition_2254)) begin
            m_axi_gmem_WDATA = shl_ln392_1_reg_975;
        end else begin
            m_axi_gmem_WDATA = 'bx;
        end
    end else begin
        m_axi_gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter40 == 1'b1)) begin
        if ((1'b1 == ap_condition_2258)) begin
            m_axi_gmem_WSTRB = shl_ln393_reg_991;
        end else if ((1'b1 == ap_condition_2254)) begin
            m_axi_gmem_WSTRB = shl_ln392_reg_955;
        end else begin
            m_axi_gmem_WSTRB = 'bx;
        end
    end else begin
        m_axi_gmem_WSTRB = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln357_reg_801_pp0_iter40_reg == 1'd0) & (ap_enable_reg_pp0_iter40 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1) & (icmp_ln357_reg_801_pp0_iter39_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs_blk_n = outputs_empty_n;
    end else begin
        outputs_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (outputs_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        outputs_read = 1'b1;
    end else begin
        outputs_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln357_reg_801 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        tensor_blk_n = tensor_empty_n;
    end else begin
        tensor_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln357_reg_801 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tensor_read = 1'b1;
    end else begin
        tensor_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (outputs_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter43 == 1'b1) & (ap_enable_reg_pp0_iter42 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter43 == 1'b1) & (ap_enable_reg_pp0_iter42 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln357_reg_801 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln357_reg_801 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln357_1_fu_249_p2 = (ap_phi_mux_indvar_flatten_phi_fu_188_p4 + 19'd1);

assign add_ln357_fu_289_p2 = (ap_phi_mux_r_phi_fu_199_p4 + 9'd1);

assign add_ln359_fu_493_p2 = (select_ln357_reg_805 + 11'd1);

assign add_ln392_1_fu_642_p2 = (trunc_ln392_reg_791 + trunc_ln392_1_fu_616_p3);

assign add_ln392_fu_637_p2 = (zext_ln392_fu_633_p1 + outputs_read_reg_786);

assign add_ln393_1_fu_740_p2 = (add_ln392_1_reg_949 + 6'd4);

assign add_ln393_fu_667_p2 = (add_ln392_fu_637_p2 + 64'd4);

assign and_ln363_1_fu_381_p2 = (select_ln357_1_fu_337_p3 & and_ln363_2_fu_375_p2);

assign and_ln363_2_fu_375_p2 = (icmp_ln363_fu_363_p2 & icmp_ln363_1_fu_369_p2);

assign and_ln363_3_fu_331_p2 = (notrhs_i_i_mid1_fu_325_p2 & icmp10_fu_319_p2);

assign and_ln363_fu_283_p2 = (notrhs_i_i_fu_277_p2 & icmp_fu_271_p2);

assign and_ln380_1_fu_701_p3 = {{tmp_60_fu_691_p4}, {14'd0}};

assign and_ln_fu_683_p3 = {{tmp_59_reg_944}, {14'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b1) & (icmp_ln357_reg_801_pp0_iter42_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b1) & (icmp_ln357_reg_801_pp0_iter42_reg == 1'd0)) | ((1'b1 == ap_block_state82_io) & (ap_enable_reg_pp0_iter40 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b1) & (icmp_ln357_reg_801_pp0_iter42_reg == 1'd0)) | ((1'b1 == ap_block_state82_io) & (ap_enable_reg_pp0_iter40 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((tensor_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln357_reg_801 == 1'd0)) | ((m_axi_gmem_BVALID == 1'b0) & (icmp_ln357_reg_801_pp0_iter42_reg == 1'd0) & (ap_enable_reg_pp0_iter42 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter39 == 1'b1) & (1'b1 == ap_block_state81_io)) | ((1'b1 == ap_block_state83_io) & (ap_enable_reg_pp0_iter40 == 1'b1)) | ((tensor_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln357_reg_801 == 1'd0)) | ((m_axi_gmem_BVALID == 1'b0) & (icmp_ln357_reg_801_pp0_iter42_reg == 1'd0) & (ap_enable_reg_pp0_iter42 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter39 == 1'b1) & (1'b1 == ap_block_state81_io)) | ((1'b1 == ap_block_state83_io) & (ap_enable_reg_pp0_iter40 == 1'b1)) | ((tensor_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln357_reg_801 == 1'd0)) | ((m_axi_gmem_BVALID == 1'b0) & (icmp_ln357_reg_801_pp0_iter42_reg == 1'd0) & (ap_enable_reg_pp0_iter42 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (outputs_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((tensor_empty_n == 1'b0) & (icmp_ln357_reg_801 == 1'd0));
end

assign ap_block_state40_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage1_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage1_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage1_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage1_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage1_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage1_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage1_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage1_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage1_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage1_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage1_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage1_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage1_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage1_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage1_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage1_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state81_io = ((m_axi_gmem_AWREADY == 1'b0) & (icmp_ln357_reg_801_pp0_iter39_reg == 1'd0));
end

assign ap_block_state81_pp0_stage1_iter39 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state82_io = (((m_axi_gmem_AWREADY == 1'b0) & (icmp_ln357_reg_801_pp0_iter39_reg == 1'd0)) | ((m_axi_gmem_WREADY == 1'b0) & (icmp_ln357_reg_801_pp0_iter39_reg == 1'd0)));
end

assign ap_block_state82_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state83_io = ((m_axi_gmem_WREADY == 1'b0) & (icmp_ln357_reg_801_pp0_iter40_reg == 1'd0));
end

assign ap_block_state83_pp0_stage1_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage1_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state87_pp0_stage1_iter42 = ((m_axi_gmem_BVALID == 1'b0) & (icmp_ln357_reg_801_pp0_iter42_reg == 1'd0));
end

always @ (*) begin
    ap_block_state88_pp0_stage0_iter43 = ((m_axi_gmem_BVALID == 1'b0) & (icmp_ln357_reg_801_pp0_iter42_reg == 1'd0));
end

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1094 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_2254 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln357_reg_801_pp0_iter39_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001));
end

always @ (*) begin
    ap_condition_2258 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln357_reg_801_pp0_iter40_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001));
end

always @ (*) begin
    ap_condition_379 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_711 = ((icmp_ln1499_reg_919_pp0_iter39_reg == 1'd0) & (1'd1 == and_ln363_1_reg_818_pp0_iter38_reg) & (icmp_ln357_reg_801_pp0_iter39_reg == 1'd0));
end

always @ (*) begin
    ap_condition_892 = ((ap_enable_reg_pp0_iter39 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_phi_ln731_1_reg_217 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln731_reg_231 = 'bx;

assign grp_fu_477_p0 = sext_ln1115_3_fu_473_p1;

assign grp_fu_477_p1 = sext_ln1115_3_fu_473_p1;

assign grp_fu_487_p1 = sext_ln1115_3_fu_473_p1;

assign grp_fu_509_p0 = sext_ln1115_5_fu_505_p1;

assign grp_fu_509_p1 = sext_ln1118_reg_853;

assign grp_fu_514_p0 = sext_ln1115_5_fu_505_p1;

assign grp_fu_514_p1 = sext_ln1115_3_reg_859;

assign grp_fu_519_p0 = sext_ln1115_4_reg_867;

assign grp_fu_519_p1 = sext_ln1115_reg_847;

assign grp_fu_582_p0 = {{tmp_57_fu_547_p4}, {8'd0}};

assign grp_fu_595_p0 = {{tmp_58_reg_928}, {8'd0}};

assign grp_fu_595_p1 = sext_ln1148_reg_933;

assign icmp10_fu_319_p2 = ((tmp_78_fu_309_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_fu_271_p2 = ((tmp_fu_261_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1499_fu_537_p2 = ((trunc_ln1_fu_527_p4 == 62'd0) ? 1'b1 : 1'b0);

assign icmp_ln357_fu_255_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_188_p4 == 19'd446464) ? 1'b1 : 1'b0);

assign icmp_ln359_fu_295_p2 = ((ap_phi_mux_c_phi_fu_210_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln363_1_fu_369_p2 = ((select_ln357_fu_301_p3 < 11'd1022) ? 1'b1 : 1'b0);

assign icmp_ln363_fu_363_p2 = ((tmp_79_fu_353_p4 != 10'd0) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARADDR = 64'd0;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_ARVALID = 1'b0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_RREADY = 1'b0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WUSER = 1'd0;

assign notrhs_i_i_fu_277_p2 = ((ap_phi_mux_r_phi_fu_199_p4 < 9'd434) ? 1'b1 : 1'b0);

assign notrhs_i_i_mid1_fu_325_p2 = ((add_ln357_fu_289_p2 < 9'd434) ? 1'b1 : 1'b0);

assign ret_V_1_fu_543_p2 = (r_V_13_reg_888 - r_V_15_reg_904);

assign ret_V_2_fu_565_p2 = (r_V_16_reg_909 - r_V_17_reg_914);

assign ret_V_fu_523_p2 = (r_V_9_reg_878 - r_V_11_reg_883);

assign select_ln357_1_fu_337_p3 = ((icmp_ln359_fu_295_p2[0:0] == 1'b1) ? and_ln363_3_fu_331_p2 : and_ln363_fu_283_p2);

assign select_ln357_2_fu_345_p3 = ((icmp_ln359_fu_295_p2[0:0] == 1'b1) ? add_ln357_fu_289_p2 : ap_phi_mux_r_phi_fu_199_p4);

assign select_ln357_fu_301_p3 = ((icmp_ln359_fu_295_p2[0:0] == 1'b1) ? 11'd0 : ap_phi_mux_c_phi_fu_210_p4);

assign sext_ln1115_3_fu_473_p1 = $signed(t4_fu_445_p3);

assign sext_ln1115_4_fu_483_p1 = t6_fu_452_p3;

assign sext_ln1115_5_fu_505_p1 = $signed(t5_fu_498_p3);

assign sext_ln1115_fu_459_p1 = t1_fu_431_p3;

assign sext_ln1118_fu_463_p1 = t2_fu_438_p3;

assign sext_ln1148_fu_579_p1 = trunc_ln1_reg_899;

assign sext_ln392_fu_730_p1 = $signed(trunc_ln392_2_reg_960);

assign sext_ln393_fu_776_p1 = $signed(trunc_ln2_reg_965);

assign shl_ln392_1_fu_724_p2 = zext_ln392_1_fu_709_p1 << zext_ln392_3_fu_720_p1;

assign shl_ln392_2_fu_713_p3 = {{add_ln392_1_reg_949}, {3'd0}};

assign shl_ln392_fu_651_p2 = 64'd15 << zext_ln392_2_fu_647_p1;

assign shl_ln393_1_fu_759_p3 = {{add_ln393_1_reg_986}, {3'd0}};

assign shl_ln393_2_fu_770_p2 = zext_ln393_fu_755_p1 << zext_ln393_2_fu_766_p1;

assign shl_ln393_fu_749_p2 = 64'd15 << zext_ln393_1_fu_745_p1;

assign t1_fu_431_p3 = {{trunc_ln728_reg_822}, {3'd0}};

assign t2_fu_438_p3 = {{tmp_s_reg_827}, {3'd0}};

assign t4_fu_445_p3 = {{tmp_54_reg_832}, {3'd0}};

assign t5_fu_498_p3 = {{tmp_55_reg_837}, {3'd0}};

assign t6_fu_452_p3 = {{tmp_56_reg_842}, {3'd0}};

assign tmp2_fu_624_p4 = {{{select_ln357_2_reg_812_pp0_iter38_reg}, {trunc_ln392_3_fu_610_p1}}, {3'd0}};

assign tmp_57_fu_547_p4 = {{ret_V_1_fu_543_p2[69:8]}};

assign tmp_60_fu_691_p4 = {{grp_fu_595_p2[20:3]}};

assign tmp_78_fu_309_p4 = {{add_ln357_fu_289_p2[8:1]}};

assign tmp_79_fu_353_p4 = {{select_ln357_fu_301_p3[10:1]}};

assign tmp_fu_261_p4 = {{ap_phi_mux_r_phi_fu_199_p4[8:1]}};

assign trunc_ln1_fu_527_p4 = {{ret_V_fu_523_p2[69:8]}};

assign trunc_ln392_1_fu_616_p3 = {{trunc_ln392_4_fu_613_p1}, {3'd0}};

assign trunc_ln392_3_fu_610_p1 = select_ln357_reg_805_pp0_iter38_reg[9:0];

assign trunc_ln392_4_fu_613_p1 = select_ln357_reg_805_pp0_iter38_reg[2:0];

assign trunc_ln392_fu_245_p1 = outputs_dout[5:0];

assign trunc_ln728_fu_387_p1 = tensor_dout[31:0];

assign zext_ln392_1_fu_709_p1 = ap_phi_mux_phi_ln731_1_phi_fu_221_p6;

assign zext_ln392_2_fu_647_p1 = add_ln392_1_fu_642_p2;

assign zext_ln392_3_fu_720_p1 = shl_ln392_2_fu_713_p3;

assign zext_ln392_fu_633_p1 = tmp2_fu_624_p4;

assign zext_ln393_1_fu_745_p1 = add_ln393_1_fu_740_p2;

assign zext_ln393_2_fu_766_p1 = shl_ln393_1_fu_759_p3;

assign zext_ln393_fu_755_p1 = ap_phi_reg_pp0_iter40_phi_ln731_reg_231;

always @ (posedge ap_clk) begin
    sext_ln1115_reg_847[2:0] <= 3'b000;
    sext_ln1118_reg_853[2:0] <= 3'b000;
    sext_ln1115_3_reg_859[2:0] <= 3'b000;
    sext_ln1115_4_reg_867[2:0] <= 3'b000;
end

endmodule //optical_flow_flow_calc
