// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module optical_flow_gradient_xy_calc (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        frame3_a_V_dout,
        frame3_a_V_empty_n,
        frame3_a_V_read,
        gradient_x_V_din,
        gradient_x_V_full_n,
        gradient_x_V_write,
        gradient_y_V_din,
        gradient_y_V_full_n,
        gradient_y_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state9 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [23:0] frame3_a_V_dout;
input   frame3_a_V_empty_n;
output   frame3_a_V_read;
output  [31:0] gradient_x_V_din;
input   gradient_x_V_full_n;
output   gradient_x_V_write;
output  [31:0] gradient_y_V_din;
input   gradient_y_V_full_n;
output   gradient_y_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg frame3_a_V_read;
reg[31:0] gradient_x_V_din;
reg gradient_x_V_write;
reg[31:0] gradient_y_V_din;
reg gradient_y_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    buf_V_1_ce0;
reg    buf_V_1_we0;
wire   [27:0] buf_V_1_q0;
reg    buf_V_2_ce0;
reg    buf_V_2_we0;
wire   [9:0] buf_V_2_address1;
reg    buf_V_2_ce1;
wire   [27:0] buf_V_2_q1;
reg    buf_V_3_ce0;
reg    buf_V_3_we0;
wire   [9:0] buf_V_3_address1;
reg    buf_V_3_ce1;
wire   [27:0] buf_V_3_q1;
reg    buf_V_4_ce0;
reg    buf_V_4_we0;
wire   [9:0] buf_V_4_address1;
reg    buf_V_4_ce1;
reg    buf_V_4_we1;
wire   [27:0] buf_V_4_q1;
reg    frame3_a_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln38_reg_1152;
reg   [0:0] and_ln47_reg_1188;
reg    gradient_x_V_blk_n;
reg    ap_enable_reg_pp0_iter6;
reg   [0:0] and_ln86_1_reg_1197;
reg   [0:0] and_ln86_1_reg_1197_pp0_iter5_reg;
reg   [0:0] and_ln96_reg_1201;
reg   [0:0] and_ln96_reg_1201_pp0_iter5_reg;
reg    gradient_y_V_blk_n;
reg   [18:0] indvar_flatten_reg_269;
reg   [8:0] r_reg_280;
reg   [10:0] c_reg_291;
wire   [18:0] add_ln38_1_fu_302_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op98_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
reg    ap_predicate_op177_write_state5;
reg    ap_predicate_op178_write_state5;
reg    ap_block_state5_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln38_fu_352_p2;
reg   [0:0] icmp_ln38_reg_1152_pp0_iter1_reg;
wire   [8:0] select_ln38_4_fu_446_p3;
reg   [9:0] buf_V_1_addr_reg_1161;
reg   [9:0] buf_V_2_addr_reg_1166;
reg   [9:0] buf_V_3_addr_reg_1172;
reg   [9:0] buf_V_4_addr_reg_1178;
wire   [0:0] tmp_39_fu_462_p3;
reg   [0:0] tmp_39_reg_1184;
wire   [0:0] and_ln47_fu_476_p2;
reg   [0:0] and_ln47_reg_1188_pp0_iter1_reg;
wire   [0:0] and_ln86_1_fu_504_p2;
reg   [0:0] and_ln86_1_reg_1197_pp0_iter1_reg;
reg   [0:0] and_ln86_1_reg_1197_pp0_iter2_reg;
reg   [0:0] and_ln86_1_reg_1197_pp0_iter3_reg;
reg   [0:0] and_ln86_1_reg_1197_pp0_iter4_reg;
wire   [0:0] and_ln96_fu_526_p2;
reg   [0:0] and_ln96_reg_1201_pp0_iter1_reg;
reg   [0:0] and_ln96_reg_1201_pp0_iter2_reg;
reg   [0:0] and_ln96_reg_1201_pp0_iter3_reg;
reg   [0:0] and_ln96_reg_1201_pp0_iter4_reg;
wire   [10:0] add_ln40_fu_532_p2;
reg   [16:0] window_val_V_3_3_load_reg_1210;
reg   [16:0] window_val_V_1_3_1_i_load_reg_1215;
reg   [16:0] window_val_V_2_4_reg_1220;
wire  signed [31:0] add_ln703_2_fu_883_p2;
reg  signed [31:0] add_ln703_2_reg_1225;
wire  signed [31:0] add_ln703_5_fu_923_p2;
reg  signed [31:0] add_ln703_5_reg_1230;
reg   [0:0] tmp_41_reg_1235;
reg   [0:0] tmp_41_reg_1235_pp0_iter3_reg;
reg   [0:0] tmp_41_reg_1235_pp0_iter4_reg;
reg   [0:0] tmp_44_reg_1241;
reg   [0:0] tmp_44_reg_1241_pp0_iter3_reg;
reg   [0:0] tmp_44_reg_1241_pp0_iter4_reg;
wire   [64:0] grp_fu_948_p2;
reg   [64:0] mul_ln1148_reg_1257;
reg   [28:0] tmp_43_reg_1262;
wire   [64:0] grp_fu_957_p2;
reg   [64:0] mul_ln1148_1_reg_1267;
reg   [28:0] tmp_46_reg_1272;
wire   [31:0] select_ln1148_2_fu_1018_p3;
reg   [31:0] select_ln1148_2_reg_1277;
wire   [31:0] select_ln1148_4_fu_1060_p3;
reg   [31:0] select_ln1148_4_reg_1282;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter2_state4;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
wire   [63:0] zext_ln40_fu_454_p1;
reg   [16:0] window_val_V_4_3_fu_128;
wire   [16:0] select_ln47_4_fu_728_p3;
reg   [16:0] window_val_V_4_3_1_fu_132;
reg   [16:0] window_val_V_3_3_fu_136;
wire   [16:0] select_ln47_3_fu_616_p3;
reg   [16:0] window_val_V_3_3_1_fu_140;
reg   [16:0] window_val_V_0_3_1_i_fu_144;
reg   [16:0] window_val_V_0_3_fu_148;
wire   [16:0] select_ln47_2_fu_721_p3;
reg   [16:0] window_val_V_1_3_1_i_fu_152;
reg   [16:0] window_val_V_1_3_fu_156;
wire   [16:0] select_ln47_1_fu_609_p3;
reg   [16:0] window_val_V_2_1_1_i_fu_160;
reg   [16:0] window_val_V_2_1_fu_164;
reg   [16:0] window_val_V_2_2_fu_168;
reg   [16:0] window_val_V_2_3_fu_172;
wire  signed [16:0] select_ln47_fu_715_p3;
reg   [31:0] smallbuf_V_4_1_i_fu_176;
wire  signed [31:0] sext_ln48_fu_570_p1;
reg    ap_block_pp0_stage0_01001;
wire   [27:0] smallbuf_V_4_fu_561_p3;
wire   [7:0] tmp_fu_314_p4;
wire   [6:0] tmp_36_fu_330_p4;
wire   [0:0] cmp17_i_fu_308_p2;
wire   [0:0] icmp26_fu_340_p2;
wire   [0:0] icmp_ln40_fu_364_p2;
wire   [8:0] add_ln38_fu_358_p2;
wire   [0:0] cmp17_i_mid1_fu_378_p2;
wire   [7:0] tmp_37_fu_392_p4;
wire   [0:0] icmp38_fu_402_p2;
wire   [0:0] icmp_fu_324_p2;
wire   [6:0] tmp_38_fu_416_p4;
wire   [0:0] icmp41_fu_426_p2;
wire   [0:0] and_ln86_3_fu_432_p2;
wire   [0:0] and_ln86_fu_346_p2;
wire   [10:0] select_ln38_fu_370_p3;
wire   [0:0] select_ln38_1_fu_384_p3;
wire   [0:0] xor_ln47_fu_470_p2;
wire   [8:0] tmp_40_fu_482_p4;
wire   [0:0] icmp_ln86_fu_492_p2;
wire   [0:0] and_ln86_2_fu_498_p2;
wire   [0:0] select_ln38_3_fu_438_p3;
wire   [9:0] tmp_47_fu_510_p4;
wire   [0:0] select_ln38_2_fu_408_p3;
wire   [0:0] icmp_ln96_fu_520_p2;
wire   [16:0] trunc_ln728_fu_557_p1;
wire   [16:0] window_val_V_1_4_fu_579_p4;
wire   [16:0] window_val_V_3_4_fu_599_p4;
wire   [16:0] window_val_V_0_4_fu_695_p4;
wire   [16:0] window_val_V_4_4_fu_705_p4;
wire   [27:0] tmp_s_fu_750_p3;
wire   [27:0] tmp_23_fu_762_p3;
wire   [19:0] shl_ln703_2_fu_774_p3;
wire  signed [20:0] sext_ln703_2_fu_782_p1;
wire   [20:0] sub_ln703_fu_786_p2;
wire   [19:0] shl_ln703_4_fu_800_p3;
wire  signed [20:0] sext_ln703_3_fu_807_p1;
wire   [20:0] sub_ln703_1_fu_811_p2;
wire   [30:0] tmp_24_fu_825_p3;
wire   [30:0] tmp_25_fu_837_p3;
wire  signed [17:0] sext_ln703_6_fu_849_p1;
wire   [17:0] sub_ln703_2_fu_853_p2;
wire   [28:0] tmp_26_fu_859_p3;
wire   [31:0] shl_ln703_3_fu_792_p3;
wire  signed [31:0] sext_ln703_fu_758_p1;
wire  signed [31:0] sext_ln703_4_fu_833_p1;
wire  signed [31:0] sext_ln703_7_fu_867_p1;
wire   [31:0] add_ln703_1_fu_877_p2;
wire   [31:0] add_ln703_fu_871_p2;
wire  signed [16:0] sext_ln703_8_fu_889_p0;
wire  signed [17:0] sext_ln703_8_fu_889_p1;
wire   [17:0] sub_ln703_3_fu_893_p2;
wire   [28:0] tmp_27_fu_899_p3;
wire   [31:0] shl_ln703_5_fu_817_p3;
wire  signed [31:0] sext_ln703_1_fu_770_p1;
wire  signed [31:0] sext_ln703_5_fu_845_p1;
wire  signed [31:0] sext_ln703_9_fu_907_p1;
wire   [31:0] add_ln703_4_fu_917_p2;
wire   [31:0] add_ln703_3_fu_911_p2;
wire   [33:0] grp_fu_948_p1;
wire   [33:0] grp_fu_957_p1;
wire   [64:0] sub_ln1148_fu_983_p2;
wire   [28:0] tmp_42_fu_988_p4;
wire  signed [31:0] sext_ln1148_3_fu_998_p1;
wire  signed [31:0] sext_ln1148_4_fu_1002_p1;
wire   [31:0] select_ln1148_fu_1005_p3;
wire   [31:0] sub_ln1148_2_fu_1012_p2;
wire   [64:0] sub_ln1148_3_fu_1025_p2;
wire   [28:0] tmp_45_fu_1030_p4;
wire  signed [31:0] sext_ln1148_6_fu_1040_p1;
wire  signed [31:0] sext_ln1148_7_fu_1044_p1;
wire   [31:0] select_ln1148_3_fu_1047_p3;
wire   [31:0] sub_ln1148_4_fu_1054_p2;
reg    grp_fu_948_ce;
reg    grp_fu_957_ce;
wire    ap_CS_fsm_state9;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_326;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

optical_flow_gradient_xy_calc_buf_V_1 #(
    .DataWidth( 28 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_1_addr_reg_1161),
    .ce0(buf_V_1_ce0),
    .we0(buf_V_1_we0),
    .d0(buf_V_2_q1),
    .q0(buf_V_1_q0)
);

optical_flow_gradient_xy_calc_buf_V_2 #(
    .DataWidth( 28 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_2_addr_reg_1166),
    .ce0(buf_V_2_ce0),
    .we0(buf_V_2_we0),
    .d0(buf_V_3_q1),
    .address1(buf_V_2_address1),
    .ce1(buf_V_2_ce1),
    .q1(buf_V_2_q1)
);

optical_flow_gradient_xy_calc_buf_V_2 #(
    .DataWidth( 28 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_3_addr_reg_1172),
    .ce0(buf_V_3_ce0),
    .we0(buf_V_3_we0),
    .d0(buf_V_4_q1),
    .address1(buf_V_3_address1),
    .ce1(buf_V_3_ce1),
    .q1(buf_V_3_q1)
);

optical_flow_gradient_xy_calc_buf_V_4 #(
    .DataWidth( 28 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_4_addr_reg_1178),
    .ce0(buf_V_4_ce0),
    .we0(buf_V_4_we0),
    .d0(smallbuf_V_4_fu_561_p3),
    .address1(buf_V_4_address1),
    .ce1(buf_V_4_ce1),
    .we1(buf_V_4_we1),
    .d1(28'd0),
    .q1(buf_V_4_q1)
);

optical_flow_mul_32s_34ns_65_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_32s_34ns_65_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln703_2_reg_1225),
    .din1(grp_fu_948_p1),
    .ce(grp_fu_948_ce),
    .dout(grp_fu_948_p2)
);

optical_flow_mul_32s_34ns_65_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_32s_34ns_65_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln703_5_reg_1230),
    .din1(grp_fu_957_p1),
    .ce(grp_fu_957_ce),
    .dout(grp_fu_957_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state4)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln38_fu_352_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_reg_291 <= add_ln40_fu_532_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        c_reg_291 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln38_fu_352_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_269 <= add_ln38_1_fu_302_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_269 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln38_fu_352_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_reg_280 <= select_ln38_4_fu_446_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_reg_280 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_326)) begin
        if ((1'd1 == and_ln47_reg_1188)) begin
                        smallbuf_V_4_1_i_fu_176[31 : 11] <= sext_ln48_fu_570_p1[31 : 11];
        end else if (((tmp_39_reg_1184 == 1'd0) & (1'd0 == and_ln47_reg_1188))) begin
                        smallbuf_V_4_1_i_fu_176[11] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[12] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[13] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[14] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[15] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[16] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[17] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[18] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[19] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[20] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[21] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[22] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[23] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[24] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[25] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[26] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[27] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[28] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[29] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[30] <= 1'b0;
            smallbuf_V_4_1_i_fu_176[31] <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_reg_1152_pp0_iter1_reg == 1'd0) & (1'd1 == and_ln86_1_reg_1197_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_2_reg_1225[31 : 11] <= add_ln703_2_fu_883_p2[31 : 11];
        add_ln703_5_reg_1230[31 : 11] <= add_ln703_5_fu_923_p2[31 : 11];
        tmp_41_reg_1235 <= add_ln703_2_fu_883_p2[32'd31];
        tmp_44_reg_1241 <= add_ln703_5_fu_923_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln38_fu_352_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln47_reg_1188 <= and_ln47_fu_476_p2;
        and_ln86_1_reg_1197 <= and_ln86_1_fu_504_p2;
        buf_V_1_addr_reg_1161 <= zext_ln40_fu_454_p1;
        buf_V_2_addr_reg_1166 <= zext_ln40_fu_454_p1;
        buf_V_3_addr_reg_1172 <= zext_ln40_fu_454_p1;
        buf_V_4_addr_reg_1178 <= zext_ln40_fu_454_p1;
        tmp_39_reg_1184 <= select_ln38_fu_370_p3[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln47_reg_1188_pp0_iter1_reg <= and_ln47_reg_1188;
        and_ln86_1_reg_1197_pp0_iter1_reg <= and_ln86_1_reg_1197;
        and_ln96_reg_1201_pp0_iter1_reg <= and_ln96_reg_1201;
        icmp_ln38_reg_1152 <= icmp_ln38_fu_352_p2;
        icmp_ln38_reg_1152_pp0_iter1_reg <= icmp_ln38_reg_1152;
        window_val_V_1_3_1_i_load_reg_1215 <= window_val_V_1_3_1_i_fu_152;
        window_val_V_3_3_load_reg_1210 <= window_val_V_3_3_fu_136;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln86_1_reg_1197_pp0_iter2_reg <= and_ln86_1_reg_1197_pp0_iter1_reg;
        and_ln86_1_reg_1197_pp0_iter3_reg <= and_ln86_1_reg_1197_pp0_iter2_reg;
        and_ln86_1_reg_1197_pp0_iter4_reg <= and_ln86_1_reg_1197_pp0_iter3_reg;
        and_ln86_1_reg_1197_pp0_iter5_reg <= and_ln86_1_reg_1197_pp0_iter4_reg;
        and_ln96_reg_1201_pp0_iter2_reg <= and_ln96_reg_1201_pp0_iter1_reg;
        and_ln96_reg_1201_pp0_iter3_reg <= and_ln96_reg_1201_pp0_iter2_reg;
        and_ln96_reg_1201_pp0_iter4_reg <= and_ln96_reg_1201_pp0_iter3_reg;
        and_ln96_reg_1201_pp0_iter5_reg <= and_ln96_reg_1201_pp0_iter4_reg;
        tmp_41_reg_1235_pp0_iter3_reg <= tmp_41_reg_1235;
        tmp_41_reg_1235_pp0_iter4_reg <= tmp_41_reg_1235_pp0_iter3_reg;
        tmp_44_reg_1241_pp0_iter3_reg <= tmp_44_reg_1241;
        tmp_44_reg_1241_pp0_iter4_reg <= tmp_44_reg_1241_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln38_fu_352_p2 == 1'd0) & (1'd0 == and_ln86_1_fu_504_p2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln96_reg_1201 <= and_ln96_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln86_1_reg_1197_pp0_iter3_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln1148_1_reg_1267 <= grp_fu_957_p2;
        mul_ln1148_reg_1257 <= grp_fu_948_p2;
        tmp_43_reg_1262 <= {{grp_fu_948_p2[64:36]}};
        tmp_46_reg_1272 <= {{grp_fu_957_p2[64:36]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln86_1_reg_1197_pp0_iter4_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln1148_2_reg_1277 <= select_ln1148_2_fu_1018_p3;
        select_ln1148_4_reg_1282 <= select_ln1148_4_fu_1060_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        window_val_V_0_3_1_i_fu_144 <= window_val_V_0_3_fu_148;
        window_val_V_2_1_1_i_fu_160 <= window_val_V_2_1_fu_164;
        window_val_V_2_1_fu_164 <= window_val_V_2_2_fu_168;
        window_val_V_2_2_fu_168 <= window_val_V_2_3_fu_172;
        window_val_V_3_3_1_fu_140 <= window_val_V_3_3_load_reg_1210;
        window_val_V_4_3_1_fu_132 <= window_val_V_4_3_fu_128;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln38_reg_1152_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        window_val_V_0_3_fu_148 <= select_ln47_2_fu_721_p3;
        window_val_V_2_3_fu_172 <= select_ln47_fu_715_p3;
        window_val_V_4_3_fu_128 <= select_ln47_4_fu_728_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        window_val_V_1_3_1_i_fu_152 <= window_val_V_1_3_fu_156;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        window_val_V_1_3_fu_156 <= select_ln47_1_fu_609_p3;
        window_val_V_3_3_fu_136 <= select_ln47_3_fu_616_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        window_val_V_2_4_reg_1220 <= {{buf_V_3_q1[27:11]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln38_fu_352_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_39_reg_1184 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_39_reg_1184 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        buf_V_1_we0 = 1'b1;
    end else begin
        buf_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_39_reg_1184 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_39_reg_1184 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        buf_V_2_we0 = 1'b1;
    end else begin
        buf_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_39_reg_1184 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        buf_V_3_ce0 = 1'b1;
    end else begin
        buf_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_3_ce1 = 1'b1;
    end else begin
        buf_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_39_reg_1184 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        buf_V_3_we0 = 1'b1;
    end else begin
        buf_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        buf_V_4_ce0 = 1'b1;
    end else begin
        buf_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln38_fu_352_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_4_ce1 = 1'b1;
    end else begin
        buf_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        buf_V_4_we0 = 1'b1;
    end else begin
        buf_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_39_fu_462_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln38_fu_352_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'd0 == and_ln47_fu_476_p2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_4_we1 = 1'b1;
    end else begin
        buf_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        frame3_a_V_blk_n = frame3_a_V_empty_n;
    end else begin
        frame3_a_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op98_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        frame3_a_V_read = 1'b1;
    end else begin
        frame3_a_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter6 == 1'b1) & (1'd1 == and_ln96_reg_1201_pp0_iter5_reg) & (1'd0 == and_ln86_1_reg_1197_pp0_iter5_reg) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'd1 == and_ln86_1_reg_1197_pp0_iter5_reg) & (1'b0 == ap_block_pp0_stage0)))) begin
        gradient_x_V_blk_n = gradient_x_V_full_n;
    end else begin
        gradient_x_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((1'd1 == and_ln86_1_reg_1197_pp0_iter5_reg)) begin
            gradient_x_V_din = select_ln1148_2_reg_1277;
        end else if ((ap_predicate_op177_write_state5 == 1'b1)) begin
            gradient_x_V_din = 32'd0;
        end else begin
            gradient_x_V_din = 'bx;
        end
    end else begin
        gradient_x_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op177_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'd1 == and_ln86_1_reg_1197_pp0_iter5_reg) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        gradient_x_V_write = 1'b1;
    end else begin
        gradient_x_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter6 == 1'b1) & (1'd1 == and_ln96_reg_1201_pp0_iter5_reg) & (1'd0 == and_ln86_1_reg_1197_pp0_iter5_reg) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'd1 == and_ln86_1_reg_1197_pp0_iter5_reg) & (1'b0 == ap_block_pp0_stage0)))) begin
        gradient_y_V_blk_n = gradient_y_V_full_n;
    end else begin
        gradient_y_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((1'd1 == and_ln86_1_reg_1197_pp0_iter5_reg)) begin
            gradient_y_V_din = select_ln1148_4_reg_1282;
        end else if ((ap_predicate_op178_write_state5 == 1'b1)) begin
            gradient_y_V_din = 32'd0;
        end else begin
            gradient_y_V_din = 'bx;
        end
    end else begin
        gradient_y_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op178_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'd1 == and_ln86_1_reg_1197_pp0_iter5_reg) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        gradient_y_V_write = 1'b1;
    end else begin
        gradient_y_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_948_ce = 1'b1;
    end else begin
        grp_fu_948_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_957_ce = 1'b1;
    end else begin
        grp_fu_957_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln38_1_fu_302_p2 = (indvar_flatten_reg_269 + 19'd1);

assign add_ln38_fu_358_p2 = (r_reg_280 + 9'd1);

assign add_ln40_fu_532_p2 = (select_ln38_fu_370_p3 + 11'd1);

assign add_ln703_1_fu_877_p2 = ($signed(sext_ln703_4_fu_833_p1) + $signed(sext_ln703_7_fu_867_p1));

assign add_ln703_2_fu_883_p2 = (add_ln703_1_fu_877_p2 + add_ln703_fu_871_p2);

assign add_ln703_3_fu_911_p2 = ($signed(shl_ln703_5_fu_817_p3) + $signed(sext_ln703_1_fu_770_p1));

assign add_ln703_4_fu_917_p2 = ($signed(sext_ln703_5_fu_845_p1) + $signed(sext_ln703_9_fu_907_p1));

assign add_ln703_5_fu_923_p2 = (add_ln703_4_fu_917_p2 + add_ln703_3_fu_911_p2);

assign add_ln703_fu_871_p2 = ($signed(shl_ln703_3_fu_792_p3) + $signed(sext_ln703_fu_758_p1));

assign and_ln47_fu_476_p2 = (xor_ln47_fu_470_p2 & select_ln38_1_fu_384_p3);

assign and_ln86_1_fu_504_p2 = (select_ln38_3_fu_438_p3 & and_ln86_2_fu_498_p2);

assign and_ln86_2_fu_498_p2 = (xor_ln47_fu_470_p2 & icmp_ln86_fu_492_p2);

assign and_ln86_3_fu_432_p2 = (icmp41_fu_426_p2 & cmp17_i_mid1_fu_378_p2);

assign and_ln86_fu_346_p2 = (icmp26_fu_340_p2 & cmp17_i_fu_308_p2);

assign and_ln96_fu_526_p2 = (select_ln38_2_fu_408_p3 & icmp_ln96_fu_520_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((frame3_a_V_empty_n == 1'b0) & (ap_predicate_op98_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (((gradient_y_V_full_n == 1'b0) & (ap_predicate_op178_write_state5 == 1'b1)) | ((gradient_y_V_full_n == 1'b0) & (1'd1 == and_ln86_1_reg_1197_pp0_iter5_reg)) | ((gradient_x_V_full_n == 1'b0) & (ap_predicate_op177_write_state5 == 1'b1)) | ((gradient_x_V_full_n == 1'b0) & (1'd1 == and_ln86_1_reg_1197_pp0_iter5_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((frame3_a_V_empty_n == 1'b0) & (ap_predicate_op98_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (((gradient_y_V_full_n == 1'b0) & (ap_predicate_op178_write_state5 == 1'b1)) | ((gradient_y_V_full_n == 1'b0) & (1'd1 == and_ln86_1_reg_1197_pp0_iter5_reg)) | ((gradient_x_V_full_n == 1'b0) & (ap_predicate_op177_write_state5 == 1'b1)) | ((gradient_x_V_full_n == 1'b0) & (1'd1 == and_ln86_1_reg_1197_pp0_iter5_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((frame3_a_V_empty_n == 1'b0) & (ap_predicate_op98_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (((gradient_y_V_full_n == 1'b0) & (ap_predicate_op178_write_state5 == 1'b1)) | ((gradient_y_V_full_n == 1'b0) & (1'd1 == and_ln86_1_reg_1197_pp0_iter5_reg)) | ((gradient_x_V_full_n == 1'b0) & (ap_predicate_op177_write_state5 == 1'b1)) | ((gradient_x_V_full_n == 1'b0) & (1'd1 == and_ln86_1_reg_1197_pp0_iter5_reg)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((frame3_a_V_empty_n == 1'b0) & (ap_predicate_op98_read_state3 == 1'b1));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter6 = (((gradient_y_V_full_n == 1'b0) & (ap_predicate_op178_write_state5 == 1'b1)) | ((gradient_y_V_full_n == 1'b0) & (1'd1 == and_ln86_1_reg_1197_pp0_iter5_reg)) | ((gradient_x_V_full_n == 1'b0) & (ap_predicate_op177_write_state5 == 1'b1)) | ((gradient_x_V_full_n == 1'b0) & (1'd1 == and_ln86_1_reg_1197_pp0_iter5_reg)));
end

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_326 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln38_reg_1152 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op177_write_state5 = ((1'd1 == and_ln96_reg_1201_pp0_iter5_reg) & (1'd0 == and_ln86_1_reg_1197_pp0_iter5_reg));
end

always @ (*) begin
    ap_predicate_op178_write_state5 = ((1'd1 == and_ln96_reg_1201_pp0_iter5_reg) & (1'd0 == and_ln86_1_reg_1197_pp0_iter5_reg));
end

always @ (*) begin
    ap_predicate_op98_read_state3 = ((1'd1 == and_ln47_reg_1188) & (icmp_ln38_reg_1152 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign buf_V_2_address1 = zext_ln40_fu_454_p1;

assign buf_V_3_address1 = zext_ln40_fu_454_p1;

assign buf_V_4_address1 = zext_ln40_fu_454_p1;

assign cmp17_i_fu_308_p2 = ((r_reg_280 < 9'd436) ? 1'b1 : 1'b0);

assign cmp17_i_mid1_fu_378_p2 = ((add_ln38_fu_358_p2 < 9'd436) ? 1'b1 : 1'b0);

assign grp_fu_948_p1 = 65'd5726623062;

assign grp_fu_957_p1 = 65'd5726623062;

assign icmp26_fu_340_p2 = ((tmp_36_fu_330_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp38_fu_402_p2 = ((tmp_37_fu_392_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp41_fu_426_p2 = ((tmp_38_fu_416_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_fu_324_p2 = ((tmp_fu_314_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_352_p2 = ((indvar_flatten_reg_269 == 19'd449388) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_364_p2 = ((c_reg_291 == 11'd1026) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_492_p2 = ((tmp_40_fu_482_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_520_p2 = ((tmp_47_fu_510_p4 != 10'd0) ? 1'b1 : 1'b0);

assign select_ln1148_2_fu_1018_p3 = ((tmp_41_reg_1235_pp0_iter4_reg[0:0] == 1'b1) ? sub_ln1148_2_fu_1012_p2 : sext_ln1148_4_fu_1002_p1);

assign select_ln1148_3_fu_1047_p3 = ((tmp_44_reg_1241_pp0_iter4_reg[0:0] == 1'b1) ? sext_ln1148_6_fu_1040_p1 : sext_ln1148_7_fu_1044_p1);

assign select_ln1148_4_fu_1060_p3 = ((tmp_44_reg_1241_pp0_iter4_reg[0:0] == 1'b1) ? sub_ln1148_4_fu_1054_p2 : sext_ln1148_7_fu_1044_p1);

assign select_ln1148_fu_1005_p3 = ((tmp_41_reg_1235_pp0_iter4_reg[0:0] == 1'b1) ? sext_ln1148_3_fu_998_p1 : sext_ln1148_4_fu_1002_p1);

assign select_ln38_1_fu_384_p3 = ((icmp_ln40_fu_364_p2[0:0] == 1'b1) ? cmp17_i_mid1_fu_378_p2 : cmp17_i_fu_308_p2);

assign select_ln38_2_fu_408_p3 = ((icmp_ln40_fu_364_p2[0:0] == 1'b1) ? icmp38_fu_402_p2 : icmp_fu_324_p2);

assign select_ln38_3_fu_438_p3 = ((icmp_ln40_fu_364_p2[0:0] == 1'b1) ? and_ln86_3_fu_432_p2 : and_ln86_fu_346_p2);

assign select_ln38_4_fu_446_p3 = ((icmp_ln40_fu_364_p2[0:0] == 1'b1) ? add_ln38_fu_358_p2 : r_reg_280);

assign select_ln38_fu_370_p3 = ((icmp_ln40_fu_364_p2[0:0] == 1'b1) ? 11'd0 : c_reg_291);

assign select_ln47_1_fu_609_p3 = ((and_ln47_reg_1188[0:0] == 1'b1) ? window_val_V_1_4_fu_579_p4 : 17'd0);

assign select_ln47_2_fu_721_p3 = ((and_ln47_reg_1188_pp0_iter1_reg[0:0] == 1'b1) ? window_val_V_0_4_fu_695_p4 : 17'd0);

assign select_ln47_3_fu_616_p3 = ((and_ln47_reg_1188[0:0] == 1'b1) ? window_val_V_3_4_fu_599_p4 : 17'd0);

assign select_ln47_4_fu_728_p3 = ((and_ln47_reg_1188_pp0_iter1_reg[0:0] == 1'b1) ? window_val_V_4_4_fu_705_p4 : 17'd0);

assign select_ln47_fu_715_p3 = ((and_ln47_reg_1188_pp0_iter1_reg[0:0] == 1'b1) ? window_val_V_2_4_reg_1220 : 17'd0);

assign sext_ln1148_3_fu_998_p1 = $signed(tmp_42_fu_988_p4);

assign sext_ln1148_4_fu_1002_p1 = $signed(tmp_43_reg_1262);

assign sext_ln1148_6_fu_1040_p1 = $signed(tmp_45_fu_1030_p4);

assign sext_ln1148_7_fu_1044_p1 = $signed(tmp_46_reg_1272);

assign sext_ln48_fu_570_p1 = $signed(smallbuf_V_4_fu_561_p3);

assign sext_ln703_1_fu_770_p1 = $signed(tmp_23_fu_762_p3);

assign sext_ln703_2_fu_782_p1 = $signed(shl_ln703_2_fu_774_p3);

assign sext_ln703_3_fu_807_p1 = $signed(shl_ln703_4_fu_800_p3);

assign sext_ln703_4_fu_833_p1 = $signed(tmp_24_fu_825_p3);

assign sext_ln703_5_fu_845_p1 = $signed(tmp_25_fu_837_p3);

assign sext_ln703_6_fu_849_p1 = select_ln47_fu_715_p3;

assign sext_ln703_7_fu_867_p1 = $signed(tmp_26_fu_859_p3);

assign sext_ln703_8_fu_889_p0 = window_val_V_4_3_1_fu_132;

assign sext_ln703_8_fu_889_p1 = sext_ln703_8_fu_889_p0;

assign sext_ln703_9_fu_907_p1 = $signed(tmp_27_fu_899_p3);

assign sext_ln703_fu_758_p1 = $signed(tmp_s_fu_750_p3);

assign shl_ln703_2_fu_774_p3 = {{window_val_V_2_1_fu_164}, {3'd0}};

assign shl_ln703_3_fu_792_p3 = {{sub_ln703_fu_786_p2}, {11'd0}};

assign shl_ln703_4_fu_800_p3 = {{window_val_V_1_3_1_i_load_reg_1215}, {3'd0}};

assign shl_ln703_5_fu_817_p3 = {{sub_ln703_1_fu_811_p2}, {11'd0}};

assign smallbuf_V_4_fu_561_p3 = {{trunc_ln728_fu_557_p1}, {11'd0}};

assign start_out = real_start;

assign sub_ln1148_2_fu_1012_p2 = (32'd0 - select_ln1148_fu_1005_p3);

assign sub_ln1148_3_fu_1025_p2 = (65'd0 - mul_ln1148_1_reg_1267);

assign sub_ln1148_4_fu_1054_p2 = (32'd0 - select_ln1148_3_fu_1047_p3);

assign sub_ln1148_fu_983_p2 = (65'd0 - mul_ln1148_reg_1257);

assign sub_ln703_1_fu_811_p2 = ($signed(21'd0) - $signed(sext_ln703_3_fu_807_p1));

assign sub_ln703_2_fu_853_p2 = ($signed(18'd0) - $signed(sext_ln703_6_fu_849_p1));

assign sub_ln703_3_fu_893_p2 = ($signed(18'd0) - $signed(sext_ln703_8_fu_889_p1));

assign sub_ln703_fu_786_p2 = ($signed(21'd0) - $signed(sext_ln703_2_fu_782_p1));

assign tmp_23_fu_762_p3 = {{window_val_V_0_3_1_i_fu_144}, {11'd0}};

assign tmp_24_fu_825_p3 = {{window_val_V_2_3_fu_172}, {14'd0}};

assign tmp_25_fu_837_p3 = {{window_val_V_3_3_1_fu_140}, {14'd0}};

assign tmp_26_fu_859_p3 = {{sub_ln703_2_fu_853_p2}, {11'd0}};

assign tmp_27_fu_899_p3 = {{sub_ln703_3_fu_893_p2}, {11'd0}};

assign tmp_36_fu_330_p4 = {{r_reg_280[8:2]}};

assign tmp_37_fu_392_p4 = {{add_ln38_fu_358_p2[8:1]}};

assign tmp_38_fu_416_p4 = {{add_ln38_fu_358_p2[8:2]}};

assign tmp_39_fu_462_p3 = select_ln38_fu_370_p3[32'd10];

assign tmp_40_fu_482_p4 = {{select_ln38_fu_370_p3[10:2]}};

assign tmp_42_fu_988_p4 = {{sub_ln1148_fu_983_p2[64:36]}};

assign tmp_45_fu_1030_p4 = {{sub_ln1148_3_fu_1025_p2[64:36]}};

assign tmp_47_fu_510_p4 = {{select_ln38_fu_370_p3[10:1]}};

assign tmp_fu_314_p4 = {{r_reg_280[8:1]}};

assign tmp_s_fu_750_p3 = {{window_val_V_2_1_1_i_fu_160}, {11'd0}};

assign trunc_ln728_fu_557_p1 = frame3_a_V_dout[16:0];

assign window_val_V_0_4_fu_695_p4 = {{buf_V_1_q0[27:11]}};

assign window_val_V_1_4_fu_579_p4 = {{buf_V_2_q1[27:11]}};

assign window_val_V_3_4_fu_599_p4 = {{buf_V_4_q1[27:11]}};

assign window_val_V_4_4_fu_705_p4 = {{smallbuf_V_4_1_i_fu_176[27:11]}};

assign xor_ln47_fu_470_p2 = (tmp_39_fu_462_p3 ^ 1'd1);

assign zext_ln40_fu_454_p1 = select_ln38_fu_370_p3;

always @ (posedge ap_clk) begin
    add_ln703_2_reg_1225[10:0] <= 11'b00000000000;
    add_ln703_5_reg_1230[10:0] <= 11'b00000000000;
    smallbuf_V_4_1_i_fu_176[10:0] <= 11'b00000000000;
end

endmodule //optical_flow_gradient_xy_calc
