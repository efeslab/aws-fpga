// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module optical_flow_tensor_weight_x (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        tensor_y_dout,
        tensor_y_empty_n,
        tensor_y_read,
        tensor_din,
        tensor_full_n,
        tensor_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [191:0] tensor_y_dout;
input   tensor_y_empty_n;
output   tensor_y_read;
output  [191:0] tensor_din;
input   tensor_full_n;
output   tensor_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg tensor_y_read;
reg tensor_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    tensor_y_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln312_reg_1137;
reg   [0:0] tmp_25_reg_1141;
reg    tensor_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] icmp_ln344_reg_1155;
reg   [0:0] icmp_ln344_reg_1155_pp0_iter3_reg;
reg   [18:0] indvar_flatten_reg_149;
reg   [10:0] c_reg_160;
reg  signed [31:0] tmp_val_4_V_6_reg_171;
reg  signed [31:0] tmp_val_3_V_6_reg_183;
reg  signed [31:0] tmp_val_2_V_6_reg_195;
reg  signed [31:0] tmp_val_1_V_6_reg_207;
reg  signed [31:0] tmp_val_0_V_6_reg_219;
reg  signed [31:0] tmp_val_5_V_reg_231;
wire   [18:0] add_ln312_fu_243_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op68_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln312_fu_249_p2;
wire   [0:0] tmp_25_fu_269_p3;
wire   [0:0] and_ln333_fu_299_p2;
reg   [0:0] and_ln333_reg_1145;
reg   [0:0] and_ln333_reg_1145_pp0_iter1_reg;
reg   [0:0] and_ln333_reg_1145_pp0_iter2_reg;
reg   [0:0] and_ln333_reg_1145_pp0_iter3_reg;
wire   [0:0] icmp_ln344_fu_305_p2;
reg   [0:0] icmp_ln344_reg_1155_pp0_iter1_reg;
reg   [0:0] icmp_ln344_reg_1155_pp0_iter2_reg;
wire   [10:0] add_ln314_fu_311_p2;
reg   [31:0] tmp_reg_1224;
reg   [31:0] tmp_s_reg_1229;
reg   [31:0] tmp_13_reg_1234;
reg   [31:0] tmp_14_reg_1239;
reg   [31:0] tmp_15_reg_1244;
reg   [31:0] tmp_16_reg_1249;
wire   [50:0] grp_fu_525_p2;
reg   [50:0] mul_ln703_reg_1254;
wire   [50:0] grp_fu_535_p2;
reg   [50:0] mul_ln703_12_reg_1259;
wire   [50:0] grp_fu_545_p2;
reg   [50:0] mul_ln703_13_reg_1264;
wire   [50:0] grp_fu_555_p2;
reg   [50:0] mul_ln703_14_reg_1269;
wire   [50:0] grp_fu_565_p2;
reg   [50:0] mul_ln703_15_reg_1274;
wire   [50:0] grp_fu_575_p2;
reg   [50:0] mul_ln703_16_reg_1279;
reg   [31:0] tmp_17_reg_1314;
reg   [31:0] tmp_18_reg_1319;
reg   [31:0] tmp_19_reg_1324;
reg   [31:0] tmp_20_reg_1329;
reg   [31:0] tmp_21_reg_1334;
reg   [31:0] tmp_22_reg_1339;
wire   [50:0] grp_fu_675_p2;
reg   [50:0] mul_ln703_17_reg_1344;
wire   [50:0] grp_fu_685_p2;
reg   [50:0] mul_ln703_18_reg_1349;
wire   [50:0] grp_fu_695_p2;
reg   [50:0] mul_ln703_19_reg_1354;
wire   [50:0] grp_fu_705_p2;
reg   [50:0] mul_ln703_20_reg_1359;
wire   [50:0] grp_fu_715_p2;
reg   [50:0] mul_ln703_21_reg_1364;
wire   [50:0] grp_fu_725_p2;
reg   [50:0] mul_ln703_22_reg_1369;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state3;
reg    ap_enable_reg_pp0_iter3;
reg  signed [31:0] ap_phi_mux_tmp_val_4_V_6_phi_fu_175_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_val_4_V_6_reg_171;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_4_V_6_reg_171;
reg  signed [31:0] ap_phi_mux_tmp_val_3_V_6_phi_fu_187_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_val_3_V_6_reg_183;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_3_V_6_reg_183;
reg  signed [31:0] ap_phi_mux_tmp_val_2_V_6_phi_fu_199_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_val_2_V_6_reg_195;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_2_V_6_reg_195;
reg  signed [31:0] ap_phi_mux_tmp_val_1_V_6_phi_fu_211_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_val_1_V_6_reg_207;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_1_V_6_reg_207;
reg  signed [31:0] ap_phi_mux_tmp_val_0_V_6_phi_fu_223_p4;
wire   [31:0] tmp_val_0_V_5_fu_383_p1;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_val_0_V_6_reg_219;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_0_V_6_reg_219;
reg  signed [31:0] ap_phi_mux_tmp_val_5_V_phi_fu_235_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_val_5_V_reg_231;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_5_V_reg_231;
reg  signed [31:0] tmp_val_0_V_fu_88;
reg  signed [31:0] tmp_val_1_V_4_fu_92;
reg  signed [31:0] tmp_val_2_V_4_fu_96;
reg  signed [31:0] tmp_val_3_V_4_fu_100;
reg  signed [31:0] tmp_val_4_V_4_fu_104;
reg  signed [31:0] tmp_val_5_V_3_fu_108;
reg  signed [31:0] tmp_val_0_V_4_fu_112;
reg  signed [31:0] tmp_val_1_V_5_fu_116;
reg  signed [31:0] tmp_val_2_V_5_fu_120;
reg  signed [31:0] tmp_val_3_V_5_fu_124;
reg  signed [31:0] tmp_val_4_V_5_fu_128;
reg  signed [31:0] tmp_val_5_V_4_fu_132;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln314_fu_255_p2;
wire   [10:0] select_ln312_fu_261_p3;
wire   [9:0] tmp_26_fu_283_p4;
wire   [0:0] icmp_ln333_fu_293_p2;
wire   [0:0] xor_ln319_fu_277_p2;
wire   [18:0] grp_fu_465_p1;
wire   [18:0] grp_fu_475_p1;
wire   [18:0] grp_fu_485_p1;
wire   [18:0] grp_fu_495_p1;
wire   [18:0] grp_fu_505_p1;
wire   [18:0] grp_fu_515_p1;
wire   [18:0] grp_fu_525_p1;
wire   [18:0] grp_fu_535_p1;
wire   [18:0] grp_fu_545_p1;
wire   [18:0] grp_fu_555_p1;
wire   [18:0] grp_fu_565_p1;
wire   [18:0] grp_fu_575_p1;
wire   [50:0] grp_fu_465_p2;
wire   [50:0] grp_fu_475_p2;
wire   [50:0] grp_fu_485_p2;
wire   [50:0] grp_fu_495_p2;
wire   [50:0] grp_fu_505_p2;
wire   [50:0] grp_fu_515_p2;
wire   [18:0] grp_fu_675_p1;
wire   [18:0] grp_fu_685_p1;
wire   [18:0] grp_fu_695_p1;
wire   [18:0] grp_fu_705_p1;
wire   [18:0] grp_fu_715_p1;
wire   [18:0] grp_fu_725_p1;
wire   [50:0] and_ln_fu_731_p3;
wire   [50:0] add_ln1192_fu_773_p2;
wire   [50:0] and_ln728_s_fu_738_p3;
wire   [50:0] add_ln1192_12_fu_788_p2;
wire   [50:0] and_ln728_11_fu_745_p3;
wire   [50:0] add_ln1192_13_fu_803_p2;
wire   [50:0] and_ln728_12_fu_752_p3;
wire   [50:0] add_ln1192_14_fu_818_p2;
wire   [50:0] and_ln728_13_fu_759_p3;
wire   [50:0] add_ln1192_15_fu_833_p2;
wire   [50:0] and_ln728_14_fu_766_p3;
wire   [50:0] add_ln1192_16_fu_848_p2;
wire   [50:0] and_ln728_15_fu_863_p3;
wire   [50:0] add_ln1192_17_fu_905_p2;
wire   [50:0] and_ln728_16_fu_870_p3;
wire   [50:0] add_ln1192_18_fu_920_p2;
wire   [50:0] and_ln728_17_fu_877_p3;
wire   [50:0] add_ln1192_19_fu_935_p2;
wire   [50:0] and_ln728_18_fu_884_p3;
wire   [50:0] add_ln1192_20_fu_950_p2;
wire   [50:0] and_ln728_19_fu_891_p3;
wire   [50:0] add_ln1192_21_fu_965_p2;
wire   [50:0] and_ln728_20_fu_898_p3;
wire   [50:0] add_ln1192_22_fu_980_p2;
wire   [31:0] acc_val_5_V_fu_985_p4;
wire   [31:0] acc_val_4_V_fu_970_p4;
wire   [31:0] acc_val_3_V_fu_955_p4;
wire   [31:0] acc_val_2_V_fu_940_p4;
wire   [31:0] acc_val_1_V_fu_925_p4;
wire   [31:0] acc_val_0_V_fu_910_p4;
wire   [31:0] select_ln333_fu_995_p3;
wire   [31:0] select_ln333_1_fu_1002_p3;
wire   [31:0] select_ln333_2_fu_1009_p3;
wire   [31:0] select_ln333_3_fu_1016_p3;
wire   [31:0] select_ln333_4_fu_1023_p3;
wire   [31:0] select_ln333_5_fu_1030_p3;
reg    grp_fu_465_ce;
reg    grp_fu_475_ce;
reg    grp_fu_485_ce;
reg    grp_fu_495_ce;
reg    grp_fu_505_ce;
reg    grp_fu_515_ce;
reg    grp_fu_525_ce;
reg    grp_fu_535_ce;
reg    grp_fu_545_ce;
reg    grp_fu_555_ce;
reg    grp_fu_565_ce;
reg    grp_fu_575_ce;
reg    grp_fu_675_ce;
reg    grp_fu_685_ce;
reg    grp_fu_695_ce;
reg    grp_fu_705_ce;
reg    grp_fu_715_ce;
reg    grp_fu_725_ce;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_100;
reg    ap_condition_253;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U119(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_0_V_fu_88),
    .din1(grp_fu_465_p1),
    .ce(grp_fu_465_ce),
    .dout(grp_fu_465_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_1_V_4_fu_92),
    .din1(grp_fu_475_p1),
    .ce(grp_fu_475_ce),
    .dout(grp_fu_475_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_2_V_4_fu_96),
    .din1(grp_fu_485_p1),
    .ce(grp_fu_485_ce),
    .dout(grp_fu_485_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_3_V_4_fu_100),
    .din1(grp_fu_495_p1),
    .ce(grp_fu_495_ce),
    .dout(grp_fu_495_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U123(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_4_V_4_fu_104),
    .din1(grp_fu_505_p1),
    .ce(grp_fu_505_ce),
    .dout(grp_fu_505_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U124(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_5_V_3_fu_108),
    .din1(grp_fu_515_p1),
    .ce(grp_fu_515_ce),
    .dout(grp_fu_515_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U125(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_0_V_4_fu_112),
    .din1(grp_fu_525_p1),
    .ce(grp_fu_525_ce),
    .dout(grp_fu_525_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U126(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_1_V_5_fu_116),
    .din1(grp_fu_535_p1),
    .ce(grp_fu_535_ce),
    .dout(grp_fu_535_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U127(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_2_V_5_fu_120),
    .din1(grp_fu_545_p1),
    .ce(grp_fu_545_ce),
    .dout(grp_fu_545_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U128(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_3_V_5_fu_124),
    .din1(grp_fu_555_p1),
    .ce(grp_fu_555_ce),
    .dout(grp_fu_555_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U129(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_4_V_5_fu_128),
    .din1(grp_fu_565_p1),
    .ce(grp_fu_565_ce),
    .dout(grp_fu_565_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U130(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_5_V_4_fu_132),
    .din1(grp_fu_575_p1),
    .ce(grp_fu_575_ce),
    .dout(grp_fu_575_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U131(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_0_V_6_reg_219),
    .din1(grp_fu_675_p1),
    .ce(grp_fu_675_ce),
    .dout(grp_fu_675_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U132(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_1_V_6_reg_207),
    .din1(grp_fu_685_p1),
    .ce(grp_fu_685_ce),
    .dout(grp_fu_685_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U133(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_2_V_6_reg_195),
    .din1(grp_fu_695_p1),
    .ce(grp_fu_695_ce),
    .dout(grp_fu_695_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U134(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_3_V_6_reg_183),
    .din1(grp_fu_705_p1),
    .ce(grp_fu_705_ce),
    .dout(grp_fu_705_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U135(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_4_V_6_reg_171),
    .din1(grp_fu_715_p1),
    .ce(grp_fu_715_ce),
    .dout(grp_fu_715_p2)
);

optical_flow_mul_32s_19ns_51_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_2_1_U136(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_val_5_V_reg_231),
    .din1(grp_fu_725_p1),
    .ce(grp_fu_725_ce),
    .dout(grp_fu_725_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state3)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_100)) begin
        if (((tmp_25_fu_269_p3 == 1'd1) & (icmp_ln312_fu_249_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_val_0_V_6_reg_219 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_val_0_V_6_reg_219 <= ap_phi_reg_pp0_iter0_tmp_val_0_V_6_reg_219;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_100)) begin
        if (((tmp_25_fu_269_p3 == 1'd1) & (icmp_ln312_fu_249_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_val_1_V_6_reg_207 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_val_1_V_6_reg_207 <= ap_phi_reg_pp0_iter0_tmp_val_1_V_6_reg_207;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_100)) begin
        if (((tmp_25_fu_269_p3 == 1'd1) & (icmp_ln312_fu_249_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_val_2_V_6_reg_195 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_val_2_V_6_reg_195 <= ap_phi_reg_pp0_iter0_tmp_val_2_V_6_reg_195;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_100)) begin
        if (((tmp_25_fu_269_p3 == 1'd1) & (icmp_ln312_fu_249_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_val_3_V_6_reg_183 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_val_3_V_6_reg_183 <= ap_phi_reg_pp0_iter0_tmp_val_3_V_6_reg_183;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_100)) begin
        if (((tmp_25_fu_269_p3 == 1'd1) & (icmp_ln312_fu_249_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_val_4_V_6_reg_171 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_val_4_V_6_reg_171 <= ap_phi_reg_pp0_iter0_tmp_val_4_V_6_reg_171;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_100)) begin
        if (((tmp_25_fu_269_p3 == 1'd1) & (icmp_ln312_fu_249_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_val_5_V_reg_231 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_val_5_V_reg_231 <= ap_phi_reg_pp0_iter0_tmp_val_5_V_reg_231;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln312_fu_249_p2 == 1'd0))) begin
        c_reg_160 <= add_ln314_fu_311_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        c_reg_160 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln312_fu_249_p2 == 1'd0))) begin
        indvar_flatten_reg_149 <= add_ln312_fu_243_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_149 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_253)) begin
        if (((tmp_25_reg_1141 == 1'd0) & (icmp_ln312_reg_1137 == 1'd0))) begin
            tmp_val_0_V_6_reg_219 <= tmp_val_0_V_5_fu_383_p1;
        end else if ((1'b1 == 1'b1)) begin
            tmp_val_0_V_6_reg_219 <= ap_phi_reg_pp0_iter1_tmp_val_0_V_6_reg_219;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_253)) begin
        if (((tmp_25_reg_1141 == 1'd0) & (icmp_ln312_reg_1137 == 1'd0))) begin
            tmp_val_1_V_6_reg_207 <= {{tensor_y_dout[63:32]}};
        end else if ((1'b1 == 1'b1)) begin
            tmp_val_1_V_6_reg_207 <= ap_phi_reg_pp0_iter1_tmp_val_1_V_6_reg_207;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_253)) begin
        if (((tmp_25_reg_1141 == 1'd0) & (icmp_ln312_reg_1137 == 1'd0))) begin
            tmp_val_2_V_6_reg_195 <= {{tensor_y_dout[95:64]}};
        end else if ((1'b1 == 1'b1)) begin
            tmp_val_2_V_6_reg_195 <= ap_phi_reg_pp0_iter1_tmp_val_2_V_6_reg_195;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_253)) begin
        if (((tmp_25_reg_1141 == 1'd0) & (icmp_ln312_reg_1137 == 1'd0))) begin
            tmp_val_3_V_6_reg_183 <= {{tensor_y_dout[127:96]}};
        end else if ((1'b1 == 1'b1)) begin
            tmp_val_3_V_6_reg_183 <= ap_phi_reg_pp0_iter1_tmp_val_3_V_6_reg_183;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_253)) begin
        if (((tmp_25_reg_1141 == 1'd0) & (icmp_ln312_reg_1137 == 1'd0))) begin
            tmp_val_4_V_6_reg_171 <= {{tensor_y_dout[159:128]}};
        end else if ((1'b1 == 1'b1)) begin
            tmp_val_4_V_6_reg_171 <= ap_phi_reg_pp0_iter1_tmp_val_4_V_6_reg_171;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_253)) begin
        if (((tmp_25_reg_1141 == 1'd0) & (icmp_ln312_reg_1137 == 1'd0))) begin
            tmp_val_5_V_reg_231 <= {{tensor_y_dout[191:160]}};
        end else if ((1'b1 == 1'b1)) begin
            tmp_val_5_V_reg_231 <= ap_phi_reg_pp0_iter1_tmp_val_5_V_reg_231;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln312_fu_249_p2 == 1'd0))) begin
        and_ln333_reg_1145 <= and_ln333_fu_299_p2;
        icmp_ln344_reg_1155 <= icmp_ln344_fu_305_p2;
        tmp_25_reg_1141 <= select_ln312_fu_261_p3[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln333_reg_1145_pp0_iter1_reg <= and_ln333_reg_1145;
        icmp_ln312_reg_1137 <= icmp_ln312_fu_249_p2;
        icmp_ln344_reg_1155_pp0_iter1_reg <= icmp_ln344_reg_1155;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln333_reg_1145_pp0_iter2_reg <= and_ln333_reg_1145_pp0_iter1_reg;
        and_ln333_reg_1145_pp0_iter3_reg <= and_ln333_reg_1145_pp0_iter2_reg;
        icmp_ln344_reg_1155_pp0_iter2_reg <= icmp_ln344_reg_1155_pp0_iter1_reg;
        icmp_ln344_reg_1155_pp0_iter3_reg <= icmp_ln344_reg_1155_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln333_reg_1145_pp0_iter1_reg))) begin
        mul_ln703_12_reg_1259 <= grp_fu_535_p2;
        mul_ln703_13_reg_1264 <= grp_fu_545_p2;
        mul_ln703_14_reg_1269 <= grp_fu_555_p2;
        mul_ln703_15_reg_1274 <= grp_fu_565_p2;
        mul_ln703_16_reg_1279 <= grp_fu_575_p2;
        mul_ln703_reg_1254 <= grp_fu_525_p2;
        tmp_13_reg_1234 <= {{grp_fu_485_p2[50:19]}};
        tmp_14_reg_1239 <= {{grp_fu_495_p2[50:19]}};
        tmp_15_reg_1244 <= {{grp_fu_505_p2[50:19]}};
        tmp_16_reg_1249 <= {{grp_fu_515_p2[50:19]}};
        tmp_reg_1224 <= {{grp_fu_465_p2[50:19]}};
        tmp_s_reg_1229 <= {{grp_fu_475_p2[50:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln333_reg_1145_pp0_iter2_reg))) begin
        mul_ln703_17_reg_1344 <= grp_fu_675_p2;
        mul_ln703_18_reg_1349 <= grp_fu_685_p2;
        mul_ln703_19_reg_1354 <= grp_fu_695_p2;
        mul_ln703_20_reg_1359 <= grp_fu_705_p2;
        mul_ln703_21_reg_1364 <= grp_fu_715_p2;
        mul_ln703_22_reg_1369 <= grp_fu_725_p2;
        tmp_17_reg_1314 <= {{add_ln1192_fu_773_p2[50:19]}};
        tmp_18_reg_1319 <= {{add_ln1192_12_fu_788_p2[50:19]}};
        tmp_19_reg_1324 <= {{add_ln1192_13_fu_803_p2[50:19]}};
        tmp_20_reg_1329 <= {{add_ln1192_14_fu_818_p2[50:19]}};
        tmp_21_reg_1334 <= {{add_ln1192_15_fu_833_p2[50:19]}};
        tmp_22_reg_1339 <= {{add_ln1192_16_fu_848_p2[50:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln312_reg_1137 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_val_0_V_4_fu_112 <= ap_phi_mux_tmp_val_0_V_6_phi_fu_223_p4;
        tmp_val_1_V_5_fu_116 <= ap_phi_mux_tmp_val_1_V_6_phi_fu_211_p4;
        tmp_val_2_V_5_fu_120 <= ap_phi_mux_tmp_val_2_V_6_phi_fu_199_p4;
        tmp_val_3_V_5_fu_124 <= ap_phi_mux_tmp_val_3_V_6_phi_fu_187_p4;
        tmp_val_4_V_5_fu_128 <= ap_phi_mux_tmp_val_4_V_6_phi_fu_175_p4;
        tmp_val_5_V_4_fu_132 <= ap_phi_mux_tmp_val_5_V_phi_fu_235_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_val_0_V_fu_88 <= tmp_val_0_V_4_fu_112;
        tmp_val_1_V_4_fu_92 <= tmp_val_1_V_5_fu_116;
        tmp_val_2_V_4_fu_96 <= tmp_val_2_V_5_fu_120;
        tmp_val_3_V_4_fu_100 <= tmp_val_3_V_5_fu_124;
        tmp_val_4_V_4_fu_104 <= tmp_val_4_V_5_fu_128;
        tmp_val_5_V_3_fu_108 <= tmp_val_5_V_4_fu_132;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_pp0_exit_iter1_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln312_fu_249_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_25_reg_1141 == 1'd0) & (icmp_ln312_reg_1137 == 1'd0))) begin
        ap_phi_mux_tmp_val_0_V_6_phi_fu_223_p4 = tmp_val_0_V_5_fu_383_p1;
    end else begin
        ap_phi_mux_tmp_val_0_V_6_phi_fu_223_p4 = ap_phi_reg_pp0_iter1_tmp_val_0_V_6_reg_219;
    end
end

always @ (*) begin
    if (((tmp_25_reg_1141 == 1'd0) & (icmp_ln312_reg_1137 == 1'd0))) begin
        ap_phi_mux_tmp_val_1_V_6_phi_fu_211_p4 = {{tensor_y_dout[63:32]}};
    end else begin
        ap_phi_mux_tmp_val_1_V_6_phi_fu_211_p4 = ap_phi_reg_pp0_iter1_tmp_val_1_V_6_reg_207;
    end
end

always @ (*) begin
    if (((tmp_25_reg_1141 == 1'd0) & (icmp_ln312_reg_1137 == 1'd0))) begin
        ap_phi_mux_tmp_val_2_V_6_phi_fu_199_p4 = {{tensor_y_dout[95:64]}};
    end else begin
        ap_phi_mux_tmp_val_2_V_6_phi_fu_199_p4 = ap_phi_reg_pp0_iter1_tmp_val_2_V_6_reg_195;
    end
end

always @ (*) begin
    if (((tmp_25_reg_1141 == 1'd0) & (icmp_ln312_reg_1137 == 1'd0))) begin
        ap_phi_mux_tmp_val_3_V_6_phi_fu_187_p4 = {{tensor_y_dout[127:96]}};
    end else begin
        ap_phi_mux_tmp_val_3_V_6_phi_fu_187_p4 = ap_phi_reg_pp0_iter1_tmp_val_3_V_6_reg_183;
    end
end

always @ (*) begin
    if (((tmp_25_reg_1141 == 1'd0) & (icmp_ln312_reg_1137 == 1'd0))) begin
        ap_phi_mux_tmp_val_4_V_6_phi_fu_175_p4 = {{tensor_y_dout[159:128]}};
    end else begin
        ap_phi_mux_tmp_val_4_V_6_phi_fu_175_p4 = ap_phi_reg_pp0_iter1_tmp_val_4_V_6_reg_171;
    end
end

always @ (*) begin
    if (((tmp_25_reg_1141 == 1'd0) & (icmp_ln312_reg_1137 == 1'd0))) begin
        ap_phi_mux_tmp_val_5_V_phi_fu_235_p4 = {{tensor_y_dout[191:160]}};
    end else begin
        ap_phi_mux_tmp_val_5_V_phi_fu_235_p4 = ap_phi_reg_pp0_iter1_tmp_val_5_V_reg_231;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_465_ce = 1'b1;
    end else begin
        grp_fu_465_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_475_ce = 1'b1;
    end else begin
        grp_fu_475_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_485_ce = 1'b1;
    end else begin
        grp_fu_485_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_495_ce = 1'b1;
    end else begin
        grp_fu_495_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_505_ce = 1'b1;
    end else begin
        grp_fu_505_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_515_ce = 1'b1;
    end else begin
        grp_fu_515_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_525_ce = 1'b1;
    end else begin
        grp_fu_525_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_535_ce = 1'b1;
    end else begin
        grp_fu_535_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_545_ce = 1'b1;
    end else begin
        grp_fu_545_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_555_ce = 1'b1;
    end else begin
        grp_fu_555_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_565_ce = 1'b1;
    end else begin
        grp_fu_565_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_575_ce = 1'b1;
    end else begin
        grp_fu_575_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_675_ce = 1'b1;
    end else begin
        grp_fu_675_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_685_ce = 1'b1;
    end else begin
        grp_fu_685_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_695_ce = 1'b1;
    end else begin
        grp_fu_695_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_705_ce = 1'b1;
    end else begin
        grp_fu_705_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_715_ce = 1'b1;
    end else begin
        grp_fu_715_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_725_ce = 1'b1;
    end else begin
        grp_fu_725_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln344_reg_1155_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        tensor_blk_n = tensor_full_n;
    end else begin
        tensor_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln344_reg_1155_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tensor_write = 1'b1;
    end else begin
        tensor_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_25_reg_1141 == 1'd0) & (icmp_ln312_reg_1137 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tensor_y_blk_n = tensor_y_empty_n;
    end else begin
        tensor_y_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op68_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tensor_y_read = 1'b1;
    end else begin
        tensor_y_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_val_0_V_fu_910_p4 = {{add_ln1192_17_fu_905_p2[50:19]}};

assign acc_val_1_V_fu_925_p4 = {{add_ln1192_18_fu_920_p2[50:19]}};

assign acc_val_2_V_fu_940_p4 = {{add_ln1192_19_fu_935_p2[50:19]}};

assign acc_val_3_V_fu_955_p4 = {{add_ln1192_20_fu_950_p2[50:19]}};

assign acc_val_4_V_fu_970_p4 = {{add_ln1192_21_fu_965_p2[50:19]}};

assign acc_val_5_V_fu_985_p4 = {{add_ln1192_22_fu_980_p2[50:19]}};

assign add_ln1192_12_fu_788_p2 = (and_ln728_s_fu_738_p3 + mul_ln703_12_reg_1259);

assign add_ln1192_13_fu_803_p2 = (and_ln728_11_fu_745_p3 + mul_ln703_13_reg_1264);

assign add_ln1192_14_fu_818_p2 = (and_ln728_12_fu_752_p3 + mul_ln703_14_reg_1269);

assign add_ln1192_15_fu_833_p2 = (and_ln728_13_fu_759_p3 + mul_ln703_15_reg_1274);

assign add_ln1192_16_fu_848_p2 = (and_ln728_14_fu_766_p3 + mul_ln703_16_reg_1279);

assign add_ln1192_17_fu_905_p2 = (and_ln728_15_fu_863_p3 + mul_ln703_17_reg_1344);

assign add_ln1192_18_fu_920_p2 = (and_ln728_16_fu_870_p3 + mul_ln703_18_reg_1349);

assign add_ln1192_19_fu_935_p2 = (and_ln728_17_fu_877_p3 + mul_ln703_19_reg_1354);

assign add_ln1192_20_fu_950_p2 = (and_ln728_18_fu_884_p3 + mul_ln703_20_reg_1359);

assign add_ln1192_21_fu_965_p2 = (and_ln728_19_fu_891_p3 + mul_ln703_21_reg_1364);

assign add_ln1192_22_fu_980_p2 = (and_ln728_20_fu_898_p3 + mul_ln703_22_reg_1369);

assign add_ln1192_fu_773_p2 = (and_ln_fu_731_p3 + mul_ln703_reg_1254);

assign add_ln312_fu_243_p2 = (indvar_flatten_reg_149 + 19'd1);

assign add_ln314_fu_311_p2 = (select_ln312_fu_261_p3 + 11'd1);

assign and_ln333_fu_299_p2 = (xor_ln319_fu_277_p2 & icmp_ln333_fu_293_p2);

assign and_ln728_11_fu_745_p3 = {{tmp_13_reg_1234}, {19'd0}};

assign and_ln728_12_fu_752_p3 = {{tmp_14_reg_1239}, {19'd0}};

assign and_ln728_13_fu_759_p3 = {{tmp_15_reg_1244}, {19'd0}};

assign and_ln728_14_fu_766_p3 = {{tmp_16_reg_1249}, {19'd0}};

assign and_ln728_15_fu_863_p3 = {{tmp_17_reg_1314}, {19'd0}};

assign and_ln728_16_fu_870_p3 = {{tmp_18_reg_1319}, {19'd0}};

assign and_ln728_17_fu_877_p3 = {{tmp_19_reg_1324}, {19'd0}};

assign and_ln728_18_fu_884_p3 = {{tmp_20_reg_1329}, {19'd0}};

assign and_ln728_19_fu_891_p3 = {{tmp_21_reg_1334}, {19'd0}};

assign and_ln728_20_fu_898_p3 = {{tmp_22_reg_1339}, {19'd0}};

assign and_ln728_s_fu_738_p3 = {{tmp_s_reg_1229}, {19'd0}};

assign and_ln_fu_731_p3 = {{tmp_reg_1224}, {19'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_predicate_op68_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tensor_y_empty_n == 1'b0)) | ((icmp_ln344_reg_1155_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (tensor_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_predicate_op68_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tensor_y_empty_n == 1'b0)) | ((icmp_ln344_reg_1155_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (tensor_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_predicate_op68_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tensor_y_empty_n == 1'b0)) | ((icmp_ln344_reg_1155_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (tensor_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((ap_predicate_op68_read_state3 == 1'b1) & (tensor_y_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((icmp_ln344_reg_1155_pp0_iter3_reg == 1'd0) & (tensor_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_100 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_253 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_tmp_val_0_V_6_reg_219 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_val_1_V_6_reg_207 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_val_2_V_6_reg_195 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_val_3_V_6_reg_183 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_val_4_V_6_reg_171 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_val_5_V_reg_231 = 'bx;

always @ (*) begin
    ap_predicate_op68_read_state3 = ((tmp_25_reg_1141 == 1'd0) & (icmp_ln312_reg_1137 == 1'd0));
end

assign grp_fu_465_p1 = 51'd170026;

assign grp_fu_475_p1 = 51'd170026;

assign grp_fu_485_p1 = 51'd170026;

assign grp_fu_495_p1 = 51'd170026;

assign grp_fu_505_p1 = 51'd170026;

assign grp_fu_515_p1 = 51'd170026;

assign grp_fu_525_p1 = 51'd184182;

assign grp_fu_535_p1 = 51'd184182;

assign grp_fu_545_p1 = 51'd184182;

assign grp_fu_555_p1 = 51'd184182;

assign grp_fu_565_p1 = 51'd184182;

assign grp_fu_575_p1 = 51'd184182;

assign grp_fu_675_p1 = 51'd170026;

assign grp_fu_685_p1 = 51'd170026;

assign grp_fu_695_p1 = 51'd170026;

assign grp_fu_705_p1 = 51'd170026;

assign grp_fu_715_p1 = 51'd170026;

assign grp_fu_725_p1 = 51'd170026;

assign icmp_ln312_fu_249_p2 = ((indvar_flatten_reg_149 == 19'd446900) ? 1'b1 : 1'b0);

assign icmp_ln314_fu_255_p2 = ((c_reg_160 == 11'd1025) ? 1'b1 : 1'b0);

assign icmp_ln333_fu_293_p2 = ((tmp_26_fu_283_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln344_fu_305_p2 = ((select_ln312_fu_261_p3 == 11'd0) ? 1'b1 : 1'b0);

assign select_ln312_fu_261_p3 = ((icmp_ln314_fu_255_p2[0:0] == 1'b1) ? 11'd0 : c_reg_160);

assign select_ln333_1_fu_1002_p3 = ((and_ln333_reg_1145_pp0_iter3_reg[0:0] == 1'b1) ? acc_val_4_V_fu_970_p4 : 32'd0);

assign select_ln333_2_fu_1009_p3 = ((and_ln333_reg_1145_pp0_iter3_reg[0:0] == 1'b1) ? acc_val_3_V_fu_955_p4 : 32'd0);

assign select_ln333_3_fu_1016_p3 = ((and_ln333_reg_1145_pp0_iter3_reg[0:0] == 1'b1) ? acc_val_2_V_fu_940_p4 : 32'd0);

assign select_ln333_4_fu_1023_p3 = ((and_ln333_reg_1145_pp0_iter3_reg[0:0] == 1'b1) ? acc_val_1_V_fu_925_p4 : 32'd0);

assign select_ln333_5_fu_1030_p3 = ((and_ln333_reg_1145_pp0_iter3_reg[0:0] == 1'b1) ? acc_val_0_V_fu_910_p4 : 32'd0);

assign select_ln333_fu_995_p3 = ((and_ln333_reg_1145_pp0_iter3_reg[0:0] == 1'b1) ? acc_val_5_V_fu_985_p4 : 32'd0);

assign tensor_din = {{{{{{select_ln333_fu_995_p3}, {select_ln333_1_fu_1002_p3}}, {select_ln333_2_fu_1009_p3}}, {select_ln333_3_fu_1016_p3}}, {select_ln333_4_fu_1023_p3}}, {select_ln333_5_fu_1030_p3}};

assign tmp_25_fu_269_p3 = select_ln312_fu_261_p3[32'd10];

assign tmp_26_fu_283_p4 = {{select_ln312_fu_261_p3[10:1]}};

assign tmp_val_0_V_5_fu_383_p1 = tensor_y_dout[31:0];

assign xor_ln319_fu_277_p2 = (tmp_25_fu_269_p3 ^ 1'd1);

endmodule //optical_flow_tensor_weight_x
