// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mobilenet_dataflow_in_loop_VITIS_LOOP_39_2 (
        weights_address0,
        weights_ce0,
        weights_d0,
        weights_q0,
        weights_we0,
        weights_address1,
        weights_ce1,
        weights_d1,
        weights_q1,
        weights_we1,
        weights1_address0,
        weights1_ce0,
        weights1_d0,
        weights1_q0,
        weights1_we0,
        weights1_address1,
        weights1_ce1,
        weights1_d1,
        weights1_q1,
        weights1_we1,
        weights2_address0,
        weights2_ce0,
        weights2_d0,
        weights2_q0,
        weights2_we0,
        weights2_address1,
        weights2_ce1,
        weights2_d1,
        weights2_q1,
        weights2_we1,
        weights3_address0,
        weights3_ce0,
        weights3_d0,
        weights3_q0,
        weights3_we0,
        weights3_address1,
        weights3_ce1,
        weights3_d1,
        weights3_q1,
        weights3_we1,
        weights4_address0,
        weights4_ce0,
        weights4_d0,
        weights4_q0,
        weights4_we0,
        weights4_address1,
        weights4_ce1,
        weights4_d1,
        weights4_q1,
        weights4_we1,
        weights5_address0,
        weights5_ce0,
        weights5_d0,
        weights5_q0,
        weights5_we0,
        weights5_address1,
        weights5_ce1,
        weights5_d1,
        weights5_q1,
        weights5_we1,
        weights6_address0,
        weights6_ce0,
        weights6_d0,
        weights6_q0,
        weights6_we0,
        weights6_address1,
        weights6_ce1,
        weights6_d1,
        weights6_q1,
        weights6_we1,
        weights7_address0,
        weights7_ce0,
        weights7_d0,
        weights7_q0,
        weights7_we0,
        weights7_address1,
        weights7_ce1,
        weights7_d1,
        weights7_q1,
        weights7_we1,
        weights8_address0,
        weights8_ce0,
        weights8_d0,
        weights8_q0,
        weights8_we0,
        weights8_address1,
        weights8_ce1,
        weights8_d1,
        weights8_q1,
        weights8_we1,
        weights9_address0,
        weights9_ce0,
        weights9_d0,
        weights9_q0,
        weights9_we0,
        weights9_address1,
        weights9_ce1,
        weights9_d1,
        weights9_q1,
        weights9_we1,
        weights10_address0,
        weights10_ce0,
        weights10_d0,
        weights10_q0,
        weights10_we0,
        weights10_address1,
        weights10_ce1,
        weights10_d1,
        weights10_q1,
        weights10_we1,
        weights11_address0,
        weights11_ce0,
        weights11_d0,
        weights11_q0,
        weights11_we0,
        weights11_address1,
        weights11_ce1,
        weights11_d1,
        weights11_q1,
        weights11_we1,
        weights12_address0,
        weights12_ce0,
        weights12_d0,
        weights12_q0,
        weights12_we0,
        weights12_address1,
        weights12_ce1,
        weights12_d1,
        weights12_q1,
        weights12_we1,
        weights13_address0,
        weights13_ce0,
        weights13_d0,
        weights13_q0,
        weights13_we0,
        weights13_address1,
        weights13_ce1,
        weights13_d1,
        weights13_q1,
        weights13_we1,
        weights14_address0,
        weights14_ce0,
        weights14_d0,
        weights14_q0,
        weights14_we0,
        weights14_address1,
        weights14_ce1,
        weights14_d1,
        weights14_q1,
        weights14_we1,
        weights15_address0,
        weights15_ce0,
        weights15_d0,
        weights15_q0,
        weights15_we0,
        weights15_address1,
        weights15_ce1,
        weights15_d1,
        weights15_q1,
        weights15_we1,
        i,
        trunc_ln43,
        bottom15_address0,
        bottom15_ce0,
        bottom15_d0,
        bottom15_q0,
        bottom15_we0,
        bottom15_address1,
        bottom15_ce1,
        bottom15_d1,
        bottom15_q1,
        bottom15_we1,
        top30_address0,
        top30_ce0,
        top30_d0,
        top30_q0,
        top30_we0,
        top30_address1,
        top30_ce1,
        top30_d1,
        top30_q1,
        top30_we1,
        bottom14_address0,
        bottom14_ce0,
        bottom14_d0,
        bottom14_q0,
        bottom14_we0,
        bottom14_address1,
        bottom14_ce1,
        bottom14_d1,
        bottom14_q1,
        bottom14_we1,
        top29_address0,
        top29_ce0,
        top29_d0,
        top29_q0,
        top29_we0,
        top29_address1,
        top29_ce1,
        top29_d1,
        top29_q1,
        top29_we1,
        bottom13_address0,
        bottom13_ce0,
        bottom13_d0,
        bottom13_q0,
        bottom13_we0,
        bottom13_address1,
        bottom13_ce1,
        bottom13_d1,
        bottom13_q1,
        bottom13_we1,
        top28_address0,
        top28_ce0,
        top28_d0,
        top28_q0,
        top28_we0,
        top28_address1,
        top28_ce1,
        top28_d1,
        top28_q1,
        top28_we1,
        bottom12_address0,
        bottom12_ce0,
        bottom12_d0,
        bottom12_q0,
        bottom12_we0,
        bottom12_address1,
        bottom12_ce1,
        bottom12_d1,
        bottom12_q1,
        bottom12_we1,
        top27_address0,
        top27_ce0,
        top27_d0,
        top27_q0,
        top27_we0,
        top27_address1,
        top27_ce1,
        top27_d1,
        top27_q1,
        top27_we1,
        bottom11_address0,
        bottom11_ce0,
        bottom11_d0,
        bottom11_q0,
        bottom11_we0,
        bottom11_address1,
        bottom11_ce1,
        bottom11_d1,
        bottom11_q1,
        bottom11_we1,
        top26_address0,
        top26_ce0,
        top26_d0,
        top26_q0,
        top26_we0,
        top26_address1,
        top26_ce1,
        top26_d1,
        top26_q1,
        top26_we1,
        bottom10_address0,
        bottom10_ce0,
        bottom10_d0,
        bottom10_q0,
        bottom10_we0,
        bottom10_address1,
        bottom10_ce1,
        bottom10_d1,
        bottom10_q1,
        bottom10_we1,
        top25_address0,
        top25_ce0,
        top25_d0,
        top25_q0,
        top25_we0,
        top25_address1,
        top25_ce1,
        top25_d1,
        top25_q1,
        top25_we1,
        bottom9_address0,
        bottom9_ce0,
        bottom9_d0,
        bottom9_q0,
        bottom9_we0,
        bottom9_address1,
        bottom9_ce1,
        bottom9_d1,
        bottom9_q1,
        bottom9_we1,
        top24_address0,
        top24_ce0,
        top24_d0,
        top24_q0,
        top24_we0,
        top24_address1,
        top24_ce1,
        top24_d1,
        top24_q1,
        top24_we1,
        bottom8_address0,
        bottom8_ce0,
        bottom8_d0,
        bottom8_q0,
        bottom8_we0,
        bottom8_address1,
        bottom8_ce1,
        bottom8_d1,
        bottom8_q1,
        bottom8_we1,
        top23_address0,
        top23_ce0,
        top23_d0,
        top23_q0,
        top23_we0,
        top23_address1,
        top23_ce1,
        top23_d1,
        top23_q1,
        top23_we1,
        bottom7_address0,
        bottom7_ce0,
        bottom7_d0,
        bottom7_q0,
        bottom7_we0,
        bottom7_address1,
        bottom7_ce1,
        bottom7_d1,
        bottom7_q1,
        bottom7_we1,
        top22_address0,
        top22_ce0,
        top22_d0,
        top22_q0,
        top22_we0,
        top22_address1,
        top22_ce1,
        top22_d1,
        top22_q1,
        top22_we1,
        bottom6_address0,
        bottom6_ce0,
        bottom6_d0,
        bottom6_q0,
        bottom6_we0,
        bottom6_address1,
        bottom6_ce1,
        bottom6_d1,
        bottom6_q1,
        bottom6_we1,
        top21_address0,
        top21_ce0,
        top21_d0,
        top21_q0,
        top21_we0,
        top21_address1,
        top21_ce1,
        top21_d1,
        top21_q1,
        top21_we1,
        bottom5_address0,
        bottom5_ce0,
        bottom5_d0,
        bottom5_q0,
        bottom5_we0,
        bottom5_address1,
        bottom5_ce1,
        bottom5_d1,
        bottom5_q1,
        bottom5_we1,
        top20_address0,
        top20_ce0,
        top20_d0,
        top20_q0,
        top20_we0,
        top20_address1,
        top20_ce1,
        top20_d1,
        top20_q1,
        top20_we1,
        bottom4_address0,
        bottom4_ce0,
        bottom4_d0,
        bottom4_q0,
        bottom4_we0,
        bottom4_address1,
        bottom4_ce1,
        bottom4_d1,
        bottom4_q1,
        bottom4_we1,
        top19_address0,
        top19_ce0,
        top19_d0,
        top19_q0,
        top19_we0,
        top19_address1,
        top19_ce1,
        top19_d1,
        top19_q1,
        top19_we1,
        bottom3_address0,
        bottom3_ce0,
        bottom3_d0,
        bottom3_q0,
        bottom3_we0,
        bottom3_address1,
        bottom3_ce1,
        bottom3_d1,
        bottom3_q1,
        bottom3_we1,
        top18_address0,
        top18_ce0,
        top18_d0,
        top18_q0,
        top18_we0,
        top18_address1,
        top18_ce1,
        top18_d1,
        top18_q1,
        top18_we1,
        bottom2_address0,
        bottom2_ce0,
        bottom2_d0,
        bottom2_q0,
        bottom2_we0,
        bottom2_address1,
        bottom2_ce1,
        bottom2_d1,
        bottom2_q1,
        bottom2_we1,
        top17_address0,
        top17_ce0,
        top17_d0,
        top17_q0,
        top17_we0,
        top17_address1,
        top17_ce1,
        top17_d1,
        top17_q1,
        top17_we1,
        bottom1_address0,
        bottom1_ce0,
        bottom1_d0,
        bottom1_q0,
        bottom1_we0,
        bottom1_address1,
        bottom1_ce1,
        bottom1_d1,
        bottom1_q1,
        bottom1_we1,
        top16_address0,
        top16_ce0,
        top16_d0,
        top16_q0,
        top16_we0,
        top16_address1,
        top16_ce1,
        top16_d1,
        top16_q1,
        top16_we1,
        bottom_address0,
        bottom_ce0,
        bottom_d0,
        bottom_q0,
        bottom_we0,
        bottom_address1,
        bottom_ce1,
        bottom_d1,
        bottom_q1,
        bottom_we1,
        top_address0,
        top_ce0,
        top_d0,
        top_q0,
        top_we0,
        top_address1,
        top_ce1,
        top_d1,
        top_q1,
        top_we1,
        ap_clk,
        ap_rst,
        i_ap_vld,
        trunc_ln43_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


output  [3:0] weights_address0;
output   weights_ce0;
output  [7:0] weights_d0;
input  [7:0] weights_q0;
output   weights_we0;
output  [3:0] weights_address1;
output   weights_ce1;
output  [7:0] weights_d1;
input  [7:0] weights_q1;
output   weights_we1;
output  [3:0] weights1_address0;
output   weights1_ce0;
output  [7:0] weights1_d0;
input  [7:0] weights1_q0;
output   weights1_we0;
output  [3:0] weights1_address1;
output   weights1_ce1;
output  [7:0] weights1_d1;
input  [7:0] weights1_q1;
output   weights1_we1;
output  [3:0] weights2_address0;
output   weights2_ce0;
output  [7:0] weights2_d0;
input  [7:0] weights2_q0;
output   weights2_we0;
output  [3:0] weights2_address1;
output   weights2_ce1;
output  [7:0] weights2_d1;
input  [7:0] weights2_q1;
output   weights2_we1;
output  [3:0] weights3_address0;
output   weights3_ce0;
output  [7:0] weights3_d0;
input  [7:0] weights3_q0;
output   weights3_we0;
output  [3:0] weights3_address1;
output   weights3_ce1;
output  [7:0] weights3_d1;
input  [7:0] weights3_q1;
output   weights3_we1;
output  [3:0] weights4_address0;
output   weights4_ce0;
output  [7:0] weights4_d0;
input  [7:0] weights4_q0;
output   weights4_we0;
output  [3:0] weights4_address1;
output   weights4_ce1;
output  [7:0] weights4_d1;
input  [7:0] weights4_q1;
output   weights4_we1;
output  [3:0] weights5_address0;
output   weights5_ce0;
output  [7:0] weights5_d0;
input  [7:0] weights5_q0;
output   weights5_we0;
output  [3:0] weights5_address1;
output   weights5_ce1;
output  [7:0] weights5_d1;
input  [7:0] weights5_q1;
output   weights5_we1;
output  [3:0] weights6_address0;
output   weights6_ce0;
output  [7:0] weights6_d0;
input  [7:0] weights6_q0;
output   weights6_we0;
output  [3:0] weights6_address1;
output   weights6_ce1;
output  [7:0] weights6_d1;
input  [7:0] weights6_q1;
output   weights6_we1;
output  [3:0] weights7_address0;
output   weights7_ce0;
output  [7:0] weights7_d0;
input  [7:0] weights7_q0;
output   weights7_we0;
output  [3:0] weights7_address1;
output   weights7_ce1;
output  [7:0] weights7_d1;
input  [7:0] weights7_q1;
output   weights7_we1;
output  [3:0] weights8_address0;
output   weights8_ce0;
output  [7:0] weights8_d0;
input  [7:0] weights8_q0;
output   weights8_we0;
output  [3:0] weights8_address1;
output   weights8_ce1;
output  [7:0] weights8_d1;
input  [7:0] weights8_q1;
output   weights8_we1;
output  [3:0] weights9_address0;
output   weights9_ce0;
output  [7:0] weights9_d0;
input  [7:0] weights9_q0;
output   weights9_we0;
output  [3:0] weights9_address1;
output   weights9_ce1;
output  [7:0] weights9_d1;
input  [7:0] weights9_q1;
output   weights9_we1;
output  [3:0] weights10_address0;
output   weights10_ce0;
output  [7:0] weights10_d0;
input  [7:0] weights10_q0;
output   weights10_we0;
output  [3:0] weights10_address1;
output   weights10_ce1;
output  [7:0] weights10_d1;
input  [7:0] weights10_q1;
output   weights10_we1;
output  [3:0] weights11_address0;
output   weights11_ce0;
output  [7:0] weights11_d0;
input  [7:0] weights11_q0;
output   weights11_we0;
output  [3:0] weights11_address1;
output   weights11_ce1;
output  [7:0] weights11_d1;
input  [7:0] weights11_q1;
output   weights11_we1;
output  [3:0] weights12_address0;
output   weights12_ce0;
output  [7:0] weights12_d0;
input  [7:0] weights12_q0;
output   weights12_we0;
output  [3:0] weights12_address1;
output   weights12_ce1;
output  [7:0] weights12_d1;
input  [7:0] weights12_q1;
output   weights12_we1;
output  [3:0] weights13_address0;
output   weights13_ce0;
output  [7:0] weights13_d0;
input  [7:0] weights13_q0;
output   weights13_we0;
output  [3:0] weights13_address1;
output   weights13_ce1;
output  [7:0] weights13_d1;
input  [7:0] weights13_q1;
output   weights13_we1;
output  [3:0] weights14_address0;
output   weights14_ce0;
output  [7:0] weights14_d0;
input  [7:0] weights14_q0;
output   weights14_we0;
output  [3:0] weights14_address1;
output   weights14_ce1;
output  [7:0] weights14_d1;
input  [7:0] weights14_q1;
output   weights14_we1;
output  [3:0] weights15_address0;
output   weights15_ce0;
output  [7:0] weights15_d0;
input  [7:0] weights15_q0;
output   weights15_we0;
output  [3:0] weights15_address1;
output   weights15_ce1;
output  [7:0] weights15_d1;
input  [7:0] weights15_q1;
output   weights15_we1;
input  [1:0] i;
input  [1:0] trunc_ln43;
output  [9:0] bottom15_address0;
output   bottom15_ce0;
output  [15:0] bottom15_d0;
input  [15:0] bottom15_q0;
output   bottom15_we0;
output  [9:0] bottom15_address1;
output   bottom15_ce1;
output  [15:0] bottom15_d1;
input  [15:0] bottom15_q1;
output   bottom15_we1;
output  [9:0] top30_address0;
output   top30_ce0;
output  [15:0] top30_d0;
input  [15:0] top30_q0;
output   top30_we0;
output  [9:0] top30_address1;
output   top30_ce1;
output  [15:0] top30_d1;
input  [15:0] top30_q1;
output   top30_we1;
output  [9:0] bottom14_address0;
output   bottom14_ce0;
output  [15:0] bottom14_d0;
input  [15:0] bottom14_q0;
output   bottom14_we0;
output  [9:0] bottom14_address1;
output   bottom14_ce1;
output  [15:0] bottom14_d1;
input  [15:0] bottom14_q1;
output   bottom14_we1;
output  [9:0] top29_address0;
output   top29_ce0;
output  [15:0] top29_d0;
input  [15:0] top29_q0;
output   top29_we0;
output  [9:0] top29_address1;
output   top29_ce1;
output  [15:0] top29_d1;
input  [15:0] top29_q1;
output   top29_we1;
output  [9:0] bottom13_address0;
output   bottom13_ce0;
output  [15:0] bottom13_d0;
input  [15:0] bottom13_q0;
output   bottom13_we0;
output  [9:0] bottom13_address1;
output   bottom13_ce1;
output  [15:0] bottom13_d1;
input  [15:0] bottom13_q1;
output   bottom13_we1;
output  [9:0] top28_address0;
output   top28_ce0;
output  [15:0] top28_d0;
input  [15:0] top28_q0;
output   top28_we0;
output  [9:0] top28_address1;
output   top28_ce1;
output  [15:0] top28_d1;
input  [15:0] top28_q1;
output   top28_we1;
output  [9:0] bottom12_address0;
output   bottom12_ce0;
output  [15:0] bottom12_d0;
input  [15:0] bottom12_q0;
output   bottom12_we0;
output  [9:0] bottom12_address1;
output   bottom12_ce1;
output  [15:0] bottom12_d1;
input  [15:0] bottom12_q1;
output   bottom12_we1;
output  [9:0] top27_address0;
output   top27_ce0;
output  [15:0] top27_d0;
input  [15:0] top27_q0;
output   top27_we0;
output  [9:0] top27_address1;
output   top27_ce1;
output  [15:0] top27_d1;
input  [15:0] top27_q1;
output   top27_we1;
output  [9:0] bottom11_address0;
output   bottom11_ce0;
output  [15:0] bottom11_d0;
input  [15:0] bottom11_q0;
output   bottom11_we0;
output  [9:0] bottom11_address1;
output   bottom11_ce1;
output  [15:0] bottom11_d1;
input  [15:0] bottom11_q1;
output   bottom11_we1;
output  [9:0] top26_address0;
output   top26_ce0;
output  [15:0] top26_d0;
input  [15:0] top26_q0;
output   top26_we0;
output  [9:0] top26_address1;
output   top26_ce1;
output  [15:0] top26_d1;
input  [15:0] top26_q1;
output   top26_we1;
output  [9:0] bottom10_address0;
output   bottom10_ce0;
output  [15:0] bottom10_d0;
input  [15:0] bottom10_q0;
output   bottom10_we0;
output  [9:0] bottom10_address1;
output   bottom10_ce1;
output  [15:0] bottom10_d1;
input  [15:0] bottom10_q1;
output   bottom10_we1;
output  [9:0] top25_address0;
output   top25_ce0;
output  [15:0] top25_d0;
input  [15:0] top25_q0;
output   top25_we0;
output  [9:0] top25_address1;
output   top25_ce1;
output  [15:0] top25_d1;
input  [15:0] top25_q1;
output   top25_we1;
output  [9:0] bottom9_address0;
output   bottom9_ce0;
output  [15:0] bottom9_d0;
input  [15:0] bottom9_q0;
output   bottom9_we0;
output  [9:0] bottom9_address1;
output   bottom9_ce1;
output  [15:0] bottom9_d1;
input  [15:0] bottom9_q1;
output   bottom9_we1;
output  [9:0] top24_address0;
output   top24_ce0;
output  [15:0] top24_d0;
input  [15:0] top24_q0;
output   top24_we0;
output  [9:0] top24_address1;
output   top24_ce1;
output  [15:0] top24_d1;
input  [15:0] top24_q1;
output   top24_we1;
output  [9:0] bottom8_address0;
output   bottom8_ce0;
output  [15:0] bottom8_d0;
input  [15:0] bottom8_q0;
output   bottom8_we0;
output  [9:0] bottom8_address1;
output   bottom8_ce1;
output  [15:0] bottom8_d1;
input  [15:0] bottom8_q1;
output   bottom8_we1;
output  [9:0] top23_address0;
output   top23_ce0;
output  [15:0] top23_d0;
input  [15:0] top23_q0;
output   top23_we0;
output  [9:0] top23_address1;
output   top23_ce1;
output  [15:0] top23_d1;
input  [15:0] top23_q1;
output   top23_we1;
output  [9:0] bottom7_address0;
output   bottom7_ce0;
output  [15:0] bottom7_d0;
input  [15:0] bottom7_q0;
output   bottom7_we0;
output  [9:0] bottom7_address1;
output   bottom7_ce1;
output  [15:0] bottom7_d1;
input  [15:0] bottom7_q1;
output   bottom7_we1;
output  [9:0] top22_address0;
output   top22_ce0;
output  [15:0] top22_d0;
input  [15:0] top22_q0;
output   top22_we0;
output  [9:0] top22_address1;
output   top22_ce1;
output  [15:0] top22_d1;
input  [15:0] top22_q1;
output   top22_we1;
output  [9:0] bottom6_address0;
output   bottom6_ce0;
output  [15:0] bottom6_d0;
input  [15:0] bottom6_q0;
output   bottom6_we0;
output  [9:0] bottom6_address1;
output   bottom6_ce1;
output  [15:0] bottom6_d1;
input  [15:0] bottom6_q1;
output   bottom6_we1;
output  [9:0] top21_address0;
output   top21_ce0;
output  [15:0] top21_d0;
input  [15:0] top21_q0;
output   top21_we0;
output  [9:0] top21_address1;
output   top21_ce1;
output  [15:0] top21_d1;
input  [15:0] top21_q1;
output   top21_we1;
output  [9:0] bottom5_address0;
output   bottom5_ce0;
output  [15:0] bottom5_d0;
input  [15:0] bottom5_q0;
output   bottom5_we0;
output  [9:0] bottom5_address1;
output   bottom5_ce1;
output  [15:0] bottom5_d1;
input  [15:0] bottom5_q1;
output   bottom5_we1;
output  [9:0] top20_address0;
output   top20_ce0;
output  [15:0] top20_d0;
input  [15:0] top20_q0;
output   top20_we0;
output  [9:0] top20_address1;
output   top20_ce1;
output  [15:0] top20_d1;
input  [15:0] top20_q1;
output   top20_we1;
output  [9:0] bottom4_address0;
output   bottom4_ce0;
output  [15:0] bottom4_d0;
input  [15:0] bottom4_q0;
output   bottom4_we0;
output  [9:0] bottom4_address1;
output   bottom4_ce1;
output  [15:0] bottom4_d1;
input  [15:0] bottom4_q1;
output   bottom4_we1;
output  [9:0] top19_address0;
output   top19_ce0;
output  [15:0] top19_d0;
input  [15:0] top19_q0;
output   top19_we0;
output  [9:0] top19_address1;
output   top19_ce1;
output  [15:0] top19_d1;
input  [15:0] top19_q1;
output   top19_we1;
output  [9:0] bottom3_address0;
output   bottom3_ce0;
output  [15:0] bottom3_d0;
input  [15:0] bottom3_q0;
output   bottom3_we0;
output  [9:0] bottom3_address1;
output   bottom3_ce1;
output  [15:0] bottom3_d1;
input  [15:0] bottom3_q1;
output   bottom3_we1;
output  [9:0] top18_address0;
output   top18_ce0;
output  [15:0] top18_d0;
input  [15:0] top18_q0;
output   top18_we0;
output  [9:0] top18_address1;
output   top18_ce1;
output  [15:0] top18_d1;
input  [15:0] top18_q1;
output   top18_we1;
output  [9:0] bottom2_address0;
output   bottom2_ce0;
output  [15:0] bottom2_d0;
input  [15:0] bottom2_q0;
output   bottom2_we0;
output  [9:0] bottom2_address1;
output   bottom2_ce1;
output  [15:0] bottom2_d1;
input  [15:0] bottom2_q1;
output   bottom2_we1;
output  [9:0] top17_address0;
output   top17_ce0;
output  [15:0] top17_d0;
input  [15:0] top17_q0;
output   top17_we0;
output  [9:0] top17_address1;
output   top17_ce1;
output  [15:0] top17_d1;
input  [15:0] top17_q1;
output   top17_we1;
output  [9:0] bottom1_address0;
output   bottom1_ce0;
output  [15:0] bottom1_d0;
input  [15:0] bottom1_q0;
output   bottom1_we0;
output  [9:0] bottom1_address1;
output   bottom1_ce1;
output  [15:0] bottom1_d1;
input  [15:0] bottom1_q1;
output   bottom1_we1;
output  [9:0] top16_address0;
output   top16_ce0;
output  [15:0] top16_d0;
input  [15:0] top16_q0;
output   top16_we0;
output  [9:0] top16_address1;
output   top16_ce1;
output  [15:0] top16_d1;
input  [15:0] top16_q1;
output   top16_we1;
output  [9:0] bottom_address0;
output   bottom_ce0;
output  [15:0] bottom_d0;
input  [15:0] bottom_q0;
output   bottom_we0;
output  [9:0] bottom_address1;
output   bottom_ce1;
output  [15:0] bottom_d1;
input  [15:0] bottom_q1;
output   bottom_we1;
output  [9:0] top_address0;
output   top_ce0;
output  [15:0] top_d0;
input  [15:0] top_q0;
output   top_we0;
output  [9:0] top_address1;
output   top_ce1;
output  [15:0] top_d1;
input  [15:0] top_q1;
output   top_we1;
input   ap_clk;
input   ap_rst;
input   i_ap_vld;
input   trunc_ln43_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    load_weights_U0_ap_start;
wire    load_weights_U0_ap_done;
wire    load_weights_U0_ap_continue;
wire    load_weights_U0_ap_idle;
wire    load_weights_U0_ap_ready;
wire   [3:0] load_weights_U0_weights_address0;
wire    load_weights_U0_weights_ce0;
wire   [3:0] load_weights_U0_weights1_address0;
wire    load_weights_U0_weights1_ce0;
wire   [3:0] load_weights_U0_weights2_address0;
wire    load_weights_U0_weights2_ce0;
wire   [3:0] load_weights_U0_weights3_address0;
wire    load_weights_U0_weights3_ce0;
wire   [3:0] load_weights_U0_weights4_address0;
wire    load_weights_U0_weights4_ce0;
wire   [3:0] load_weights_U0_weights5_address0;
wire    load_weights_U0_weights5_ce0;
wire   [3:0] load_weights_U0_weights6_address0;
wire    load_weights_U0_weights6_ce0;
wire   [3:0] load_weights_U0_weights7_address0;
wire    load_weights_U0_weights7_ce0;
wire   [3:0] load_weights_U0_weights8_address0;
wire    load_weights_U0_weights8_ce0;
wire   [3:0] load_weights_U0_weights9_address0;
wire    load_weights_U0_weights9_ce0;
wire   [3:0] load_weights_U0_weights10_address0;
wire    load_weights_U0_weights10_ce0;
wire   [3:0] load_weights_U0_weights11_address0;
wire    load_weights_U0_weights11_ce0;
wire   [3:0] load_weights_U0_weights12_address0;
wire    load_weights_U0_weights12_ce0;
wire   [3:0] load_weights_U0_weights13_address0;
wire    load_weights_U0_weights13_ce0;
wire   [3:0] load_weights_U0_weights14_address0;
wire    load_weights_U0_weights14_ce0;
wire   [3:0] load_weights_U0_weights15_address0;
wire    load_weights_U0_weights15_ce0;
wire   [1:0] load_weights_U0_i_out_din;
wire    load_weights_U0_i_out_write;
wire   [1:0] load_weights_U0_j_out_din;
wire    load_weights_U0_j_out_write;
wire   [7:0] load_weights_U0_ap_return_0;
wire   [7:0] load_weights_U0_ap_return_1;
wire   [7:0] load_weights_U0_ap_return_2;
wire   [7:0] load_weights_U0_ap_return_3;
wire   [7:0] load_weights_U0_ap_return_4;
wire   [7:0] load_weights_U0_ap_return_5;
wire   [7:0] load_weights_U0_ap_return_6;
wire   [7:0] load_weights_U0_ap_return_7;
wire   [7:0] load_weights_U0_ap_return_8;
wire   [7:0] load_weights_U0_ap_return_9;
wire   [7:0] load_weights_U0_ap_return_10;
wire   [7:0] load_weights_U0_ap_return_11;
wire   [7:0] load_weights_U0_ap_return_12;
wire   [7:0] load_weights_U0_ap_return_13;
wire   [7:0] load_weights_U0_ap_return_14;
wire   [7:0] load_weights_U0_ap_return_15;
wire    ap_channel_done_weight_buf_V_15;
wire    weight_buf_V_15_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_15;
wire    ap_sync_channel_write_weight_buf_V_15;
wire    ap_channel_done_weight_buf_V_14;
wire    weight_buf_V_14_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_14;
wire    ap_sync_channel_write_weight_buf_V_14;
wire    ap_channel_done_weight_buf_V_13;
wire    weight_buf_V_13_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_13;
wire    ap_sync_channel_write_weight_buf_V_13;
wire    ap_channel_done_weight_buf_V_12;
wire    weight_buf_V_12_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_12;
wire    ap_sync_channel_write_weight_buf_V_12;
wire    ap_channel_done_weight_buf_V_11;
wire    weight_buf_V_11_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_11;
wire    ap_sync_channel_write_weight_buf_V_11;
wire    ap_channel_done_weight_buf_V_10;
wire    weight_buf_V_10_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_10;
wire    ap_sync_channel_write_weight_buf_V_10;
wire    ap_channel_done_weight_buf_V_9;
wire    weight_buf_V_9_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_9;
wire    ap_sync_channel_write_weight_buf_V_9;
wire    ap_channel_done_weight_buf_V_8;
wire    weight_buf_V_8_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_8;
wire    ap_sync_channel_write_weight_buf_V_8;
wire    ap_channel_done_weight_buf_V_7;
wire    weight_buf_V_7_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_7;
wire    ap_sync_channel_write_weight_buf_V_7;
wire    ap_channel_done_weight_buf_V_6;
wire    weight_buf_V_6_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_6;
wire    ap_sync_channel_write_weight_buf_V_6;
wire    ap_channel_done_weight_buf_V_5;
wire    weight_buf_V_5_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_5;
wire    ap_sync_channel_write_weight_buf_V_5;
wire    ap_channel_done_weight_buf_V_4;
wire    weight_buf_V_4_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_4;
wire    ap_sync_channel_write_weight_buf_V_4;
wire    ap_channel_done_weight_buf_V_3;
wire    weight_buf_V_3_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_3;
wire    ap_sync_channel_write_weight_buf_V_3;
wire    ap_channel_done_weight_buf_V_2;
wire    weight_buf_V_2_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_2;
wire    ap_sync_channel_write_weight_buf_V_2;
wire    ap_channel_done_weight_buf_V_1;
wire    weight_buf_V_1_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_1;
wire    ap_sync_channel_write_weight_buf_V_1;
wire    ap_channel_done_weight_buf_V_0;
wire    weight_buf_V_0_full_n;
reg    ap_sync_reg_channel_write_weight_buf_V_0;
wire    ap_sync_channel_write_weight_buf_V_0;
wire    VITIS_LOOP_45_3_proc_U0_ap_start;
wire    VITIS_LOOP_45_3_proc_U0_ap_done;
wire    VITIS_LOOP_45_3_proc_U0_ap_continue;
wire    VITIS_LOOP_45_3_proc_U0_ap_idle;
wire    VITIS_LOOP_45_3_proc_U0_ap_ready;
wire    VITIS_LOOP_45_3_proc_U0_i_read;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom15_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom15_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top30_address0;
wire    VITIS_LOOP_45_3_proc_U0_top30_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top30_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top30_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top30_address1;
wire    VITIS_LOOP_45_3_proc_U0_top30_ce1;
wire    VITIS_LOOP_45_3_proc_U0_top30_we1;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top30_d1;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom14_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom14_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top29_address0;
wire    VITIS_LOOP_45_3_proc_U0_top29_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top29_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top29_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top29_address1;
wire    VITIS_LOOP_45_3_proc_U0_top29_ce1;
wire    VITIS_LOOP_45_3_proc_U0_top29_we1;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top29_d1;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom13_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom13_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top28_address0;
wire    VITIS_LOOP_45_3_proc_U0_top28_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top28_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top28_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top28_address1;
wire    VITIS_LOOP_45_3_proc_U0_top28_ce1;
wire    VITIS_LOOP_45_3_proc_U0_top28_we1;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top28_d1;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom12_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom12_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top27_address0;
wire    VITIS_LOOP_45_3_proc_U0_top27_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top27_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top27_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top27_address1;
wire    VITIS_LOOP_45_3_proc_U0_top27_ce1;
wire    VITIS_LOOP_45_3_proc_U0_top27_we1;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top27_d1;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom11_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom11_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top26_address0;
wire    VITIS_LOOP_45_3_proc_U0_top26_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top26_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top26_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top26_address1;
wire    VITIS_LOOP_45_3_proc_U0_top26_ce1;
wire    VITIS_LOOP_45_3_proc_U0_top26_we1;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top26_d1;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom10_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom10_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top25_address0;
wire    VITIS_LOOP_45_3_proc_U0_top25_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top25_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top25_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top25_address1;
wire    VITIS_LOOP_45_3_proc_U0_top25_ce1;
wire    VITIS_LOOP_45_3_proc_U0_top25_we1;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top25_d1;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom9_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom9_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top24_address0;
wire    VITIS_LOOP_45_3_proc_U0_top24_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top24_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top24_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top24_address1;
wire    VITIS_LOOP_45_3_proc_U0_top24_ce1;
wire    VITIS_LOOP_45_3_proc_U0_top24_we1;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top24_d1;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom8_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom8_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top23_address0;
wire    VITIS_LOOP_45_3_proc_U0_top23_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top23_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top23_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top23_address1;
wire    VITIS_LOOP_45_3_proc_U0_top23_ce1;
wire    VITIS_LOOP_45_3_proc_U0_top23_we1;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top23_d1;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom7_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom7_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top22_address0;
wire    VITIS_LOOP_45_3_proc_U0_top22_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top22_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top22_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top22_address1;
wire    VITIS_LOOP_45_3_proc_U0_top22_ce1;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom6_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom6_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top21_address0;
wire    VITIS_LOOP_45_3_proc_U0_top21_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top21_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top21_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top21_address1;
wire    VITIS_LOOP_45_3_proc_U0_top21_ce1;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom5_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom5_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top20_address0;
wire    VITIS_LOOP_45_3_proc_U0_top20_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top20_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top20_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top20_address1;
wire    VITIS_LOOP_45_3_proc_U0_top20_ce1;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom4_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom4_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top19_address0;
wire    VITIS_LOOP_45_3_proc_U0_top19_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top19_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top19_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top19_address1;
wire    VITIS_LOOP_45_3_proc_U0_top19_ce1;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom3_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom3_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top18_address0;
wire    VITIS_LOOP_45_3_proc_U0_top18_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top18_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top18_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top18_address1;
wire    VITIS_LOOP_45_3_proc_U0_top18_ce1;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom2_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom2_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top17_address0;
wire    VITIS_LOOP_45_3_proc_U0_top17_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top17_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top17_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top17_address1;
wire    VITIS_LOOP_45_3_proc_U0_top17_ce1;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom1_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom1_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top16_address0;
wire    VITIS_LOOP_45_3_proc_U0_top16_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top16_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top16_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top16_address1;
wire    VITIS_LOOP_45_3_proc_U0_top16_ce1;
wire    VITIS_LOOP_45_3_proc_U0_trunc_ln43_read;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_bottom_address0;
wire    VITIS_LOOP_45_3_proc_U0_bottom_ce0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top_address0;
wire    VITIS_LOOP_45_3_proc_U0_top_ce0;
wire    VITIS_LOOP_45_3_proc_U0_top_we0;
wire   [15:0] VITIS_LOOP_45_3_proc_U0_top_d0;
wire   [9:0] VITIS_LOOP_45_3_proc_U0_top_address1;
wire    VITIS_LOOP_45_3_proc_U0_top_ce1;
wire    ap_sync_continue;
wire    i_c_full_n;
wire   [1:0] i_c_dout;
wire    i_c_empty_n;
wire    trunc_ln43_c_full_n;
wire   [1:0] trunc_ln43_c_dout;
wire    trunc_ln43_c_empty_n;
wire   [7:0] weight_buf_V_0_dout;
wire    weight_buf_V_0_empty_n;
wire   [7:0] weight_buf_V_1_dout;
wire    weight_buf_V_1_empty_n;
wire   [7:0] weight_buf_V_2_dout;
wire    weight_buf_V_2_empty_n;
wire   [7:0] weight_buf_V_3_dout;
wire    weight_buf_V_3_empty_n;
wire   [7:0] weight_buf_V_4_dout;
wire    weight_buf_V_4_empty_n;
wire   [7:0] weight_buf_V_5_dout;
wire    weight_buf_V_5_empty_n;
wire   [7:0] weight_buf_V_6_dout;
wire    weight_buf_V_6_empty_n;
wire   [7:0] weight_buf_V_7_dout;
wire    weight_buf_V_7_empty_n;
wire   [7:0] weight_buf_V_8_dout;
wire    weight_buf_V_8_empty_n;
wire   [7:0] weight_buf_V_9_dout;
wire    weight_buf_V_9_empty_n;
wire   [7:0] weight_buf_V_10_dout;
wire    weight_buf_V_10_empty_n;
wire   [7:0] weight_buf_V_11_dout;
wire    weight_buf_V_11_empty_n;
wire   [7:0] weight_buf_V_12_dout;
wire    weight_buf_V_12_empty_n;
wire   [7:0] weight_buf_V_13_dout;
wire    weight_buf_V_13_empty_n;
wire   [7:0] weight_buf_V_14_dout;
wire    weight_buf_V_14_empty_n;
wire   [7:0] weight_buf_V_15_dout;
wire    weight_buf_V_15_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_load_weights_U0_ap_ready;
wire    ap_sync_load_weights_U0_ap_ready;
reg    ap_sync_reg_VITIS_LOOP_45_3_proc_U0_ap_ready;
wire    ap_sync_VITIS_LOOP_45_3_proc_U0_ap_ready;
wire    load_weights_U0_start_full_n;
wire    load_weights_U0_start_write;
wire    VITIS_LOOP_45_3_proc_U0_start_full_n;
wire    VITIS_LOOP_45_3_proc_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_weight_buf_V_15 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_14 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_13 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_12 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_11 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_10 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_9 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_8 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_7 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_6 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_5 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_4 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_3 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_2 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_1 = 1'b0;
#0 ap_sync_reg_channel_write_weight_buf_V_0 = 1'b0;
#0 ap_sync_reg_load_weights_U0_ap_ready = 1'b0;
#0 ap_sync_reg_VITIS_LOOP_45_3_proc_U0_ap_ready = 1'b0;
end

mobilenet_load_weights load_weights_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(load_weights_U0_ap_start),
    .ap_done(load_weights_U0_ap_done),
    .ap_continue(load_weights_U0_ap_continue),
    .ap_idle(load_weights_U0_ap_idle),
    .ap_ready(load_weights_U0_ap_ready),
    .weights_address0(load_weights_U0_weights_address0),
    .weights_ce0(load_weights_U0_weights_ce0),
    .weights_q0(weights_q0),
    .weights1_address0(load_weights_U0_weights1_address0),
    .weights1_ce0(load_weights_U0_weights1_ce0),
    .weights1_q0(weights1_q0),
    .weights2_address0(load_weights_U0_weights2_address0),
    .weights2_ce0(load_weights_U0_weights2_ce0),
    .weights2_q0(weights2_q0),
    .weights3_address0(load_weights_U0_weights3_address0),
    .weights3_ce0(load_weights_U0_weights3_ce0),
    .weights3_q0(weights3_q0),
    .weights4_address0(load_weights_U0_weights4_address0),
    .weights4_ce0(load_weights_U0_weights4_ce0),
    .weights4_q0(weights4_q0),
    .weights5_address0(load_weights_U0_weights5_address0),
    .weights5_ce0(load_weights_U0_weights5_ce0),
    .weights5_q0(weights5_q0),
    .weights6_address0(load_weights_U0_weights6_address0),
    .weights6_ce0(load_weights_U0_weights6_ce0),
    .weights6_q0(weights6_q0),
    .weights7_address0(load_weights_U0_weights7_address0),
    .weights7_ce0(load_weights_U0_weights7_ce0),
    .weights7_q0(weights7_q0),
    .weights8_address0(load_weights_U0_weights8_address0),
    .weights8_ce0(load_weights_U0_weights8_ce0),
    .weights8_q0(weights8_q0),
    .weights9_address0(load_weights_U0_weights9_address0),
    .weights9_ce0(load_weights_U0_weights9_ce0),
    .weights9_q0(weights9_q0),
    .weights10_address0(load_weights_U0_weights10_address0),
    .weights10_ce0(load_weights_U0_weights10_ce0),
    .weights10_q0(weights10_q0),
    .weights11_address0(load_weights_U0_weights11_address0),
    .weights11_ce0(load_weights_U0_weights11_ce0),
    .weights11_q0(weights11_q0),
    .weights12_address0(load_weights_U0_weights12_address0),
    .weights12_ce0(load_weights_U0_weights12_ce0),
    .weights12_q0(weights12_q0),
    .weights13_address0(load_weights_U0_weights13_address0),
    .weights13_ce0(load_weights_U0_weights13_ce0),
    .weights13_q0(weights13_q0),
    .weights14_address0(load_weights_U0_weights14_address0),
    .weights14_ce0(load_weights_U0_weights14_ce0),
    .weights14_q0(weights14_q0),
    .weights15_address0(load_weights_U0_weights15_address0),
    .weights15_ce0(load_weights_U0_weights15_ce0),
    .weights15_q0(weights15_q0),
    .i(i),
    .j(trunc_ln43),
    .i_out_din(load_weights_U0_i_out_din),
    .i_out_full_n(i_c_full_n),
    .i_out_write(load_weights_U0_i_out_write),
    .j_out_din(load_weights_U0_j_out_din),
    .j_out_full_n(trunc_ln43_c_full_n),
    .j_out_write(load_weights_U0_j_out_write),
    .ap_return_0(load_weights_U0_ap_return_0),
    .ap_return_1(load_weights_U0_ap_return_1),
    .ap_return_2(load_weights_U0_ap_return_2),
    .ap_return_3(load_weights_U0_ap_return_3),
    .ap_return_4(load_weights_U0_ap_return_4),
    .ap_return_5(load_weights_U0_ap_return_5),
    .ap_return_6(load_weights_U0_ap_return_6),
    .ap_return_7(load_weights_U0_ap_return_7),
    .ap_return_8(load_weights_U0_ap_return_8),
    .ap_return_9(load_weights_U0_ap_return_9),
    .ap_return_10(load_weights_U0_ap_return_10),
    .ap_return_11(load_weights_U0_ap_return_11),
    .ap_return_12(load_weights_U0_ap_return_12),
    .ap_return_13(load_weights_U0_ap_return_13),
    .ap_return_14(load_weights_U0_ap_return_14),
    .ap_return_15(load_weights_U0_ap_return_15)
);

mobilenet_VITIS_LOOP_45_3_proc VITIS_LOOP_45_3_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(VITIS_LOOP_45_3_proc_U0_ap_start),
    .ap_done(VITIS_LOOP_45_3_proc_U0_ap_done),
    .ap_continue(VITIS_LOOP_45_3_proc_U0_ap_continue),
    .ap_idle(VITIS_LOOP_45_3_proc_U0_ap_idle),
    .ap_ready(VITIS_LOOP_45_3_proc_U0_ap_ready),
    .i_dout(i_c_dout),
    .i_empty_n(i_c_empty_n),
    .i_read(VITIS_LOOP_45_3_proc_U0_i_read),
    .bottom15_address0(VITIS_LOOP_45_3_proc_U0_bottom15_address0),
    .bottom15_ce0(VITIS_LOOP_45_3_proc_U0_bottom15_ce0),
    .bottom15_q0(bottom15_q0),
    .p_read(weight_buf_V_15_dout),
    .top30_address0(VITIS_LOOP_45_3_proc_U0_top30_address0),
    .top30_ce0(VITIS_LOOP_45_3_proc_U0_top30_ce0),
    .top30_we0(VITIS_LOOP_45_3_proc_U0_top30_we0),
    .top30_d0(VITIS_LOOP_45_3_proc_U0_top30_d0),
    .top30_address1(VITIS_LOOP_45_3_proc_U0_top30_address1),
    .top30_ce1(VITIS_LOOP_45_3_proc_U0_top30_ce1),
    .top30_we1(VITIS_LOOP_45_3_proc_U0_top30_we1),
    .top30_d1(VITIS_LOOP_45_3_proc_U0_top30_d1),
    .top30_q1(top30_q1),
    .bottom14_address0(VITIS_LOOP_45_3_proc_U0_bottom14_address0),
    .bottom14_ce0(VITIS_LOOP_45_3_proc_U0_bottom14_ce0),
    .bottom14_q0(bottom14_q0),
    .p_read1(weight_buf_V_14_dout),
    .top29_address0(VITIS_LOOP_45_3_proc_U0_top29_address0),
    .top29_ce0(VITIS_LOOP_45_3_proc_U0_top29_ce0),
    .top29_we0(VITIS_LOOP_45_3_proc_U0_top29_we0),
    .top29_d0(VITIS_LOOP_45_3_proc_U0_top29_d0),
    .top29_address1(VITIS_LOOP_45_3_proc_U0_top29_address1),
    .top29_ce1(VITIS_LOOP_45_3_proc_U0_top29_ce1),
    .top29_we1(VITIS_LOOP_45_3_proc_U0_top29_we1),
    .top29_d1(VITIS_LOOP_45_3_proc_U0_top29_d1),
    .top29_q1(top29_q1),
    .bottom13_address0(VITIS_LOOP_45_3_proc_U0_bottom13_address0),
    .bottom13_ce0(VITIS_LOOP_45_3_proc_U0_bottom13_ce0),
    .bottom13_q0(bottom13_q0),
    .p_read2(weight_buf_V_13_dout),
    .top28_address0(VITIS_LOOP_45_3_proc_U0_top28_address0),
    .top28_ce0(VITIS_LOOP_45_3_proc_U0_top28_ce0),
    .top28_we0(VITIS_LOOP_45_3_proc_U0_top28_we0),
    .top28_d0(VITIS_LOOP_45_3_proc_U0_top28_d0),
    .top28_address1(VITIS_LOOP_45_3_proc_U0_top28_address1),
    .top28_ce1(VITIS_LOOP_45_3_proc_U0_top28_ce1),
    .top28_we1(VITIS_LOOP_45_3_proc_U0_top28_we1),
    .top28_d1(VITIS_LOOP_45_3_proc_U0_top28_d1),
    .top28_q1(top28_q1),
    .bottom12_address0(VITIS_LOOP_45_3_proc_U0_bottom12_address0),
    .bottom12_ce0(VITIS_LOOP_45_3_proc_U0_bottom12_ce0),
    .bottom12_q0(bottom12_q0),
    .p_read3(weight_buf_V_12_dout),
    .top27_address0(VITIS_LOOP_45_3_proc_U0_top27_address0),
    .top27_ce0(VITIS_LOOP_45_3_proc_U0_top27_ce0),
    .top27_we0(VITIS_LOOP_45_3_proc_U0_top27_we0),
    .top27_d0(VITIS_LOOP_45_3_proc_U0_top27_d0),
    .top27_address1(VITIS_LOOP_45_3_proc_U0_top27_address1),
    .top27_ce1(VITIS_LOOP_45_3_proc_U0_top27_ce1),
    .top27_we1(VITIS_LOOP_45_3_proc_U0_top27_we1),
    .top27_d1(VITIS_LOOP_45_3_proc_U0_top27_d1),
    .top27_q1(top27_q1),
    .bottom11_address0(VITIS_LOOP_45_3_proc_U0_bottom11_address0),
    .bottom11_ce0(VITIS_LOOP_45_3_proc_U0_bottom11_ce0),
    .bottom11_q0(bottom11_q0),
    .p_read4(weight_buf_V_11_dout),
    .top26_address0(VITIS_LOOP_45_3_proc_U0_top26_address0),
    .top26_ce0(VITIS_LOOP_45_3_proc_U0_top26_ce0),
    .top26_we0(VITIS_LOOP_45_3_proc_U0_top26_we0),
    .top26_d0(VITIS_LOOP_45_3_proc_U0_top26_d0),
    .top26_address1(VITIS_LOOP_45_3_proc_U0_top26_address1),
    .top26_ce1(VITIS_LOOP_45_3_proc_U0_top26_ce1),
    .top26_we1(VITIS_LOOP_45_3_proc_U0_top26_we1),
    .top26_d1(VITIS_LOOP_45_3_proc_U0_top26_d1),
    .top26_q1(top26_q1),
    .bottom10_address0(VITIS_LOOP_45_3_proc_U0_bottom10_address0),
    .bottom10_ce0(VITIS_LOOP_45_3_proc_U0_bottom10_ce0),
    .bottom10_q0(bottom10_q0),
    .p_read5(weight_buf_V_10_dout),
    .top25_address0(VITIS_LOOP_45_3_proc_U0_top25_address0),
    .top25_ce0(VITIS_LOOP_45_3_proc_U0_top25_ce0),
    .top25_we0(VITIS_LOOP_45_3_proc_U0_top25_we0),
    .top25_d0(VITIS_LOOP_45_3_proc_U0_top25_d0),
    .top25_address1(VITIS_LOOP_45_3_proc_U0_top25_address1),
    .top25_ce1(VITIS_LOOP_45_3_proc_U0_top25_ce1),
    .top25_we1(VITIS_LOOP_45_3_proc_U0_top25_we1),
    .top25_d1(VITIS_LOOP_45_3_proc_U0_top25_d1),
    .top25_q1(top25_q1),
    .bottom9_address0(VITIS_LOOP_45_3_proc_U0_bottom9_address0),
    .bottom9_ce0(VITIS_LOOP_45_3_proc_U0_bottom9_ce0),
    .bottom9_q0(bottom9_q0),
    .p_read6(weight_buf_V_9_dout),
    .top24_address0(VITIS_LOOP_45_3_proc_U0_top24_address0),
    .top24_ce0(VITIS_LOOP_45_3_proc_U0_top24_ce0),
    .top24_we0(VITIS_LOOP_45_3_proc_U0_top24_we0),
    .top24_d0(VITIS_LOOP_45_3_proc_U0_top24_d0),
    .top24_address1(VITIS_LOOP_45_3_proc_U0_top24_address1),
    .top24_ce1(VITIS_LOOP_45_3_proc_U0_top24_ce1),
    .top24_we1(VITIS_LOOP_45_3_proc_U0_top24_we1),
    .top24_d1(VITIS_LOOP_45_3_proc_U0_top24_d1),
    .top24_q1(top24_q1),
    .bottom8_address0(VITIS_LOOP_45_3_proc_U0_bottom8_address0),
    .bottom8_ce0(VITIS_LOOP_45_3_proc_U0_bottom8_ce0),
    .bottom8_q0(bottom8_q0),
    .p_read7(weight_buf_V_8_dout),
    .top23_address0(VITIS_LOOP_45_3_proc_U0_top23_address0),
    .top23_ce0(VITIS_LOOP_45_3_proc_U0_top23_ce0),
    .top23_we0(VITIS_LOOP_45_3_proc_U0_top23_we0),
    .top23_d0(VITIS_LOOP_45_3_proc_U0_top23_d0),
    .top23_address1(VITIS_LOOP_45_3_proc_U0_top23_address1),
    .top23_ce1(VITIS_LOOP_45_3_proc_U0_top23_ce1),
    .top23_we1(VITIS_LOOP_45_3_proc_U0_top23_we1),
    .top23_d1(VITIS_LOOP_45_3_proc_U0_top23_d1),
    .top23_q1(top23_q1),
    .bottom7_address0(VITIS_LOOP_45_3_proc_U0_bottom7_address0),
    .bottom7_ce0(VITIS_LOOP_45_3_proc_U0_bottom7_ce0),
    .bottom7_q0(bottom7_q0),
    .p_read8(weight_buf_V_7_dout),
    .top22_address0(VITIS_LOOP_45_3_proc_U0_top22_address0),
    .top22_ce0(VITIS_LOOP_45_3_proc_U0_top22_ce0),
    .top22_we0(VITIS_LOOP_45_3_proc_U0_top22_we0),
    .top22_d0(VITIS_LOOP_45_3_proc_U0_top22_d0),
    .top22_address1(VITIS_LOOP_45_3_proc_U0_top22_address1),
    .top22_ce1(VITIS_LOOP_45_3_proc_U0_top22_ce1),
    .top22_q1(top22_q1),
    .bottom6_address0(VITIS_LOOP_45_3_proc_U0_bottom6_address0),
    .bottom6_ce0(VITIS_LOOP_45_3_proc_U0_bottom6_ce0),
    .bottom6_q0(bottom6_q0),
    .p_read9(weight_buf_V_6_dout),
    .top21_address0(VITIS_LOOP_45_3_proc_U0_top21_address0),
    .top21_ce0(VITIS_LOOP_45_3_proc_U0_top21_ce0),
    .top21_we0(VITIS_LOOP_45_3_proc_U0_top21_we0),
    .top21_d0(VITIS_LOOP_45_3_proc_U0_top21_d0),
    .top21_address1(VITIS_LOOP_45_3_proc_U0_top21_address1),
    .top21_ce1(VITIS_LOOP_45_3_proc_U0_top21_ce1),
    .top21_q1(top21_q1),
    .bottom5_address0(VITIS_LOOP_45_3_proc_U0_bottom5_address0),
    .bottom5_ce0(VITIS_LOOP_45_3_proc_U0_bottom5_ce0),
    .bottom5_q0(bottom5_q0),
    .p_read10(weight_buf_V_5_dout),
    .top20_address0(VITIS_LOOP_45_3_proc_U0_top20_address0),
    .top20_ce0(VITIS_LOOP_45_3_proc_U0_top20_ce0),
    .top20_we0(VITIS_LOOP_45_3_proc_U0_top20_we0),
    .top20_d0(VITIS_LOOP_45_3_proc_U0_top20_d0),
    .top20_address1(VITIS_LOOP_45_3_proc_U0_top20_address1),
    .top20_ce1(VITIS_LOOP_45_3_proc_U0_top20_ce1),
    .top20_q1(top20_q1),
    .bottom4_address0(VITIS_LOOP_45_3_proc_U0_bottom4_address0),
    .bottom4_ce0(VITIS_LOOP_45_3_proc_U0_bottom4_ce0),
    .bottom4_q0(bottom4_q0),
    .p_read11(weight_buf_V_4_dout),
    .top19_address0(VITIS_LOOP_45_3_proc_U0_top19_address0),
    .top19_ce0(VITIS_LOOP_45_3_proc_U0_top19_ce0),
    .top19_we0(VITIS_LOOP_45_3_proc_U0_top19_we0),
    .top19_d0(VITIS_LOOP_45_3_proc_U0_top19_d0),
    .top19_address1(VITIS_LOOP_45_3_proc_U0_top19_address1),
    .top19_ce1(VITIS_LOOP_45_3_proc_U0_top19_ce1),
    .top19_q1(top19_q1),
    .bottom3_address0(VITIS_LOOP_45_3_proc_U0_bottom3_address0),
    .bottom3_ce0(VITIS_LOOP_45_3_proc_U0_bottom3_ce0),
    .bottom3_q0(bottom3_q0),
    .p_read12(weight_buf_V_3_dout),
    .top18_address0(VITIS_LOOP_45_3_proc_U0_top18_address0),
    .top18_ce0(VITIS_LOOP_45_3_proc_U0_top18_ce0),
    .top18_we0(VITIS_LOOP_45_3_proc_U0_top18_we0),
    .top18_d0(VITIS_LOOP_45_3_proc_U0_top18_d0),
    .top18_address1(VITIS_LOOP_45_3_proc_U0_top18_address1),
    .top18_ce1(VITIS_LOOP_45_3_proc_U0_top18_ce1),
    .top18_q1(top18_q1),
    .bottom2_address0(VITIS_LOOP_45_3_proc_U0_bottom2_address0),
    .bottom2_ce0(VITIS_LOOP_45_3_proc_U0_bottom2_ce0),
    .bottom2_q0(bottom2_q0),
    .p_read13(weight_buf_V_2_dout),
    .top17_address0(VITIS_LOOP_45_3_proc_U0_top17_address0),
    .top17_ce0(VITIS_LOOP_45_3_proc_U0_top17_ce0),
    .top17_we0(VITIS_LOOP_45_3_proc_U0_top17_we0),
    .top17_d0(VITIS_LOOP_45_3_proc_U0_top17_d0),
    .top17_address1(VITIS_LOOP_45_3_proc_U0_top17_address1),
    .top17_ce1(VITIS_LOOP_45_3_proc_U0_top17_ce1),
    .top17_q1(top17_q1),
    .bottom1_address0(VITIS_LOOP_45_3_proc_U0_bottom1_address0),
    .bottom1_ce0(VITIS_LOOP_45_3_proc_U0_bottom1_ce0),
    .bottom1_q0(bottom1_q0),
    .p_read14(weight_buf_V_1_dout),
    .top16_address0(VITIS_LOOP_45_3_proc_U0_top16_address0),
    .top16_ce0(VITIS_LOOP_45_3_proc_U0_top16_ce0),
    .top16_we0(VITIS_LOOP_45_3_proc_U0_top16_we0),
    .top16_d0(VITIS_LOOP_45_3_proc_U0_top16_d0),
    .top16_address1(VITIS_LOOP_45_3_proc_U0_top16_address1),
    .top16_ce1(VITIS_LOOP_45_3_proc_U0_top16_ce1),
    .top16_q1(top16_q1),
    .trunc_ln43_dout(trunc_ln43_c_dout),
    .trunc_ln43_empty_n(trunc_ln43_c_empty_n),
    .trunc_ln43_read(VITIS_LOOP_45_3_proc_U0_trunc_ln43_read),
    .bottom_address0(VITIS_LOOP_45_3_proc_U0_bottom_address0),
    .bottom_ce0(VITIS_LOOP_45_3_proc_U0_bottom_ce0),
    .bottom_q0(bottom_q0),
    .p_read15(weight_buf_V_0_dout),
    .top_address0(VITIS_LOOP_45_3_proc_U0_top_address0),
    .top_ce0(VITIS_LOOP_45_3_proc_U0_top_ce0),
    .top_we0(VITIS_LOOP_45_3_proc_U0_top_we0),
    .top_d0(VITIS_LOOP_45_3_proc_U0_top_d0),
    .top_address1(VITIS_LOOP_45_3_proc_U0_top_address1),
    .top_ce1(VITIS_LOOP_45_3_proc_U0_top_ce1),
    .top_q1(top_q1)
);

mobilenet_fifo_w2_d2_S i_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_i_out_din),
    .if_full_n(i_c_full_n),
    .if_write(load_weights_U0_i_out_write),
    .if_dout(i_c_dout),
    .if_empty_n(i_c_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_i_read)
);

mobilenet_fifo_w2_d2_S trunc_ln43_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_j_out_din),
    .if_full_n(trunc_ln43_c_full_n),
    .if_write(load_weights_U0_j_out_write),
    .if_dout(trunc_ln43_c_dout),
    .if_empty_n(trunc_ln43_c_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_trunc_ln43_read)
);

mobilenet_fifo_w8_d2_S weight_buf_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_0),
    .if_full_n(weight_buf_V_0_full_n),
    .if_write(ap_channel_done_weight_buf_V_0),
    .if_dout(weight_buf_V_0_dout),
    .if_empty_n(weight_buf_V_0_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_1),
    .if_full_n(weight_buf_V_1_full_n),
    .if_write(ap_channel_done_weight_buf_V_1),
    .if_dout(weight_buf_V_1_dout),
    .if_empty_n(weight_buf_V_1_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_2),
    .if_full_n(weight_buf_V_2_full_n),
    .if_write(ap_channel_done_weight_buf_V_2),
    .if_dout(weight_buf_V_2_dout),
    .if_empty_n(weight_buf_V_2_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_3),
    .if_full_n(weight_buf_V_3_full_n),
    .if_write(ap_channel_done_weight_buf_V_3),
    .if_dout(weight_buf_V_3_dout),
    .if_empty_n(weight_buf_V_3_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_4),
    .if_full_n(weight_buf_V_4_full_n),
    .if_write(ap_channel_done_weight_buf_V_4),
    .if_dout(weight_buf_V_4_dout),
    .if_empty_n(weight_buf_V_4_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_5),
    .if_full_n(weight_buf_V_5_full_n),
    .if_write(ap_channel_done_weight_buf_V_5),
    .if_dout(weight_buf_V_5_dout),
    .if_empty_n(weight_buf_V_5_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_6),
    .if_full_n(weight_buf_V_6_full_n),
    .if_write(ap_channel_done_weight_buf_V_6),
    .if_dout(weight_buf_V_6_dout),
    .if_empty_n(weight_buf_V_6_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_7),
    .if_full_n(weight_buf_V_7_full_n),
    .if_write(ap_channel_done_weight_buf_V_7),
    .if_dout(weight_buf_V_7_dout),
    .if_empty_n(weight_buf_V_7_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_8),
    .if_full_n(weight_buf_V_8_full_n),
    .if_write(ap_channel_done_weight_buf_V_8),
    .if_dout(weight_buf_V_8_dout),
    .if_empty_n(weight_buf_V_8_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_9),
    .if_full_n(weight_buf_V_9_full_n),
    .if_write(ap_channel_done_weight_buf_V_9),
    .if_dout(weight_buf_V_9_dout),
    .if_empty_n(weight_buf_V_9_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_10),
    .if_full_n(weight_buf_V_10_full_n),
    .if_write(ap_channel_done_weight_buf_V_10),
    .if_dout(weight_buf_V_10_dout),
    .if_empty_n(weight_buf_V_10_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_11),
    .if_full_n(weight_buf_V_11_full_n),
    .if_write(ap_channel_done_weight_buf_V_11),
    .if_dout(weight_buf_V_11_dout),
    .if_empty_n(weight_buf_V_11_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_12),
    .if_full_n(weight_buf_V_12_full_n),
    .if_write(ap_channel_done_weight_buf_V_12),
    .if_dout(weight_buf_V_12_dout),
    .if_empty_n(weight_buf_V_12_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_13),
    .if_full_n(weight_buf_V_13_full_n),
    .if_write(ap_channel_done_weight_buf_V_13),
    .if_dout(weight_buf_V_13_dout),
    .if_empty_n(weight_buf_V_13_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_14),
    .if_full_n(weight_buf_V_14_full_n),
    .if_write(ap_channel_done_weight_buf_V_14),
    .if_dout(weight_buf_V_14_dout),
    .if_empty_n(weight_buf_V_14_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

mobilenet_fifo_w8_d2_S weight_buf_V_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_weights_U0_ap_return_15),
    .if_full_n(weight_buf_V_15_full_n),
    .if_write(ap_channel_done_weight_buf_V_15),
    .if_dout(weight_buf_V_15_dout),
    .if_empty_n(weight_buf_V_15_empty_n),
    .if_read(VITIS_LOOP_45_3_proc_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_VITIS_LOOP_45_3_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_VITIS_LOOP_45_3_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_VITIS_LOOP_45_3_proc_U0_ap_ready <= ap_sync_VITIS_LOOP_45_3_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_0 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_0 <= ap_sync_channel_write_weight_buf_V_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_1 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_1 <= ap_sync_channel_write_weight_buf_V_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_10 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_10 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_10 <= ap_sync_channel_write_weight_buf_V_10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_11 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_11 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_11 <= ap_sync_channel_write_weight_buf_V_11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_12 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_12 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_12 <= ap_sync_channel_write_weight_buf_V_12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_13 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_13 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_13 <= ap_sync_channel_write_weight_buf_V_13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_14 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_14 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_14 <= ap_sync_channel_write_weight_buf_V_14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_15 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_15 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_15 <= ap_sync_channel_write_weight_buf_V_15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_2 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_2 <= ap_sync_channel_write_weight_buf_V_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_3 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_3 <= ap_sync_channel_write_weight_buf_V_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_4 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_4 <= ap_sync_channel_write_weight_buf_V_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_5 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_5 <= ap_sync_channel_write_weight_buf_V_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_6 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_6 <= ap_sync_channel_write_weight_buf_V_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_7 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_7 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_7 <= ap_sync_channel_write_weight_buf_V_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_8 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_8 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_8 <= ap_sync_channel_write_weight_buf_V_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_weight_buf_V_9 <= 1'b0;
    end else begin
        if (((load_weights_U0_ap_done & load_weights_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_weight_buf_V_9 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_weight_buf_V_9 <= ap_sync_channel_write_weight_buf_V_9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_load_weights_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_load_weights_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_load_weights_U0_ap_ready <= ap_sync_load_weights_U0_ap_ready;
        end
    end
end

assign VITIS_LOOP_45_3_proc_U0_ap_continue = ap_continue;

assign VITIS_LOOP_45_3_proc_U0_ap_start = (weight_buf_V_9_empty_n & weight_buf_V_8_empty_n & weight_buf_V_7_empty_n & weight_buf_V_6_empty_n & weight_buf_V_5_empty_n & weight_buf_V_4_empty_n & weight_buf_V_3_empty_n & weight_buf_V_2_empty_n & weight_buf_V_1_empty_n & weight_buf_V_15_empty_n & weight_buf_V_14_empty_n & weight_buf_V_13_empty_n & weight_buf_V_12_empty_n & weight_buf_V_11_empty_n & weight_buf_V_10_empty_n & weight_buf_V_0_empty_n & (ap_sync_reg_VITIS_LOOP_45_3_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign VITIS_LOOP_45_3_proc_U0_start_full_n = 1'b1;

assign VITIS_LOOP_45_3_proc_U0_start_write = 1'b0;

assign ap_channel_done_weight_buf_V_0 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_0 ^ 1'b1));

assign ap_channel_done_weight_buf_V_1 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_1 ^ 1'b1));

assign ap_channel_done_weight_buf_V_10 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_10 ^ 1'b1));

assign ap_channel_done_weight_buf_V_11 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_11 ^ 1'b1));

assign ap_channel_done_weight_buf_V_12 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_12 ^ 1'b1));

assign ap_channel_done_weight_buf_V_13 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_13 ^ 1'b1));

assign ap_channel_done_weight_buf_V_14 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_14 ^ 1'b1));

assign ap_channel_done_weight_buf_V_15 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_15 ^ 1'b1));

assign ap_channel_done_weight_buf_V_2 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_2 ^ 1'b1));

assign ap_channel_done_weight_buf_V_3 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_3 ^ 1'b1));

assign ap_channel_done_weight_buf_V_4 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_4 ^ 1'b1));

assign ap_channel_done_weight_buf_V_5 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_5 ^ 1'b1));

assign ap_channel_done_weight_buf_V_6 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_6 ^ 1'b1));

assign ap_channel_done_weight_buf_V_7 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_7 ^ 1'b1));

assign ap_channel_done_weight_buf_V_8 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_8 ^ 1'b1));

assign ap_channel_done_weight_buf_V_9 = (load_weights_U0_ap_done & (ap_sync_reg_channel_write_weight_buf_V_9 ^ 1'b1));

assign ap_done = VITIS_LOOP_45_3_proc_U0_ap_done;

assign ap_idle = (load_weights_U0_ap_idle & (weight_buf_V_15_empty_n ^ 1'b1) & (weight_buf_V_14_empty_n ^ 1'b1) & (weight_buf_V_13_empty_n ^ 1'b1) & (weight_buf_V_12_empty_n ^ 1'b1) & (weight_buf_V_11_empty_n ^ 1'b1) & (weight_buf_V_10_empty_n ^ 1'b1) & (weight_buf_V_9_empty_n ^ 1'b1) & (weight_buf_V_8_empty_n ^ 1'b1) & (weight_buf_V_7_empty_n ^ 1'b1) & (weight_buf_V_6_empty_n ^ 1'b1) & (weight_buf_V_5_empty_n ^ 1'b1) & (weight_buf_V_4_empty_n ^ 1'b1) & (weight_buf_V_3_empty_n ^ 1'b1) & (weight_buf_V_2_empty_n ^ 1'b1) & (weight_buf_V_1_empty_n ^ 1'b1) & (weight_buf_V_0_empty_n ^ 1'b1) & VITIS_LOOP_45_3_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_VITIS_LOOP_45_3_proc_U0_ap_ready = (ap_sync_reg_VITIS_LOOP_45_3_proc_U0_ap_ready | VITIS_LOOP_45_3_proc_U0_ap_ready);

assign ap_sync_channel_write_weight_buf_V_0 = ((weight_buf_V_0_full_n & ap_channel_done_weight_buf_V_0) | ap_sync_reg_channel_write_weight_buf_V_0);

assign ap_sync_channel_write_weight_buf_V_1 = ((weight_buf_V_1_full_n & ap_channel_done_weight_buf_V_1) | ap_sync_reg_channel_write_weight_buf_V_1);

assign ap_sync_channel_write_weight_buf_V_10 = ((weight_buf_V_10_full_n & ap_channel_done_weight_buf_V_10) | ap_sync_reg_channel_write_weight_buf_V_10);

assign ap_sync_channel_write_weight_buf_V_11 = ((weight_buf_V_11_full_n & ap_channel_done_weight_buf_V_11) | ap_sync_reg_channel_write_weight_buf_V_11);

assign ap_sync_channel_write_weight_buf_V_12 = ((weight_buf_V_12_full_n & ap_channel_done_weight_buf_V_12) | ap_sync_reg_channel_write_weight_buf_V_12);

assign ap_sync_channel_write_weight_buf_V_13 = ((weight_buf_V_13_full_n & ap_channel_done_weight_buf_V_13) | ap_sync_reg_channel_write_weight_buf_V_13);

assign ap_sync_channel_write_weight_buf_V_14 = ((weight_buf_V_14_full_n & ap_channel_done_weight_buf_V_14) | ap_sync_reg_channel_write_weight_buf_V_14);

assign ap_sync_channel_write_weight_buf_V_15 = ((weight_buf_V_15_full_n & ap_channel_done_weight_buf_V_15) | ap_sync_reg_channel_write_weight_buf_V_15);

assign ap_sync_channel_write_weight_buf_V_2 = ((weight_buf_V_2_full_n & ap_channel_done_weight_buf_V_2) | ap_sync_reg_channel_write_weight_buf_V_2);

assign ap_sync_channel_write_weight_buf_V_3 = ((weight_buf_V_3_full_n & ap_channel_done_weight_buf_V_3) | ap_sync_reg_channel_write_weight_buf_V_3);

assign ap_sync_channel_write_weight_buf_V_4 = ((weight_buf_V_4_full_n & ap_channel_done_weight_buf_V_4) | ap_sync_reg_channel_write_weight_buf_V_4);

assign ap_sync_channel_write_weight_buf_V_5 = ((weight_buf_V_5_full_n & ap_channel_done_weight_buf_V_5) | ap_sync_reg_channel_write_weight_buf_V_5);

assign ap_sync_channel_write_weight_buf_V_6 = ((weight_buf_V_6_full_n & ap_channel_done_weight_buf_V_6) | ap_sync_reg_channel_write_weight_buf_V_6);

assign ap_sync_channel_write_weight_buf_V_7 = ((weight_buf_V_7_full_n & ap_channel_done_weight_buf_V_7) | ap_sync_reg_channel_write_weight_buf_V_7);

assign ap_sync_channel_write_weight_buf_V_8 = ((weight_buf_V_8_full_n & ap_channel_done_weight_buf_V_8) | ap_sync_reg_channel_write_weight_buf_V_8);

assign ap_sync_channel_write_weight_buf_V_9 = ((weight_buf_V_9_full_n & ap_channel_done_weight_buf_V_9) | ap_sync_reg_channel_write_weight_buf_V_9);

assign ap_sync_continue = ap_continue;

assign ap_sync_done = VITIS_LOOP_45_3_proc_U0_ap_done;

assign ap_sync_load_weights_U0_ap_ready = (load_weights_U0_ap_ready | ap_sync_reg_load_weights_U0_ap_ready);

assign ap_sync_ready = (ap_sync_load_weights_U0_ap_ready & ap_sync_VITIS_LOOP_45_3_proc_U0_ap_ready);

assign bottom10_address0 = VITIS_LOOP_45_3_proc_U0_bottom10_address0;

assign bottom10_address1 = 10'd0;

assign bottom10_ce0 = VITIS_LOOP_45_3_proc_U0_bottom10_ce0;

assign bottom10_ce1 = 1'b0;

assign bottom10_d0 = 16'd0;

assign bottom10_d1 = 16'd0;

assign bottom10_we0 = 1'b0;

assign bottom10_we1 = 1'b0;

assign bottom11_address0 = VITIS_LOOP_45_3_proc_U0_bottom11_address0;

assign bottom11_address1 = 10'd0;

assign bottom11_ce0 = VITIS_LOOP_45_3_proc_U0_bottom11_ce0;

assign bottom11_ce1 = 1'b0;

assign bottom11_d0 = 16'd0;

assign bottom11_d1 = 16'd0;

assign bottom11_we0 = 1'b0;

assign bottom11_we1 = 1'b0;

assign bottom12_address0 = VITIS_LOOP_45_3_proc_U0_bottom12_address0;

assign bottom12_address1 = 10'd0;

assign bottom12_ce0 = VITIS_LOOP_45_3_proc_U0_bottom12_ce0;

assign bottom12_ce1 = 1'b0;

assign bottom12_d0 = 16'd0;

assign bottom12_d1 = 16'd0;

assign bottom12_we0 = 1'b0;

assign bottom12_we1 = 1'b0;

assign bottom13_address0 = VITIS_LOOP_45_3_proc_U0_bottom13_address0;

assign bottom13_address1 = 10'd0;

assign bottom13_ce0 = VITIS_LOOP_45_3_proc_U0_bottom13_ce0;

assign bottom13_ce1 = 1'b0;

assign bottom13_d0 = 16'd0;

assign bottom13_d1 = 16'd0;

assign bottom13_we0 = 1'b0;

assign bottom13_we1 = 1'b0;

assign bottom14_address0 = VITIS_LOOP_45_3_proc_U0_bottom14_address0;

assign bottom14_address1 = 10'd0;

assign bottom14_ce0 = VITIS_LOOP_45_3_proc_U0_bottom14_ce0;

assign bottom14_ce1 = 1'b0;

assign bottom14_d0 = 16'd0;

assign bottom14_d1 = 16'd0;

assign bottom14_we0 = 1'b0;

assign bottom14_we1 = 1'b0;

assign bottom15_address0 = VITIS_LOOP_45_3_proc_U0_bottom15_address0;

assign bottom15_address1 = 10'd0;

assign bottom15_ce0 = VITIS_LOOP_45_3_proc_U0_bottom15_ce0;

assign bottom15_ce1 = 1'b0;

assign bottom15_d0 = 16'd0;

assign bottom15_d1 = 16'd0;

assign bottom15_we0 = 1'b0;

assign bottom15_we1 = 1'b0;

assign bottom1_address0 = VITIS_LOOP_45_3_proc_U0_bottom1_address0;

assign bottom1_address1 = 10'd0;

assign bottom1_ce0 = VITIS_LOOP_45_3_proc_U0_bottom1_ce0;

assign bottom1_ce1 = 1'b0;

assign bottom1_d0 = 16'd0;

assign bottom1_d1 = 16'd0;

assign bottom1_we0 = 1'b0;

assign bottom1_we1 = 1'b0;

assign bottom2_address0 = VITIS_LOOP_45_3_proc_U0_bottom2_address0;

assign bottom2_address1 = 10'd0;

assign bottom2_ce0 = VITIS_LOOP_45_3_proc_U0_bottom2_ce0;

assign bottom2_ce1 = 1'b0;

assign bottom2_d0 = 16'd0;

assign bottom2_d1 = 16'd0;

assign bottom2_we0 = 1'b0;

assign bottom2_we1 = 1'b0;

assign bottom3_address0 = VITIS_LOOP_45_3_proc_U0_bottom3_address0;

assign bottom3_address1 = 10'd0;

assign bottom3_ce0 = VITIS_LOOP_45_3_proc_U0_bottom3_ce0;

assign bottom3_ce1 = 1'b0;

assign bottom3_d0 = 16'd0;

assign bottom3_d1 = 16'd0;

assign bottom3_we0 = 1'b0;

assign bottom3_we1 = 1'b0;

assign bottom4_address0 = VITIS_LOOP_45_3_proc_U0_bottom4_address0;

assign bottom4_address1 = 10'd0;

assign bottom4_ce0 = VITIS_LOOP_45_3_proc_U0_bottom4_ce0;

assign bottom4_ce1 = 1'b0;

assign bottom4_d0 = 16'd0;

assign bottom4_d1 = 16'd0;

assign bottom4_we0 = 1'b0;

assign bottom4_we1 = 1'b0;

assign bottom5_address0 = VITIS_LOOP_45_3_proc_U0_bottom5_address0;

assign bottom5_address1 = 10'd0;

assign bottom5_ce0 = VITIS_LOOP_45_3_proc_U0_bottom5_ce0;

assign bottom5_ce1 = 1'b0;

assign bottom5_d0 = 16'd0;

assign bottom5_d1 = 16'd0;

assign bottom5_we0 = 1'b0;

assign bottom5_we1 = 1'b0;

assign bottom6_address0 = VITIS_LOOP_45_3_proc_U0_bottom6_address0;

assign bottom6_address1 = 10'd0;

assign bottom6_ce0 = VITIS_LOOP_45_3_proc_U0_bottom6_ce0;

assign bottom6_ce1 = 1'b0;

assign bottom6_d0 = 16'd0;

assign bottom6_d1 = 16'd0;

assign bottom6_we0 = 1'b0;

assign bottom6_we1 = 1'b0;

assign bottom7_address0 = VITIS_LOOP_45_3_proc_U0_bottom7_address0;

assign bottom7_address1 = 10'd0;

assign bottom7_ce0 = VITIS_LOOP_45_3_proc_U0_bottom7_ce0;

assign bottom7_ce1 = 1'b0;

assign bottom7_d0 = 16'd0;

assign bottom7_d1 = 16'd0;

assign bottom7_we0 = 1'b0;

assign bottom7_we1 = 1'b0;

assign bottom8_address0 = VITIS_LOOP_45_3_proc_U0_bottom8_address0;

assign bottom8_address1 = 10'd0;

assign bottom8_ce0 = VITIS_LOOP_45_3_proc_U0_bottom8_ce0;

assign bottom8_ce1 = 1'b0;

assign bottom8_d0 = 16'd0;

assign bottom8_d1 = 16'd0;

assign bottom8_we0 = 1'b0;

assign bottom8_we1 = 1'b0;

assign bottom9_address0 = VITIS_LOOP_45_3_proc_U0_bottom9_address0;

assign bottom9_address1 = 10'd0;

assign bottom9_ce0 = VITIS_LOOP_45_3_proc_U0_bottom9_ce0;

assign bottom9_ce1 = 1'b0;

assign bottom9_d0 = 16'd0;

assign bottom9_d1 = 16'd0;

assign bottom9_we0 = 1'b0;

assign bottom9_we1 = 1'b0;

assign bottom_address0 = VITIS_LOOP_45_3_proc_U0_bottom_address0;

assign bottom_address1 = 10'd0;

assign bottom_ce0 = VITIS_LOOP_45_3_proc_U0_bottom_ce0;

assign bottom_ce1 = 1'b0;

assign bottom_d0 = 16'd0;

assign bottom_d1 = 16'd0;

assign bottom_we0 = 1'b0;

assign bottom_we1 = 1'b0;

assign load_weights_U0_ap_continue = (ap_sync_channel_write_weight_buf_V_9 & ap_sync_channel_write_weight_buf_V_8 & ap_sync_channel_write_weight_buf_V_7 & ap_sync_channel_write_weight_buf_V_6 & ap_sync_channel_write_weight_buf_V_5 & ap_sync_channel_write_weight_buf_V_4 & ap_sync_channel_write_weight_buf_V_3 & ap_sync_channel_write_weight_buf_V_2 & ap_sync_channel_write_weight_buf_V_15 & ap_sync_channel_write_weight_buf_V_14 & ap_sync_channel_write_weight_buf_V_13 & ap_sync_channel_write_weight_buf_V_12 & ap_sync_channel_write_weight_buf_V_11 & ap_sync_channel_write_weight_buf_V_10 & ap_sync_channel_write_weight_buf_V_1 & ap_sync_channel_write_weight_buf_V_0);

assign load_weights_U0_ap_start = ((ap_sync_reg_load_weights_U0_ap_ready ^ 1'b1) & ap_start);

assign load_weights_U0_start_full_n = 1'b1;

assign load_weights_U0_start_write = 1'b0;

assign top16_address0 = VITIS_LOOP_45_3_proc_U0_top16_address0;

assign top16_address1 = VITIS_LOOP_45_3_proc_U0_top16_address1;

assign top16_ce0 = VITIS_LOOP_45_3_proc_U0_top16_ce0;

assign top16_ce1 = VITIS_LOOP_45_3_proc_U0_top16_ce1;

assign top16_d0 = VITIS_LOOP_45_3_proc_U0_top16_d0;

assign top16_d1 = 16'd0;

assign top16_we0 = VITIS_LOOP_45_3_proc_U0_top16_we0;

assign top16_we1 = 1'b0;

assign top17_address0 = VITIS_LOOP_45_3_proc_U0_top17_address0;

assign top17_address1 = VITIS_LOOP_45_3_proc_U0_top17_address1;

assign top17_ce0 = VITIS_LOOP_45_3_proc_U0_top17_ce0;

assign top17_ce1 = VITIS_LOOP_45_3_proc_U0_top17_ce1;

assign top17_d0 = VITIS_LOOP_45_3_proc_U0_top17_d0;

assign top17_d1 = 16'd0;

assign top17_we0 = VITIS_LOOP_45_3_proc_U0_top17_we0;

assign top17_we1 = 1'b0;

assign top18_address0 = VITIS_LOOP_45_3_proc_U0_top18_address0;

assign top18_address1 = VITIS_LOOP_45_3_proc_U0_top18_address1;

assign top18_ce0 = VITIS_LOOP_45_3_proc_U0_top18_ce0;

assign top18_ce1 = VITIS_LOOP_45_3_proc_U0_top18_ce1;

assign top18_d0 = VITIS_LOOP_45_3_proc_U0_top18_d0;

assign top18_d1 = 16'd0;

assign top18_we0 = VITIS_LOOP_45_3_proc_U0_top18_we0;

assign top18_we1 = 1'b0;

assign top19_address0 = VITIS_LOOP_45_3_proc_U0_top19_address0;

assign top19_address1 = VITIS_LOOP_45_3_proc_U0_top19_address1;

assign top19_ce0 = VITIS_LOOP_45_3_proc_U0_top19_ce0;

assign top19_ce1 = VITIS_LOOP_45_3_proc_U0_top19_ce1;

assign top19_d0 = VITIS_LOOP_45_3_proc_U0_top19_d0;

assign top19_d1 = 16'd0;

assign top19_we0 = VITIS_LOOP_45_3_proc_U0_top19_we0;

assign top19_we1 = 1'b0;

assign top20_address0 = VITIS_LOOP_45_3_proc_U0_top20_address0;

assign top20_address1 = VITIS_LOOP_45_3_proc_U0_top20_address1;

assign top20_ce0 = VITIS_LOOP_45_3_proc_U0_top20_ce0;

assign top20_ce1 = VITIS_LOOP_45_3_proc_U0_top20_ce1;

assign top20_d0 = VITIS_LOOP_45_3_proc_U0_top20_d0;

assign top20_d1 = 16'd0;

assign top20_we0 = VITIS_LOOP_45_3_proc_U0_top20_we0;

assign top20_we1 = 1'b0;

assign top21_address0 = VITIS_LOOP_45_3_proc_U0_top21_address0;

assign top21_address1 = VITIS_LOOP_45_3_proc_U0_top21_address1;

assign top21_ce0 = VITIS_LOOP_45_3_proc_U0_top21_ce0;

assign top21_ce1 = VITIS_LOOP_45_3_proc_U0_top21_ce1;

assign top21_d0 = VITIS_LOOP_45_3_proc_U0_top21_d0;

assign top21_d1 = 16'd0;

assign top21_we0 = VITIS_LOOP_45_3_proc_U0_top21_we0;

assign top21_we1 = 1'b0;

assign top22_address0 = VITIS_LOOP_45_3_proc_U0_top22_address0;

assign top22_address1 = VITIS_LOOP_45_3_proc_U0_top22_address1;

assign top22_ce0 = VITIS_LOOP_45_3_proc_U0_top22_ce0;

assign top22_ce1 = VITIS_LOOP_45_3_proc_U0_top22_ce1;

assign top22_d0 = VITIS_LOOP_45_3_proc_U0_top22_d0;

assign top22_d1 = 16'd0;

assign top22_we0 = VITIS_LOOP_45_3_proc_U0_top22_we0;

assign top22_we1 = 1'b0;

assign top23_address0 = VITIS_LOOP_45_3_proc_U0_top23_address0;

assign top23_address1 = VITIS_LOOP_45_3_proc_U0_top23_address1;

assign top23_ce0 = VITIS_LOOP_45_3_proc_U0_top23_ce0;

assign top23_ce1 = VITIS_LOOP_45_3_proc_U0_top23_ce1;

assign top23_d0 = VITIS_LOOP_45_3_proc_U0_top23_d0;

assign top23_d1 = VITIS_LOOP_45_3_proc_U0_top23_d1;

assign top23_we0 = VITIS_LOOP_45_3_proc_U0_top23_we0;

assign top23_we1 = VITIS_LOOP_45_3_proc_U0_top23_we1;

assign top24_address0 = VITIS_LOOP_45_3_proc_U0_top24_address0;

assign top24_address1 = VITIS_LOOP_45_3_proc_U0_top24_address1;

assign top24_ce0 = VITIS_LOOP_45_3_proc_U0_top24_ce0;

assign top24_ce1 = VITIS_LOOP_45_3_proc_U0_top24_ce1;

assign top24_d0 = VITIS_LOOP_45_3_proc_U0_top24_d0;

assign top24_d1 = VITIS_LOOP_45_3_proc_U0_top24_d1;

assign top24_we0 = VITIS_LOOP_45_3_proc_U0_top24_we0;

assign top24_we1 = VITIS_LOOP_45_3_proc_U0_top24_we1;

assign top25_address0 = VITIS_LOOP_45_3_proc_U0_top25_address0;

assign top25_address1 = VITIS_LOOP_45_3_proc_U0_top25_address1;

assign top25_ce0 = VITIS_LOOP_45_3_proc_U0_top25_ce0;

assign top25_ce1 = VITIS_LOOP_45_3_proc_U0_top25_ce1;

assign top25_d0 = VITIS_LOOP_45_3_proc_U0_top25_d0;

assign top25_d1 = VITIS_LOOP_45_3_proc_U0_top25_d1;

assign top25_we0 = VITIS_LOOP_45_3_proc_U0_top25_we0;

assign top25_we1 = VITIS_LOOP_45_3_proc_U0_top25_we1;

assign top26_address0 = VITIS_LOOP_45_3_proc_U0_top26_address0;

assign top26_address1 = VITIS_LOOP_45_3_proc_U0_top26_address1;

assign top26_ce0 = VITIS_LOOP_45_3_proc_U0_top26_ce0;

assign top26_ce1 = VITIS_LOOP_45_3_proc_U0_top26_ce1;

assign top26_d0 = VITIS_LOOP_45_3_proc_U0_top26_d0;

assign top26_d1 = VITIS_LOOP_45_3_proc_U0_top26_d1;

assign top26_we0 = VITIS_LOOP_45_3_proc_U0_top26_we0;

assign top26_we1 = VITIS_LOOP_45_3_proc_U0_top26_we1;

assign top27_address0 = VITIS_LOOP_45_3_proc_U0_top27_address0;

assign top27_address1 = VITIS_LOOP_45_3_proc_U0_top27_address1;

assign top27_ce0 = VITIS_LOOP_45_3_proc_U0_top27_ce0;

assign top27_ce1 = VITIS_LOOP_45_3_proc_U0_top27_ce1;

assign top27_d0 = VITIS_LOOP_45_3_proc_U0_top27_d0;

assign top27_d1 = VITIS_LOOP_45_3_proc_U0_top27_d1;

assign top27_we0 = VITIS_LOOP_45_3_proc_U0_top27_we0;

assign top27_we1 = VITIS_LOOP_45_3_proc_U0_top27_we1;

assign top28_address0 = VITIS_LOOP_45_3_proc_U0_top28_address0;

assign top28_address1 = VITIS_LOOP_45_3_proc_U0_top28_address1;

assign top28_ce0 = VITIS_LOOP_45_3_proc_U0_top28_ce0;

assign top28_ce1 = VITIS_LOOP_45_3_proc_U0_top28_ce1;

assign top28_d0 = VITIS_LOOP_45_3_proc_U0_top28_d0;

assign top28_d1 = VITIS_LOOP_45_3_proc_U0_top28_d1;

assign top28_we0 = VITIS_LOOP_45_3_proc_U0_top28_we0;

assign top28_we1 = VITIS_LOOP_45_3_proc_U0_top28_we1;

assign top29_address0 = VITIS_LOOP_45_3_proc_U0_top29_address0;

assign top29_address1 = VITIS_LOOP_45_3_proc_U0_top29_address1;

assign top29_ce0 = VITIS_LOOP_45_3_proc_U0_top29_ce0;

assign top29_ce1 = VITIS_LOOP_45_3_proc_U0_top29_ce1;

assign top29_d0 = VITIS_LOOP_45_3_proc_U0_top29_d0;

assign top29_d1 = VITIS_LOOP_45_3_proc_U0_top29_d1;

assign top29_we0 = VITIS_LOOP_45_3_proc_U0_top29_we0;

assign top29_we1 = VITIS_LOOP_45_3_proc_U0_top29_we1;

assign top30_address0 = VITIS_LOOP_45_3_proc_U0_top30_address0;

assign top30_address1 = VITIS_LOOP_45_3_proc_U0_top30_address1;

assign top30_ce0 = VITIS_LOOP_45_3_proc_U0_top30_ce0;

assign top30_ce1 = VITIS_LOOP_45_3_proc_U0_top30_ce1;

assign top30_d0 = VITIS_LOOP_45_3_proc_U0_top30_d0;

assign top30_d1 = VITIS_LOOP_45_3_proc_U0_top30_d1;

assign top30_we0 = VITIS_LOOP_45_3_proc_U0_top30_we0;

assign top30_we1 = VITIS_LOOP_45_3_proc_U0_top30_we1;

assign top_address0 = VITIS_LOOP_45_3_proc_U0_top_address0;

assign top_address1 = VITIS_LOOP_45_3_proc_U0_top_address1;

assign top_ce0 = VITIS_LOOP_45_3_proc_U0_top_ce0;

assign top_ce1 = VITIS_LOOP_45_3_proc_U0_top_ce1;

assign top_d0 = VITIS_LOOP_45_3_proc_U0_top_d0;

assign top_d1 = 16'd0;

assign top_we0 = VITIS_LOOP_45_3_proc_U0_top_we0;

assign top_we1 = 1'b0;

assign weights10_address0 = load_weights_U0_weights10_address0;

assign weights10_address1 = 4'd0;

assign weights10_ce0 = load_weights_U0_weights10_ce0;

assign weights10_ce1 = 1'b0;

assign weights10_d0 = 8'd0;

assign weights10_d1 = 8'd0;

assign weights10_we0 = 1'b0;

assign weights10_we1 = 1'b0;

assign weights11_address0 = load_weights_U0_weights11_address0;

assign weights11_address1 = 4'd0;

assign weights11_ce0 = load_weights_U0_weights11_ce0;

assign weights11_ce1 = 1'b0;

assign weights11_d0 = 8'd0;

assign weights11_d1 = 8'd0;

assign weights11_we0 = 1'b0;

assign weights11_we1 = 1'b0;

assign weights12_address0 = load_weights_U0_weights12_address0;

assign weights12_address1 = 4'd0;

assign weights12_ce0 = load_weights_U0_weights12_ce0;

assign weights12_ce1 = 1'b0;

assign weights12_d0 = 8'd0;

assign weights12_d1 = 8'd0;

assign weights12_we0 = 1'b0;

assign weights12_we1 = 1'b0;

assign weights13_address0 = load_weights_U0_weights13_address0;

assign weights13_address1 = 4'd0;

assign weights13_ce0 = load_weights_U0_weights13_ce0;

assign weights13_ce1 = 1'b0;

assign weights13_d0 = 8'd0;

assign weights13_d1 = 8'd0;

assign weights13_we0 = 1'b0;

assign weights13_we1 = 1'b0;

assign weights14_address0 = load_weights_U0_weights14_address0;

assign weights14_address1 = 4'd0;

assign weights14_ce0 = load_weights_U0_weights14_ce0;

assign weights14_ce1 = 1'b0;

assign weights14_d0 = 8'd0;

assign weights14_d1 = 8'd0;

assign weights14_we0 = 1'b0;

assign weights14_we1 = 1'b0;

assign weights15_address0 = load_weights_U0_weights15_address0;

assign weights15_address1 = 4'd0;

assign weights15_ce0 = load_weights_U0_weights15_ce0;

assign weights15_ce1 = 1'b0;

assign weights15_d0 = 8'd0;

assign weights15_d1 = 8'd0;

assign weights15_we0 = 1'b0;

assign weights15_we1 = 1'b0;

assign weights1_address0 = load_weights_U0_weights1_address0;

assign weights1_address1 = 4'd0;

assign weights1_ce0 = load_weights_U0_weights1_ce0;

assign weights1_ce1 = 1'b0;

assign weights1_d0 = 8'd0;

assign weights1_d1 = 8'd0;

assign weights1_we0 = 1'b0;

assign weights1_we1 = 1'b0;

assign weights2_address0 = load_weights_U0_weights2_address0;

assign weights2_address1 = 4'd0;

assign weights2_ce0 = load_weights_U0_weights2_ce0;

assign weights2_ce1 = 1'b0;

assign weights2_d0 = 8'd0;

assign weights2_d1 = 8'd0;

assign weights2_we0 = 1'b0;

assign weights2_we1 = 1'b0;

assign weights3_address0 = load_weights_U0_weights3_address0;

assign weights3_address1 = 4'd0;

assign weights3_ce0 = load_weights_U0_weights3_ce0;

assign weights3_ce1 = 1'b0;

assign weights3_d0 = 8'd0;

assign weights3_d1 = 8'd0;

assign weights3_we0 = 1'b0;

assign weights3_we1 = 1'b0;

assign weights4_address0 = load_weights_U0_weights4_address0;

assign weights4_address1 = 4'd0;

assign weights4_ce0 = load_weights_U0_weights4_ce0;

assign weights4_ce1 = 1'b0;

assign weights4_d0 = 8'd0;

assign weights4_d1 = 8'd0;

assign weights4_we0 = 1'b0;

assign weights4_we1 = 1'b0;

assign weights5_address0 = load_weights_U0_weights5_address0;

assign weights5_address1 = 4'd0;

assign weights5_ce0 = load_weights_U0_weights5_ce0;

assign weights5_ce1 = 1'b0;

assign weights5_d0 = 8'd0;

assign weights5_d1 = 8'd0;

assign weights5_we0 = 1'b0;

assign weights5_we1 = 1'b0;

assign weights6_address0 = load_weights_U0_weights6_address0;

assign weights6_address1 = 4'd0;

assign weights6_ce0 = load_weights_U0_weights6_ce0;

assign weights6_ce1 = 1'b0;

assign weights6_d0 = 8'd0;

assign weights6_d1 = 8'd0;

assign weights6_we0 = 1'b0;

assign weights6_we1 = 1'b0;

assign weights7_address0 = load_weights_U0_weights7_address0;

assign weights7_address1 = 4'd0;

assign weights7_ce0 = load_weights_U0_weights7_ce0;

assign weights7_ce1 = 1'b0;

assign weights7_d0 = 8'd0;

assign weights7_d1 = 8'd0;

assign weights7_we0 = 1'b0;

assign weights7_we1 = 1'b0;

assign weights8_address0 = load_weights_U0_weights8_address0;

assign weights8_address1 = 4'd0;

assign weights8_ce0 = load_weights_U0_weights8_ce0;

assign weights8_ce1 = 1'b0;

assign weights8_d0 = 8'd0;

assign weights8_d1 = 8'd0;

assign weights8_we0 = 1'b0;

assign weights8_we1 = 1'b0;

assign weights9_address0 = load_weights_U0_weights9_address0;

assign weights9_address1 = 4'd0;

assign weights9_ce0 = load_weights_U0_weights9_ce0;

assign weights9_ce1 = 1'b0;

assign weights9_d0 = 8'd0;

assign weights9_d1 = 8'd0;

assign weights9_we0 = 1'b0;

assign weights9_we1 = 1'b0;

assign weights_address0 = load_weights_U0_weights_address0;

assign weights_address1 = 4'd0;

assign weights_ce0 = load_weights_U0_weights_ce0;

assign weights_ce1 = 1'b0;

assign weights_d0 = 8'd0;

assign weights_d1 = 8'd0;

assign weights_we0 = 1'b0;

assign weights_we1 = 1'b0;

endmodule //mobilenet_dataflow_in_loop_VITIS_LOOP_39_2
