// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mobilenet_VITIS_LOOP_45_3_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        i_dout,
        i_empty_n,
        i_read,
        bottom15_address0,
        bottom15_ce0,
        bottom15_q0,
        p_read,
        top30_address0,
        top30_ce0,
        top30_we0,
        top30_d0,
        top30_address1,
        top30_ce1,
        top30_we1,
        top30_d1,
        top30_q1,
        bottom14_address0,
        bottom14_ce0,
        bottom14_q0,
        p_read1,
        top29_address0,
        top29_ce0,
        top29_we0,
        top29_d0,
        top29_address1,
        top29_ce1,
        top29_we1,
        top29_d1,
        top29_q1,
        bottom13_address0,
        bottom13_ce0,
        bottom13_q0,
        p_read2,
        top28_address0,
        top28_ce0,
        top28_we0,
        top28_d0,
        top28_address1,
        top28_ce1,
        top28_we1,
        top28_d1,
        top28_q1,
        bottom12_address0,
        bottom12_ce0,
        bottom12_q0,
        p_read3,
        top27_address0,
        top27_ce0,
        top27_we0,
        top27_d0,
        top27_address1,
        top27_ce1,
        top27_we1,
        top27_d1,
        top27_q1,
        bottom11_address0,
        bottom11_ce0,
        bottom11_q0,
        p_read4,
        top26_address0,
        top26_ce0,
        top26_we0,
        top26_d0,
        top26_address1,
        top26_ce1,
        top26_we1,
        top26_d1,
        top26_q1,
        bottom10_address0,
        bottom10_ce0,
        bottom10_q0,
        p_read5,
        top25_address0,
        top25_ce0,
        top25_we0,
        top25_d0,
        top25_address1,
        top25_ce1,
        top25_we1,
        top25_d1,
        top25_q1,
        bottom9_address0,
        bottom9_ce0,
        bottom9_q0,
        p_read6,
        top24_address0,
        top24_ce0,
        top24_we0,
        top24_d0,
        top24_address1,
        top24_ce1,
        top24_we1,
        top24_d1,
        top24_q1,
        bottom8_address0,
        bottom8_ce0,
        bottom8_q0,
        p_read7,
        top23_address0,
        top23_ce0,
        top23_we0,
        top23_d0,
        top23_address1,
        top23_ce1,
        top23_we1,
        top23_d1,
        top23_q1,
        bottom7_address0,
        bottom7_ce0,
        bottom7_q0,
        p_read8,
        top22_address0,
        top22_ce0,
        top22_we0,
        top22_d0,
        top22_address1,
        top22_ce1,
        top22_q1,
        bottom6_address0,
        bottom6_ce0,
        bottom6_q0,
        p_read9,
        top21_address0,
        top21_ce0,
        top21_we0,
        top21_d0,
        top21_address1,
        top21_ce1,
        top21_q1,
        bottom5_address0,
        bottom5_ce0,
        bottom5_q0,
        p_read10,
        top20_address0,
        top20_ce0,
        top20_we0,
        top20_d0,
        top20_address1,
        top20_ce1,
        top20_q1,
        bottom4_address0,
        bottom4_ce0,
        bottom4_q0,
        p_read11,
        top19_address0,
        top19_ce0,
        top19_we0,
        top19_d0,
        top19_address1,
        top19_ce1,
        top19_q1,
        bottom3_address0,
        bottom3_ce0,
        bottom3_q0,
        p_read12,
        top18_address0,
        top18_ce0,
        top18_we0,
        top18_d0,
        top18_address1,
        top18_ce1,
        top18_q1,
        bottom2_address0,
        bottom2_ce0,
        bottom2_q0,
        p_read13,
        top17_address0,
        top17_ce0,
        top17_we0,
        top17_d0,
        top17_address1,
        top17_ce1,
        top17_q1,
        bottom1_address0,
        bottom1_ce0,
        bottom1_q0,
        p_read14,
        top16_address0,
        top16_ce0,
        top16_we0,
        top16_d0,
        top16_address1,
        top16_ce1,
        top16_q1,
        trunc_ln43_dout,
        trunc_ln43_empty_n,
        trunc_ln43_read,
        bottom_address0,
        bottom_ce0,
        bottom_q0,
        p_read15,
        top_address0,
        top_ce0,
        top_we0,
        top_d0,
        top_address1,
        top_ce1,
        top_q1
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state13 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [1:0] i_dout;
input   i_empty_n;
output   i_read;
output  [9:0] bottom15_address0;
output   bottom15_ce0;
input  [15:0] bottom15_q0;
input  [7:0] p_read;
output  [9:0] top30_address0;
output   top30_ce0;
output   top30_we0;
output  [15:0] top30_d0;
output  [9:0] top30_address1;
output   top30_ce1;
output   top30_we1;
output  [15:0] top30_d1;
input  [15:0] top30_q1;
output  [9:0] bottom14_address0;
output   bottom14_ce0;
input  [15:0] bottom14_q0;
input  [7:0] p_read1;
output  [9:0] top29_address0;
output   top29_ce0;
output   top29_we0;
output  [15:0] top29_d0;
output  [9:0] top29_address1;
output   top29_ce1;
output   top29_we1;
output  [15:0] top29_d1;
input  [15:0] top29_q1;
output  [9:0] bottom13_address0;
output   bottom13_ce0;
input  [15:0] bottom13_q0;
input  [7:0] p_read2;
output  [9:0] top28_address0;
output   top28_ce0;
output   top28_we0;
output  [15:0] top28_d0;
output  [9:0] top28_address1;
output   top28_ce1;
output   top28_we1;
output  [15:0] top28_d1;
input  [15:0] top28_q1;
output  [9:0] bottom12_address0;
output   bottom12_ce0;
input  [15:0] bottom12_q0;
input  [7:0] p_read3;
output  [9:0] top27_address0;
output   top27_ce0;
output   top27_we0;
output  [15:0] top27_d0;
output  [9:0] top27_address1;
output   top27_ce1;
output   top27_we1;
output  [15:0] top27_d1;
input  [15:0] top27_q1;
output  [9:0] bottom11_address0;
output   bottom11_ce0;
input  [15:0] bottom11_q0;
input  [7:0] p_read4;
output  [9:0] top26_address0;
output   top26_ce0;
output   top26_we0;
output  [15:0] top26_d0;
output  [9:0] top26_address1;
output   top26_ce1;
output   top26_we1;
output  [15:0] top26_d1;
input  [15:0] top26_q1;
output  [9:0] bottom10_address0;
output   bottom10_ce0;
input  [15:0] bottom10_q0;
input  [7:0] p_read5;
output  [9:0] top25_address0;
output   top25_ce0;
output   top25_we0;
output  [15:0] top25_d0;
output  [9:0] top25_address1;
output   top25_ce1;
output   top25_we1;
output  [15:0] top25_d1;
input  [15:0] top25_q1;
output  [9:0] bottom9_address0;
output   bottom9_ce0;
input  [15:0] bottom9_q0;
input  [7:0] p_read6;
output  [9:0] top24_address0;
output   top24_ce0;
output   top24_we0;
output  [15:0] top24_d0;
output  [9:0] top24_address1;
output   top24_ce1;
output   top24_we1;
output  [15:0] top24_d1;
input  [15:0] top24_q1;
output  [9:0] bottom8_address0;
output   bottom8_ce0;
input  [15:0] bottom8_q0;
input  [7:0] p_read7;
output  [9:0] top23_address0;
output   top23_ce0;
output   top23_we0;
output  [15:0] top23_d0;
output  [9:0] top23_address1;
output   top23_ce1;
output   top23_we1;
output  [15:0] top23_d1;
input  [15:0] top23_q1;
output  [9:0] bottom7_address0;
output   bottom7_ce0;
input  [15:0] bottom7_q0;
input  [7:0] p_read8;
output  [9:0] top22_address0;
output   top22_ce0;
output   top22_we0;
output  [15:0] top22_d0;
output  [9:0] top22_address1;
output   top22_ce1;
input  [15:0] top22_q1;
output  [9:0] bottom6_address0;
output   bottom6_ce0;
input  [15:0] bottom6_q0;
input  [7:0] p_read9;
output  [9:0] top21_address0;
output   top21_ce0;
output   top21_we0;
output  [15:0] top21_d0;
output  [9:0] top21_address1;
output   top21_ce1;
input  [15:0] top21_q1;
output  [9:0] bottom5_address0;
output   bottom5_ce0;
input  [15:0] bottom5_q0;
input  [7:0] p_read10;
output  [9:0] top20_address0;
output   top20_ce0;
output   top20_we0;
output  [15:0] top20_d0;
output  [9:0] top20_address1;
output   top20_ce1;
input  [15:0] top20_q1;
output  [9:0] bottom4_address0;
output   bottom4_ce0;
input  [15:0] bottom4_q0;
input  [7:0] p_read11;
output  [9:0] top19_address0;
output   top19_ce0;
output   top19_we0;
output  [15:0] top19_d0;
output  [9:0] top19_address1;
output   top19_ce1;
input  [15:0] top19_q1;
output  [9:0] bottom3_address0;
output   bottom3_ce0;
input  [15:0] bottom3_q0;
input  [7:0] p_read12;
output  [9:0] top18_address0;
output   top18_ce0;
output   top18_we0;
output  [15:0] top18_d0;
output  [9:0] top18_address1;
output   top18_ce1;
input  [15:0] top18_q1;
output  [9:0] bottom2_address0;
output   bottom2_ce0;
input  [15:0] bottom2_q0;
input  [7:0] p_read13;
output  [9:0] top17_address0;
output   top17_ce0;
output   top17_we0;
output  [15:0] top17_d0;
output  [9:0] top17_address1;
output   top17_ce1;
input  [15:0] top17_q1;
output  [9:0] bottom1_address0;
output   bottom1_ce0;
input  [15:0] bottom1_q0;
input  [7:0] p_read14;
output  [9:0] top16_address0;
output   top16_ce0;
output   top16_we0;
output  [15:0] top16_d0;
output  [9:0] top16_address1;
output   top16_ce1;
input  [15:0] top16_q1;
input  [1:0] trunc_ln43_dout;
input   trunc_ln43_empty_n;
output   trunc_ln43_read;
output  [9:0] bottom_address0;
output   bottom_ce0;
input  [15:0] bottom_q0;
input  [7:0] p_read15;
output  [9:0] top_address0;
output   top_ce0;
output   top_we0;
output  [15:0] top_d0;
output  [9:0] top_address1;
output   top_ce1;
input  [15:0] top_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg i_read;
reg bottom15_ce0;
reg top30_ce0;
reg top30_we0;
reg[15:0] top30_d0;
reg[9:0] top30_address1;
reg top30_ce1;
reg top30_we1;
reg bottom14_ce0;
reg top29_ce0;
reg top29_we0;
reg[15:0] top29_d0;
reg[9:0] top29_address1;
reg top29_ce1;
reg top29_we1;
reg bottom13_ce0;
reg top28_ce0;
reg top28_we0;
reg[15:0] top28_d0;
reg[9:0] top28_address1;
reg top28_ce1;
reg top28_we1;
reg bottom12_ce0;
reg top27_ce0;
reg top27_we0;
reg[15:0] top27_d0;
reg[9:0] top27_address1;
reg top27_ce1;
reg top27_we1;
reg bottom11_ce0;
reg top26_ce0;
reg top26_we0;
reg[15:0] top26_d0;
reg[9:0] top26_address1;
reg top26_ce1;
reg top26_we1;
reg bottom10_ce0;
reg top25_ce0;
reg top25_we0;
reg[15:0] top25_d0;
reg[9:0] top25_address1;
reg top25_ce1;
reg top25_we1;
reg bottom9_ce0;
reg top24_ce0;
reg top24_we0;
reg[15:0] top24_d0;
reg[9:0] top24_address1;
reg top24_ce1;
reg top24_we1;
reg bottom8_ce0;
reg top23_ce0;
reg top23_we0;
reg[15:0] top23_d0;
reg[9:0] top23_address1;
reg top23_ce1;
reg top23_we1;
reg bottom7_ce0;
reg[9:0] top22_address0;
reg top22_ce0;
reg top22_we0;
reg[15:0] top22_d0;
reg top22_ce1;
reg bottom6_ce0;
reg[9:0] top21_address0;
reg top21_ce0;
reg top21_we0;
reg[15:0] top21_d0;
reg top21_ce1;
reg bottom5_ce0;
reg[9:0] top20_address0;
reg top20_ce0;
reg top20_we0;
reg[15:0] top20_d0;
reg top20_ce1;
reg bottom4_ce0;
reg[9:0] top19_address0;
reg top19_ce0;
reg top19_we0;
reg[15:0] top19_d0;
reg top19_ce1;
reg bottom3_ce0;
reg[9:0] top18_address0;
reg top18_ce0;
reg top18_we0;
reg[15:0] top18_d0;
reg top18_ce1;
reg bottom2_ce0;
reg[9:0] top17_address0;
reg top17_ce0;
reg top17_we0;
reg[15:0] top17_d0;
reg top17_ce1;
reg bottom1_ce0;
reg[9:0] top16_address0;
reg top16_ce0;
reg top16_we0;
reg[15:0] top16_d0;
reg top16_ce1;
reg trunc_ln43_read;
reg bottom_ce0;
reg[9:0] top_address0;
reg top_ce0;
reg top_we0;
reg[15:0] top_d0;
reg top_ce1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    i_blk_n;
reg    trunc_ln43_blk_n;
reg   [9:0] indvar_flatten_reg_796;
reg   [4:0] h_reg_807;
reg   [5:0] w_reg_818;
wire  signed [23:0] r_V_78_i_fu_829_p1;
reg  signed [23:0] r_V_78_i_reg_3964;
wire  signed [23:0] r_V_76_i_fu_833_p1;
reg  signed [23:0] r_V_76_i_reg_3969;
wire  signed [23:0] r_V_74_i_fu_837_p1;
reg  signed [23:0] r_V_74_i_reg_3974;
wire  signed [23:0] r_V_72_i_fu_841_p1;
reg  signed [23:0] r_V_72_i_reg_3979;
wire  signed [23:0] r_V_70_i_fu_845_p1;
reg  signed [23:0] r_V_70_i_reg_3984;
wire  signed [23:0] r_V_68_i_fu_849_p1;
reg  signed [23:0] r_V_68_i_reg_3989;
wire  signed [23:0] r_V_66_i_fu_853_p1;
reg  signed [23:0] r_V_66_i_reg_3994;
wire  signed [23:0] r_V_64_i_fu_857_p1;
reg  signed [23:0] r_V_64_i_reg_3999;
wire  signed [23:0] r_V_62_i_fu_861_p1;
reg  signed [23:0] r_V_62_i_reg_4004;
wire  signed [23:0] r_V_60_i_fu_865_p1;
reg  signed [23:0] r_V_60_i_reg_4009;
wire  signed [23:0] r_V_58_i_fu_869_p1;
reg  signed [23:0] r_V_58_i_reg_4014;
wire  signed [23:0] r_V_56_i_fu_873_p1;
reg  signed [23:0] r_V_56_i_reg_4019;
wire  signed [23:0] r_V_54_i_fu_877_p1;
reg  signed [23:0] r_V_54_i_reg_4024;
wire  signed [23:0] r_V_52_i_fu_881_p1;
reg  signed [23:0] r_V_52_i_reg_4029;
wire  signed [23:0] r_V_50_i_fu_885_p1;
reg  signed [23:0] r_V_50_i_reg_4034;
wire  signed [23:0] r_V_i_fu_889_p1;
reg  signed [23:0] r_V_i_reg_4039;
wire  signed [4:0] p_cast_i_i_fu_899_p1;
reg  signed [4:0] p_cast_i_i_reg_4044;
wire  signed [5:0] p_cast1_i_i_fu_909_p1;
reg  signed [5:0] p_cast1_i_i_reg_4049;
wire   [9:0] add_ln45_2_fu_913_p2;
reg   [9:0] add_ln45_2_reg_4054;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state10_pp0_stage0_iter4;
wire    ap_block_state12_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln45_fu_919_p2;
reg   [0:0] icmp_ln45_reg_4059;
reg   [0:0] icmp_ln45_reg_4059_pp0_iter1_reg;
reg   [0:0] icmp_ln45_reg_4059_pp0_iter2_reg;
reg   [0:0] icmp_ln45_reg_4059_pp0_iter3_reg;
wire   [5:0] select_ln45_fu_937_p3;
reg   [5:0] select_ln45_reg_4063;
reg   [5:0] select_ln45_reg_4063_pp0_iter1_reg;
wire   [4:0] select_ln45_1_fu_945_p3;
reg   [4:0] select_ln45_1_reg_4070;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state7_pp0_stage1_iter2;
wire    ap_block_state9_pp0_stage1_iter3;
wire    ap_block_state11_pp0_stage1_iter4;
wire    ap_block_pp0_stage1_11001;
wire   [5:0] add_ln46_fu_965_p2;
reg   [5:0] add_ln46_reg_4086;
wire   [9:0] grp_fu_3844_p3;
reg   [9:0] add_ln727_reg_4181;
reg    ap_enable_reg_pp0_iter2;
reg  signed [15:0] bottom8_load_reg_4226;
reg  signed [15:0] bottom9_load_reg_4231;
reg  signed [15:0] bottom10_load_reg_4236;
reg  signed [15:0] bottom11_load_reg_4241;
reg  signed [15:0] bottom12_load_reg_4246;
reg  signed [15:0] bottom13_load_reg_4251;
reg  signed [15:0] bottom14_load_reg_4256;
reg  signed [15:0] bottom15_load_reg_4261;
reg   [9:0] top30_addr_reg_4306;
reg   [9:0] top30_addr_reg_4306_pp0_iter4_reg;
reg   [9:0] top29_addr_reg_4312;
reg   [9:0] top29_addr_reg_4312_pp0_iter4_reg;
reg   [9:0] top28_addr_reg_4318;
reg   [9:0] top28_addr_reg_4318_pp0_iter4_reg;
reg   [9:0] top27_addr_reg_4324;
reg   [9:0] top27_addr_reg_4324_pp0_iter4_reg;
reg   [9:0] top26_addr_reg_4330;
reg   [9:0] top26_addr_reg_4330_pp0_iter4_reg;
reg   [9:0] top25_addr_reg_4336;
reg   [9:0] top25_addr_reg_4336_pp0_iter4_reg;
reg   [9:0] top24_addr_reg_4342;
reg   [9:0] top24_addr_reg_4342_pp0_iter4_reg;
reg   [9:0] top23_addr_reg_4348;
reg   [9:0] top23_addr_reg_4348_pp0_iter4_reg;
reg   [9:0] top22_addr_reg_4354;
reg   [9:0] top22_addr_reg_4354_pp0_iter4_reg;
reg   [9:0] top21_addr_reg_4360;
reg   [9:0] top21_addr_reg_4360_pp0_iter4_reg;
reg   [9:0] top20_addr_reg_4366;
reg   [9:0] top20_addr_reg_4366_pp0_iter4_reg;
reg   [9:0] top19_addr_reg_4372;
reg   [9:0] top19_addr_reg_4372_pp0_iter4_reg;
reg   [9:0] top18_addr_reg_4378;
reg   [9:0] top18_addr_reg_4378_pp0_iter4_reg;
reg   [9:0] top17_addr_reg_4384;
reg   [9:0] top17_addr_reg_4384_pp0_iter4_reg;
reg   [9:0] top16_addr_reg_4390;
reg   [9:0] top16_addr_reg_4390_pp0_iter4_reg;
reg   [9:0] top_addr_reg_4396;
reg   [9:0] top_addr_reg_4396_pp0_iter4_reg;
wire   [15:0] p_Val2_54_fu_1137_p2;
reg   [15:0] p_Val2_54_reg_4402;
wire   [0:0] overflow_fu_1213_p2;
reg   [0:0] overflow_reg_4407;
wire   [0:0] underflow_fu_1237_p2;
reg   [0:0] underflow_reg_4412;
wire   [15:0] p_Val2_57_fu_1305_p2;
reg   [15:0] p_Val2_57_reg_4417;
wire   [0:0] overflow_12_fu_1381_p2;
reg   [0:0] overflow_12_reg_4422;
wire   [0:0] underflow_12_fu_1405_p2;
reg   [0:0] underflow_12_reg_4427;
wire   [15:0] p_Val2_60_fu_1473_p2;
reg   [15:0] p_Val2_60_reg_4432;
wire   [0:0] overflow_13_fu_1549_p2;
reg   [0:0] overflow_13_reg_4437;
wire   [0:0] underflow_13_fu_1573_p2;
reg   [0:0] underflow_13_reg_4442;
wire   [15:0] p_Val2_63_fu_1641_p2;
reg   [15:0] p_Val2_63_reg_4447;
wire   [0:0] overflow_14_fu_1717_p2;
reg   [0:0] overflow_14_reg_4452;
wire   [0:0] underflow_14_fu_1741_p2;
reg   [0:0] underflow_14_reg_4457;
wire   [15:0] p_Val2_66_fu_1809_p2;
reg   [15:0] p_Val2_66_reg_4462;
wire   [0:0] overflow_15_fu_1885_p2;
reg   [0:0] overflow_15_reg_4467;
wire   [0:0] underflow_15_fu_1909_p2;
reg   [0:0] underflow_15_reg_4472;
wire   [15:0] p_Val2_69_fu_1977_p2;
reg   [15:0] p_Val2_69_reg_4477;
wire   [0:0] overflow_16_fu_2053_p2;
reg   [0:0] overflow_16_reg_4482;
wire   [0:0] underflow_16_fu_2077_p2;
reg   [0:0] underflow_16_reg_4487;
wire   [15:0] p_Val2_72_fu_2145_p2;
reg   [15:0] p_Val2_72_reg_4492;
wire   [0:0] overflow_17_fu_2221_p2;
reg   [0:0] overflow_17_reg_4497;
wire   [0:0] underflow_17_fu_2245_p2;
reg   [0:0] underflow_17_reg_4502;
wire   [15:0] p_Val2_75_fu_2313_p2;
reg   [15:0] p_Val2_75_reg_4507;
wire   [0:0] overflow_18_fu_2389_p2;
reg   [0:0] overflow_18_reg_4512;
wire   [0:0] underflow_18_fu_2413_p2;
reg   [0:0] underflow_18_reg_4517;
reg   [15:0] lhs_16_reg_4522;
reg    ap_enable_reg_pp0_iter3;
reg   [15:0] lhs_18_reg_4527;
reg   [15:0] lhs_20_reg_4532;
reg   [15:0] lhs_22_reg_4537;
reg   [15:0] lhs_24_reg_4542;
reg   [15:0] lhs_26_reg_4547;
reg   [15:0] lhs_28_reg_4552;
reg   [15:0] lhs_30_reg_4557;
wire   [0:0] or_ln340_fu_2419_p2;
reg   [0:0] or_ln340_reg_4562;
wire   [0:0] or_ln340_8_fu_2423_p2;
reg   [0:0] or_ln340_8_reg_4566;
wire   [0:0] or_ln340_9_fu_2427_p2;
reg   [0:0] or_ln340_9_reg_4570;
wire   [0:0] or_ln340_10_fu_2431_p2;
reg   [0:0] or_ln340_10_reg_4574;
wire   [0:0] or_ln340_11_fu_2435_p2;
reg   [0:0] or_ln340_11_reg_4578;
wire   [0:0] or_ln340_12_fu_2439_p2;
reg   [0:0] or_ln340_12_reg_4582;
wire   [0:0] or_ln340_13_fu_2443_p2;
reg   [0:0] or_ln340_13_reg_4586;
wire   [0:0] or_ln340_14_fu_2447_p2;
reg   [0:0] or_ln340_14_reg_4590;
wire   [15:0] p_Val2_78_fu_2512_p2;
reg   [15:0] p_Val2_78_reg_4594;
wire   [0:0] overflow_19_fu_2588_p2;
reg   [0:0] overflow_19_reg_4599;
wire   [0:0] underflow_19_fu_2612_p2;
reg   [0:0] underflow_19_reg_4603;
wire   [0:0] or_ln340_15_fu_2618_p2;
reg   [0:0] or_ln340_15_reg_4607;
wire   [15:0] p_Val2_81_fu_2685_p2;
reg   [15:0] p_Val2_81_reg_4611;
wire   [0:0] overflow_20_fu_2761_p2;
reg   [0:0] overflow_20_reg_4616;
wire   [0:0] underflow_20_fu_2785_p2;
reg   [0:0] underflow_20_reg_4620;
wire   [0:0] or_ln340_16_fu_2791_p2;
reg   [0:0] or_ln340_16_reg_4624;
wire   [15:0] p_Val2_84_fu_2858_p2;
reg   [15:0] p_Val2_84_reg_4628;
wire   [0:0] overflow_21_fu_2934_p2;
reg   [0:0] overflow_21_reg_4633;
wire   [0:0] underflow_21_fu_2958_p2;
reg   [0:0] underflow_21_reg_4637;
wire   [0:0] or_ln340_17_fu_2964_p2;
reg   [0:0] or_ln340_17_reg_4641;
wire   [15:0] p_Val2_87_fu_3031_p2;
reg   [15:0] p_Val2_87_reg_4645;
wire   [0:0] overflow_22_fu_3107_p2;
reg   [0:0] overflow_22_reg_4650;
wire   [0:0] underflow_22_fu_3131_p2;
reg   [0:0] underflow_22_reg_4654;
wire   [0:0] or_ln340_18_fu_3137_p2;
reg   [0:0] or_ln340_18_reg_4658;
wire   [15:0] p_Val2_90_fu_3204_p2;
reg   [15:0] p_Val2_90_reg_4662;
wire   [0:0] overflow_23_fu_3280_p2;
reg   [0:0] overflow_23_reg_4667;
wire   [0:0] underflow_23_fu_3304_p2;
reg   [0:0] underflow_23_reg_4671;
wire   [0:0] or_ln340_19_fu_3310_p2;
reg   [0:0] or_ln340_19_reg_4675;
wire   [15:0] p_Val2_93_fu_3377_p2;
reg   [15:0] p_Val2_93_reg_4679;
wire   [0:0] overflow_24_fu_3453_p2;
reg   [0:0] overflow_24_reg_4684;
wire   [0:0] underflow_24_fu_3477_p2;
reg   [0:0] underflow_24_reg_4688;
wire   [0:0] or_ln340_20_fu_3483_p2;
reg   [0:0] or_ln340_20_reg_4692;
wire   [15:0] p_Val2_96_fu_3550_p2;
reg   [15:0] p_Val2_96_reg_4696;
wire   [0:0] overflow_25_fu_3626_p2;
reg   [0:0] overflow_25_reg_4701;
wire   [0:0] underflow_25_fu_3650_p2;
reg   [0:0] underflow_25_reg_4705;
wire   [0:0] or_ln340_21_fu_3656_p2;
reg   [0:0] or_ln340_21_reg_4709;
wire   [15:0] p_Val2_99_fu_3723_p2;
reg   [15:0] p_Val2_99_reg_4713;
wire   [0:0] overflow_26_fu_3799_p2;
reg   [0:0] overflow_26_reg_4718;
wire   [0:0] underflow_26_fu_3823_p2;
reg   [0:0] underflow_26_reg_4722;
wire   [0:0] or_ln340_22_fu_3829_p2;
reg   [0:0] or_ln340_22_reg_4726;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg   [9:0] ap_phi_mux_indvar_flatten_phi_fu_800_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_h_phi_fu_811_p4;
reg   [5:0] ap_phi_mux_w_phi_fu_822_p4;
wire   [63:0] zext_ln1118_1_fu_981_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln727_1_fu_1056_p1;
wire   [1:0] empty_fu_893_p2;
wire   [1:0] empty_923_fu_903_p2;
wire   [0:0] icmp_ln46_fu_931_p2;
wire   [4:0] add_ln45_fu_925_p2;
wire   [4:0] add_ln45_1_fu_953_p2;
wire   [5:0] empty_925_fu_970_p2;
wire   [9:0] grp_fu_3835_p3;
wire   [22:0] lhs_1_fu_1075_p3;
wire  signed [23:0] grp_fu_3852_p2;
wire  signed [23:0] sext_ln1192_fu_1083_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_fu_1087_p2;
wire   [6:0] trunc_ln414_fu_1118_p1;
wire   [0:0] p_Result_s_fu_1092_p3;
wire   [0:0] icmp_ln414_fu_1121_p2;
wire   [0:0] and_ln414_fu_1127_p2;
wire   [15:0] p_Val2_53_fu_1100_p4;
wire   [15:0] zext_ln415_fu_1133_p1;
wire   [0:0] p_Result_143_fu_1143_p3;
wire   [0:0] p_Result_142_fu_1110_p3;
wire   [0:0] xor_ln778_fu_1165_p2;
wire   [0:0] Range2_all_ones_fu_1157_p3;
wire   [0:0] xor_ln416_fu_1151_p2;
wire   [0:0] and_ln781_16_fu_1177_p2;
wire   [0:0] or_ln778_fu_1171_p2;
wire   [0:0] xor_ln785_43_fu_1189_p2;
wire   [0:0] xor_ln785_fu_1195_p2;
wire   [0:0] or_ln785_fu_1201_p2;
wire   [0:0] xor_ln785_12_fu_1207_p2;
wire   [0:0] and_ln781_fu_1183_p2;
wire   [0:0] and_ln786_fu_1219_p2;
wire   [0:0] or_ln786_fu_1225_p2;
wire   [0:0] xor_ln786_fu_1231_p2;
wire   [22:0] lhs_3_fu_1243_p3;
wire  signed [23:0] grp_fu_3859_p2;
wire  signed [23:0] sext_ln1192_4_fu_1251_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_28_fu_1255_p2;
wire   [6:0] trunc_ln414_1_fu_1286_p1;
wire   [0:0] p_Result_186_fu_1260_p3;
wire   [0:0] icmp_ln414_1_fu_1289_p2;
wire   [0:0] and_ln414_1_fu_1295_p2;
wire   [15:0] p_Val2_56_fu_1268_p4;
wire   [15:0] zext_ln415_1_fu_1301_p1;
wire   [0:0] p_Result_188_fu_1311_p3;
wire   [0:0] p_Result_187_fu_1278_p3;
wire   [0:0] xor_ln778_1_fu_1333_p2;
wire   [0:0] Range2_all_ones_17_fu_1325_p3;
wire   [0:0] xor_ln416_1_fu_1319_p2;
wire   [0:0] and_ln781_17_fu_1345_p2;
wire   [0:0] or_ln778_1_fu_1339_p2;
wire   [0:0] xor_ln785_44_fu_1357_p2;
wire   [0:0] xor_ln785_13_fu_1363_p2;
wire   [0:0] or_ln785_4_fu_1369_p2;
wire   [0:0] xor_ln785_14_fu_1375_p2;
wire   [0:0] and_ln781_1_fu_1351_p2;
wire   [0:0] and_ln786_2_fu_1387_p2;
wire   [0:0] or_ln786_6_fu_1393_p2;
wire   [0:0] xor_ln786_8_fu_1399_p2;
wire   [22:0] lhs_5_fu_1411_p3;
wire  signed [23:0] grp_fu_3866_p2;
wire  signed [23:0] sext_ln1192_5_fu_1419_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_27_fu_1423_p2;
wire   [6:0] trunc_ln414_2_fu_1454_p1;
wire   [0:0] p_Result_183_fu_1428_p3;
wire   [0:0] icmp_ln414_2_fu_1457_p2;
wire   [0:0] and_ln414_2_fu_1463_p2;
wire   [15:0] p_Val2_59_fu_1436_p4;
wire   [15:0] zext_ln415_2_fu_1469_p1;
wire   [0:0] p_Result_185_fu_1479_p3;
wire   [0:0] p_Result_184_fu_1446_p3;
wire   [0:0] xor_ln778_2_fu_1501_p2;
wire   [0:0] Range2_all_ones_16_fu_1493_p3;
wire   [0:0] xor_ln416_2_fu_1487_p2;
wire   [0:0] and_ln781_18_fu_1513_p2;
wire   [0:0] or_ln778_2_fu_1507_p2;
wire   [0:0] xor_ln785_45_fu_1525_p2;
wire   [0:0] xor_ln785_15_fu_1531_p2;
wire   [0:0] or_ln785_5_fu_1537_p2;
wire   [0:0] xor_ln785_16_fu_1543_p2;
wire   [0:0] and_ln781_2_fu_1519_p2;
wire   [0:0] and_ln786_4_fu_1555_p2;
wire   [0:0] or_ln786_7_fu_1561_p2;
wire   [0:0] xor_ln786_9_fu_1567_p2;
wire   [22:0] lhs_7_fu_1579_p3;
wire  signed [23:0] grp_fu_3873_p2;
wire  signed [23:0] sext_ln1192_6_fu_1587_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_26_fu_1591_p2;
wire   [6:0] trunc_ln414_3_fu_1622_p1;
wire   [0:0] p_Result_180_fu_1596_p3;
wire   [0:0] icmp_ln414_3_fu_1625_p2;
wire   [0:0] and_ln414_3_fu_1631_p2;
wire   [15:0] p_Val2_62_fu_1604_p4;
wire   [15:0] zext_ln415_3_fu_1637_p1;
wire   [0:0] p_Result_182_fu_1647_p3;
wire   [0:0] p_Result_181_fu_1614_p3;
wire   [0:0] xor_ln778_3_fu_1669_p2;
wire   [0:0] Range2_all_ones_15_fu_1661_p3;
wire   [0:0] xor_ln416_3_fu_1655_p2;
wire   [0:0] and_ln781_19_fu_1681_p2;
wire   [0:0] or_ln778_3_fu_1675_p2;
wire   [0:0] xor_ln785_46_fu_1693_p2;
wire   [0:0] xor_ln785_17_fu_1699_p2;
wire   [0:0] or_ln785_6_fu_1705_p2;
wire   [0:0] xor_ln785_18_fu_1711_p2;
wire   [0:0] and_ln781_3_fu_1687_p2;
wire   [0:0] and_ln786_6_fu_1723_p2;
wire   [0:0] or_ln786_8_fu_1729_p2;
wire   [0:0] xor_ln786_10_fu_1735_p2;
wire   [22:0] lhs_9_fu_1747_p3;
wire  signed [23:0] grp_fu_3880_p2;
wire  signed [23:0] sext_ln1192_7_fu_1755_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_25_fu_1759_p2;
wire   [6:0] trunc_ln414_4_fu_1790_p1;
wire   [0:0] p_Result_177_fu_1764_p3;
wire   [0:0] icmp_ln414_4_fu_1793_p2;
wire   [0:0] and_ln414_4_fu_1799_p2;
wire   [15:0] p_Val2_65_fu_1772_p4;
wire   [15:0] zext_ln415_4_fu_1805_p1;
wire   [0:0] p_Result_179_fu_1815_p3;
wire   [0:0] p_Result_178_fu_1782_p3;
wire   [0:0] xor_ln778_4_fu_1837_p2;
wire   [0:0] Range2_all_ones_14_fu_1829_p3;
wire   [0:0] xor_ln416_4_fu_1823_p2;
wire   [0:0] and_ln781_20_fu_1849_p2;
wire   [0:0] or_ln778_4_fu_1843_p2;
wire   [0:0] xor_ln785_47_fu_1861_p2;
wire   [0:0] xor_ln785_19_fu_1867_p2;
wire   [0:0] or_ln785_7_fu_1873_p2;
wire   [0:0] xor_ln785_20_fu_1879_p2;
wire   [0:0] and_ln781_4_fu_1855_p2;
wire   [0:0] and_ln786_8_fu_1891_p2;
wire   [0:0] or_ln786_9_fu_1897_p2;
wire   [0:0] xor_ln786_11_fu_1903_p2;
wire   [22:0] lhs_11_fu_1915_p3;
wire  signed [23:0] grp_fu_3887_p2;
wire  signed [23:0] sext_ln1192_8_fu_1923_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_24_fu_1927_p2;
wire   [6:0] trunc_ln414_5_fu_1958_p1;
wire   [0:0] p_Result_174_fu_1932_p3;
wire   [0:0] icmp_ln414_5_fu_1961_p2;
wire   [0:0] and_ln414_5_fu_1967_p2;
wire   [15:0] p_Val2_68_fu_1940_p4;
wire   [15:0] zext_ln415_5_fu_1973_p1;
wire   [0:0] p_Result_176_fu_1983_p3;
wire   [0:0] p_Result_175_fu_1950_p3;
wire   [0:0] xor_ln778_5_fu_2005_p2;
wire   [0:0] Range2_all_ones_13_fu_1997_p3;
wire   [0:0] xor_ln416_5_fu_1991_p2;
wire   [0:0] and_ln781_21_fu_2017_p2;
wire   [0:0] or_ln778_5_fu_2011_p2;
wire   [0:0] xor_ln785_48_fu_2029_p2;
wire   [0:0] xor_ln785_21_fu_2035_p2;
wire   [0:0] or_ln785_8_fu_2041_p2;
wire   [0:0] xor_ln785_22_fu_2047_p2;
wire   [0:0] and_ln781_5_fu_2023_p2;
wire   [0:0] and_ln786_10_fu_2059_p2;
wire   [0:0] or_ln786_10_fu_2065_p2;
wire   [0:0] xor_ln786_12_fu_2071_p2;
wire   [22:0] lhs_13_fu_2083_p3;
wire  signed [23:0] grp_fu_3894_p2;
wire  signed [23:0] sext_ln1192_9_fu_2091_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_23_fu_2095_p2;
wire   [6:0] trunc_ln414_6_fu_2126_p1;
wire   [0:0] p_Result_171_fu_2100_p3;
wire   [0:0] icmp_ln414_6_fu_2129_p2;
wire   [0:0] and_ln414_6_fu_2135_p2;
wire   [15:0] p_Val2_71_fu_2108_p4;
wire   [15:0] zext_ln415_6_fu_2141_p1;
wire   [0:0] p_Result_173_fu_2151_p3;
wire   [0:0] p_Result_172_fu_2118_p3;
wire   [0:0] xor_ln778_6_fu_2173_p2;
wire   [0:0] Range2_all_ones_12_fu_2165_p3;
wire   [0:0] xor_ln416_6_fu_2159_p2;
wire   [0:0] and_ln781_22_fu_2185_p2;
wire   [0:0] or_ln778_6_fu_2179_p2;
wire   [0:0] xor_ln785_49_fu_2197_p2;
wire   [0:0] xor_ln785_23_fu_2203_p2;
wire   [0:0] or_ln785_9_fu_2209_p2;
wire   [0:0] xor_ln785_24_fu_2215_p2;
wire   [0:0] and_ln781_6_fu_2191_p2;
wire   [0:0] and_ln786_12_fu_2227_p2;
wire   [0:0] or_ln786_11_fu_2233_p2;
wire   [0:0] xor_ln786_13_fu_2239_p2;
wire   [22:0] lhs_15_fu_2251_p3;
wire  signed [23:0] grp_fu_3901_p2;
wire  signed [23:0] sext_ln1192_10_fu_2259_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_22_fu_2263_p2;
wire   [6:0] trunc_ln414_7_fu_2294_p1;
wire   [0:0] p_Result_168_fu_2268_p3;
wire   [0:0] icmp_ln414_7_fu_2297_p2;
wire   [0:0] and_ln414_7_fu_2303_p2;
wire   [15:0] p_Val2_74_fu_2276_p4;
wire   [15:0] zext_ln415_7_fu_2309_p1;
wire   [0:0] p_Result_170_fu_2319_p3;
wire   [0:0] p_Result_169_fu_2286_p3;
wire   [0:0] xor_ln778_7_fu_2341_p2;
wire   [0:0] Range2_all_ones_11_fu_2333_p3;
wire   [0:0] xor_ln416_7_fu_2327_p2;
wire   [0:0] and_ln781_23_fu_2353_p2;
wire   [0:0] or_ln778_7_fu_2347_p2;
wire   [0:0] xor_ln785_50_fu_2365_p2;
wire   [0:0] xor_ln785_25_fu_2371_p2;
wire   [0:0] or_ln785_10_fu_2377_p2;
wire   [0:0] xor_ln785_26_fu_2383_p2;
wire   [0:0] and_ln781_7_fu_2359_p2;
wire   [0:0] and_ln786_14_fu_2395_p2;
wire   [0:0] or_ln786_12_fu_2401_p2;
wire   [0:0] xor_ln786_14_fu_2407_p2;
wire   [22:0] lhs_17_fu_2451_p3;
wire  signed [23:0] grp_fu_3908_p2;
wire  signed [23:0] sext_ln1192_11_fu_2458_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_21_fu_2462_p2;
wire   [6:0] trunc_ln414_8_fu_2493_p1;
wire   [0:0] p_Result_165_fu_2467_p3;
wire   [0:0] icmp_ln414_8_fu_2496_p2;
wire   [0:0] and_ln414_8_fu_2502_p2;
wire   [15:0] p_Val2_77_fu_2475_p4;
wire   [15:0] zext_ln415_8_fu_2508_p1;
wire   [0:0] p_Result_167_fu_2518_p3;
wire   [0:0] p_Result_166_fu_2485_p3;
wire   [0:0] xor_ln778_8_fu_2540_p2;
wire   [0:0] Range2_all_ones_10_fu_2532_p3;
wire   [0:0] xor_ln416_8_fu_2526_p2;
wire   [0:0] and_ln781_24_fu_2552_p2;
wire   [0:0] or_ln778_8_fu_2546_p2;
wire   [0:0] xor_ln785_51_fu_2564_p2;
wire   [0:0] xor_ln785_27_fu_2570_p2;
wire   [0:0] or_ln785_11_fu_2576_p2;
wire   [0:0] xor_ln785_28_fu_2582_p2;
wire   [0:0] and_ln781_8_fu_2558_p2;
wire   [0:0] and_ln786_16_fu_2594_p2;
wire   [0:0] or_ln786_13_fu_2600_p2;
wire   [0:0] xor_ln786_15_fu_2606_p2;
wire   [22:0] lhs_19_fu_2624_p3;
wire  signed [23:0] grp_fu_3915_p2;
wire  signed [23:0] sext_ln1192_12_fu_2631_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_20_fu_2635_p2;
wire   [6:0] trunc_ln414_9_fu_2666_p1;
wire   [0:0] p_Result_162_fu_2640_p3;
wire   [0:0] icmp_ln414_9_fu_2669_p2;
wire   [0:0] and_ln414_9_fu_2675_p2;
wire   [15:0] p_Val2_80_fu_2648_p4;
wire   [15:0] zext_ln415_9_fu_2681_p1;
wire   [0:0] p_Result_164_fu_2691_p3;
wire   [0:0] p_Result_163_fu_2658_p3;
wire   [0:0] xor_ln778_9_fu_2713_p2;
wire   [0:0] Range2_all_ones_9_fu_2705_p3;
wire   [0:0] xor_ln416_9_fu_2699_p2;
wire   [0:0] and_ln781_25_fu_2725_p2;
wire   [0:0] or_ln778_9_fu_2719_p2;
wire   [0:0] xor_ln785_52_fu_2737_p2;
wire   [0:0] xor_ln785_29_fu_2743_p2;
wire   [0:0] or_ln785_12_fu_2749_p2;
wire   [0:0] xor_ln785_30_fu_2755_p2;
wire   [0:0] and_ln781_9_fu_2731_p2;
wire   [0:0] and_ln786_18_fu_2767_p2;
wire   [0:0] or_ln786_14_fu_2773_p2;
wire   [0:0] xor_ln786_16_fu_2779_p2;
wire   [22:0] lhs_21_fu_2797_p3;
wire  signed [23:0] grp_fu_3922_p2;
wire  signed [23:0] sext_ln1192_13_fu_2804_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_19_fu_2808_p2;
wire   [6:0] trunc_ln414_10_fu_2839_p1;
wire   [0:0] p_Result_159_fu_2813_p3;
wire   [0:0] icmp_ln414_10_fu_2842_p2;
wire   [0:0] and_ln414_10_fu_2848_p2;
wire   [15:0] p_Val2_83_fu_2821_p4;
wire   [15:0] zext_ln415_10_fu_2854_p1;
wire   [0:0] p_Result_161_fu_2864_p3;
wire   [0:0] p_Result_160_fu_2831_p3;
wire   [0:0] xor_ln778_10_fu_2886_p2;
wire   [0:0] Range2_all_ones_8_fu_2878_p3;
wire   [0:0] xor_ln416_10_fu_2872_p2;
wire   [0:0] and_ln781_26_fu_2898_p2;
wire   [0:0] or_ln778_10_fu_2892_p2;
wire   [0:0] xor_ln785_53_fu_2910_p2;
wire   [0:0] xor_ln785_31_fu_2916_p2;
wire   [0:0] or_ln785_13_fu_2922_p2;
wire   [0:0] xor_ln785_32_fu_2928_p2;
wire   [0:0] and_ln781_10_fu_2904_p2;
wire   [0:0] and_ln786_20_fu_2940_p2;
wire   [0:0] or_ln786_15_fu_2946_p2;
wire   [0:0] xor_ln786_17_fu_2952_p2;
wire   [22:0] lhs_23_fu_2970_p3;
wire  signed [23:0] grp_fu_3929_p2;
wire  signed [23:0] sext_ln1192_14_fu_2977_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_18_fu_2981_p2;
wire   [6:0] trunc_ln414_11_fu_3012_p1;
wire   [0:0] p_Result_156_fu_2986_p3;
wire   [0:0] icmp_ln414_11_fu_3015_p2;
wire   [0:0] and_ln414_11_fu_3021_p2;
wire   [15:0] p_Val2_86_fu_2994_p4;
wire   [15:0] zext_ln415_11_fu_3027_p1;
wire   [0:0] p_Result_158_fu_3037_p3;
wire   [0:0] p_Result_157_fu_3004_p3;
wire   [0:0] xor_ln778_11_fu_3059_p2;
wire   [0:0] Range2_all_ones_7_fu_3051_p3;
wire   [0:0] xor_ln416_11_fu_3045_p2;
wire   [0:0] and_ln781_27_fu_3071_p2;
wire   [0:0] or_ln778_11_fu_3065_p2;
wire   [0:0] xor_ln785_54_fu_3083_p2;
wire   [0:0] xor_ln785_33_fu_3089_p2;
wire   [0:0] or_ln785_14_fu_3095_p2;
wire   [0:0] xor_ln785_34_fu_3101_p2;
wire   [0:0] and_ln781_11_fu_3077_p2;
wire   [0:0] and_ln786_22_fu_3113_p2;
wire   [0:0] or_ln786_16_fu_3119_p2;
wire   [0:0] xor_ln786_18_fu_3125_p2;
wire   [22:0] lhs_25_fu_3143_p3;
wire  signed [23:0] grp_fu_3936_p2;
wire  signed [23:0] sext_ln1192_15_fu_3150_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_17_fu_3154_p2;
wire   [6:0] trunc_ln414_12_fu_3185_p1;
wire   [0:0] p_Result_153_fu_3159_p3;
wire   [0:0] icmp_ln414_12_fu_3188_p2;
wire   [0:0] and_ln414_12_fu_3194_p2;
wire   [15:0] p_Val2_89_fu_3167_p4;
wire   [15:0] zext_ln415_12_fu_3200_p1;
wire   [0:0] p_Result_155_fu_3210_p3;
wire   [0:0] p_Result_154_fu_3177_p3;
wire   [0:0] xor_ln778_12_fu_3232_p2;
wire   [0:0] Range2_all_ones_6_fu_3224_p3;
wire   [0:0] xor_ln416_12_fu_3218_p2;
wire   [0:0] and_ln781_28_fu_3244_p2;
wire   [0:0] or_ln778_12_fu_3238_p2;
wire   [0:0] xor_ln785_55_fu_3256_p2;
wire   [0:0] xor_ln785_35_fu_3262_p2;
wire   [0:0] or_ln785_15_fu_3268_p2;
wire   [0:0] xor_ln785_36_fu_3274_p2;
wire   [0:0] and_ln781_12_fu_3250_p2;
wire   [0:0] and_ln786_24_fu_3286_p2;
wire   [0:0] or_ln786_17_fu_3292_p2;
wire   [0:0] xor_ln786_19_fu_3298_p2;
wire   [22:0] lhs_27_fu_3316_p3;
wire  signed [23:0] grp_fu_3943_p2;
wire  signed [23:0] sext_ln1192_16_fu_3323_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_16_fu_3327_p2;
wire   [6:0] trunc_ln414_13_fu_3358_p1;
wire   [0:0] p_Result_150_fu_3332_p3;
wire   [0:0] icmp_ln414_13_fu_3361_p2;
wire   [0:0] and_ln414_13_fu_3367_p2;
wire   [15:0] p_Val2_92_fu_3340_p4;
wire   [15:0] zext_ln415_13_fu_3373_p1;
wire   [0:0] p_Result_152_fu_3383_p3;
wire   [0:0] p_Result_151_fu_3350_p3;
wire   [0:0] xor_ln778_13_fu_3405_p2;
wire   [0:0] Range2_all_ones_5_fu_3397_p3;
wire   [0:0] xor_ln416_13_fu_3391_p2;
wire   [0:0] and_ln781_29_fu_3417_p2;
wire   [0:0] or_ln778_13_fu_3411_p2;
wire   [0:0] xor_ln785_56_fu_3429_p2;
wire   [0:0] xor_ln785_37_fu_3435_p2;
wire   [0:0] or_ln785_16_fu_3441_p2;
wire   [0:0] xor_ln785_38_fu_3447_p2;
wire   [0:0] and_ln781_13_fu_3423_p2;
wire   [0:0] and_ln786_26_fu_3459_p2;
wire   [0:0] or_ln786_18_fu_3465_p2;
wire   [0:0] xor_ln786_20_fu_3471_p2;
wire   [22:0] lhs_29_fu_3489_p3;
wire  signed [23:0] grp_fu_3950_p2;
wire  signed [23:0] sext_ln1192_17_fu_3496_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_15_fu_3500_p2;
wire   [6:0] trunc_ln414_14_fu_3531_p1;
wire   [0:0] p_Result_147_fu_3505_p3;
wire   [0:0] icmp_ln414_14_fu_3534_p2;
wire   [0:0] and_ln414_14_fu_3540_p2;
wire   [15:0] p_Val2_95_fu_3513_p4;
wire   [15:0] zext_ln415_14_fu_3546_p1;
wire   [0:0] p_Result_149_fu_3556_p3;
wire   [0:0] p_Result_148_fu_3523_p3;
wire   [0:0] xor_ln778_14_fu_3578_p2;
wire   [0:0] Range2_all_ones_4_fu_3570_p3;
wire   [0:0] xor_ln416_14_fu_3564_p2;
wire   [0:0] and_ln781_30_fu_3590_p2;
wire   [0:0] or_ln778_14_fu_3584_p2;
wire   [0:0] xor_ln785_57_fu_3602_p2;
wire   [0:0] xor_ln785_39_fu_3608_p2;
wire   [0:0] or_ln785_17_fu_3614_p2;
wire   [0:0] xor_ln785_40_fu_3620_p2;
wire   [0:0] and_ln781_14_fu_3596_p2;
wire   [0:0] and_ln786_28_fu_3632_p2;
wire   [0:0] or_ln786_19_fu_3638_p2;
wire   [0:0] xor_ln786_21_fu_3644_p2;
wire   [22:0] lhs_31_fu_3662_p3;
wire  signed [23:0] grp_fu_3957_p2;
wire  signed [23:0] sext_ln1192_18_fu_3669_p1;
(* use_dsp48 = "no" *) wire   [23:0] ret_V_14_fu_3673_p2;
wire   [6:0] trunc_ln414_15_fu_3704_p1;
wire   [0:0] p_Result_144_fu_3678_p3;
wire   [0:0] icmp_ln414_15_fu_3707_p2;
wire   [0:0] and_ln414_15_fu_3713_p2;
wire   [15:0] p_Val2_98_fu_3686_p4;
wire   [15:0] zext_ln415_15_fu_3719_p1;
wire   [0:0] p_Result_146_fu_3729_p3;
wire   [0:0] p_Result_145_fu_3696_p3;
wire   [0:0] xor_ln778_15_fu_3751_p2;
wire   [0:0] Range2_all_ones_3_fu_3743_p3;
wire   [0:0] xor_ln416_15_fu_3737_p2;
wire   [0:0] and_ln781_31_fu_3763_p2;
wire   [0:0] or_ln778_15_fu_3757_p2;
wire   [0:0] xor_ln785_58_fu_3775_p2;
wire   [0:0] xor_ln785_41_fu_3781_p2;
wire   [0:0] or_ln785_18_fu_3787_p2;
wire   [0:0] xor_ln785_42_fu_3793_p2;
wire   [0:0] and_ln781_15_fu_3769_p2;
wire   [0:0] and_ln786_30_fu_3805_p2;
wire   [0:0] or_ln786_20_fu_3811_p2;
wire   [0:0] xor_ln786_22_fu_3817_p2;
wire   [4:0] grp_fu_3835_p0;
wire   [6:0] grp_fu_3835_p1;
wire   [5:0] grp_fu_3835_p2;
wire   [4:0] grp_fu_3844_p0;
wire   [6:0] grp_fu_3844_p1;
wire   [5:0] grp_fu_3844_p2;
wire  signed [7:0] grp_fu_3852_p1;
wire  signed [7:0] grp_fu_3859_p1;
wire  signed [7:0] grp_fu_3866_p1;
wire  signed [7:0] grp_fu_3873_p1;
wire  signed [7:0] grp_fu_3880_p1;
wire  signed [7:0] grp_fu_3887_p1;
wire  signed [7:0] grp_fu_3894_p1;
wire  signed [7:0] grp_fu_3901_p1;
wire  signed [7:0] grp_fu_3908_p1;
wire  signed [7:0] grp_fu_3915_p1;
wire  signed [7:0] grp_fu_3922_p1;
wire  signed [7:0] grp_fu_3929_p1;
wire  signed [7:0] grp_fu_3936_p1;
wire  signed [7:0] grp_fu_3943_p1;
wire  signed [7:0] grp_fu_3950_p1;
wire  signed [7:0] grp_fu_3957_p1;
wire    ap_CS_fsm_state13;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_3835_p00;
wire   [9:0] grp_fu_3835_p20;
wire   [9:0] grp_fu_3844_p00;
wire   [9:0] grp_fu_3844_p20;
reg    ap_condition_3017;
reg    ap_condition_3021;
reg    ap_condition_3026;
reg    ap_condition_3030;
reg    ap_condition_3035;
reg    ap_condition_3039;
reg    ap_condition_3044;
reg    ap_condition_3048;
reg    ap_condition_3053;
reg    ap_condition_3057;
reg    ap_condition_3062;
reg    ap_condition_3066;
reg    ap_condition_3071;
reg    ap_condition_3075;
reg    ap_condition_3078;
reg    ap_condition_3082;
reg    ap_condition_3086;
reg    ap_condition_3090;
reg    ap_condition_3094;
reg    ap_condition_3098;
reg    ap_condition_3102;
reg    ap_condition_3106;
reg    ap_condition_3112;
reg    ap_condition_3116;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

mobilenet_mac_muladd_5ns_7ns_6ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 10 ))
mac_muladd_5ns_7ns_6ns_10_4_1_U109(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3835_p0),
    .din1(grp_fu_3835_p1),
    .din2(grp_fu_3835_p2),
    .ce(1'b1),
    .dout(grp_fu_3835_p3)
);

mobilenet_mac_muladd_5ns_7ns_6ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 10 ))
mac_muladd_5ns_7ns_6ns_10_4_1_U110(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3844_p0),
    .din1(grp_fu_3844_p1),
    .din2(grp_fu_3844_p2),
    .ce(1'b1),
    .dout(grp_fu_3844_p3)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U111(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom_q0),
    .din1(grp_fu_3852_p1),
    .ce(1'b1),
    .dout(grp_fu_3852_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U112(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom1_q0),
    .din1(grp_fu_3859_p1),
    .ce(1'b1),
    .dout(grp_fu_3859_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U113(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom2_q0),
    .din1(grp_fu_3866_p1),
    .ce(1'b1),
    .dout(grp_fu_3866_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U114(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom3_q0),
    .din1(grp_fu_3873_p1),
    .ce(1'b1),
    .dout(grp_fu_3873_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U115(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom4_q0),
    .din1(grp_fu_3880_p1),
    .ce(1'b1),
    .dout(grp_fu_3880_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U116(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom5_q0),
    .din1(grp_fu_3887_p1),
    .ce(1'b1),
    .dout(grp_fu_3887_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U117(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom6_q0),
    .din1(grp_fu_3894_p1),
    .ce(1'b1),
    .dout(grp_fu_3894_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U118(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom7_q0),
    .din1(grp_fu_3901_p1),
    .ce(1'b1),
    .dout(grp_fu_3901_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U119(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom8_load_reg_4226),
    .din1(grp_fu_3908_p1),
    .ce(1'b1),
    .dout(grp_fu_3908_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom9_load_reg_4231),
    .din1(grp_fu_3915_p1),
    .ce(1'b1),
    .dout(grp_fu_3915_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom10_load_reg_4236),
    .din1(grp_fu_3922_p1),
    .ce(1'b1),
    .dout(grp_fu_3922_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom11_load_reg_4241),
    .din1(grp_fu_3929_p1),
    .ce(1'b1),
    .dout(grp_fu_3929_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U123(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom12_load_reg_4246),
    .din1(grp_fu_3936_p1),
    .ce(1'b1),
    .dout(grp_fu_3936_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U124(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom13_load_reg_4251),
    .din1(grp_fu_3943_p1),
    .ce(1'b1),
    .dout(grp_fu_3943_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U125(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom14_load_reg_4256),
    .din1(grp_fu_3950_p1),
    .ce(1'b1),
    .dout(grp_fu_3950_p2)
);

mobilenet_mul_mul_16s_8s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_1_U126(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bottom15_load_reg_4261),
    .din1(grp_fu_3957_p1),
    .ce(1'b1),
    .dout(grp_fu_3957_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (trunc_ln43_empty_n == 1'b0) | (i_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if ((~((ap_start == 1'b0) | (trunc_ln43_empty_n == 1'b0) | (i_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln45_reg_4059 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        h_reg_807 <= select_ln45_1_reg_4070;
    end else if ((~((ap_start == 1'b0) | (trunc_ln43_empty_n == 1'b0) | (i_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        h_reg_807 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln45_reg_4059 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_796 <= add_ln45_2_reg_4054;
    end else if ((~((ap_start == 1'b0) | (trunc_ln43_empty_n == 1'b0) | (i_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_796 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln45_reg_4059 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_reg_818 <= add_ln46_reg_4086;
    end else if ((~((ap_start == 1'b0) | (trunc_ln43_empty_n == 1'b0) | (i_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        w_reg_818 <= 6'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln45_2_reg_4054 <= add_ln45_2_fu_913_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_4059 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln46_reg_4086 <= add_ln46_fu_965_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln45_reg_4059_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln727_reg_4181 <= grp_fu_3844_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bottom10_load_reg_4236 <= bottom10_q0;
        bottom11_load_reg_4241 <= bottom11_q0;
        bottom12_load_reg_4246 <= bottom12_q0;
        bottom13_load_reg_4251 <= bottom13_q0;
        bottom14_load_reg_4256 <= bottom14_q0;
        bottom15_load_reg_4261 <= bottom15_q0;
        bottom8_load_reg_4226 <= bottom8_q0;
        bottom9_load_reg_4231 <= bottom9_q0;
        icmp_ln45_reg_4059 <= icmp_ln45_fu_919_p2;
        icmp_ln45_reg_4059_pp0_iter1_reg <= icmp_ln45_reg_4059;
        icmp_ln45_reg_4059_pp0_iter2_reg <= icmp_ln45_reg_4059_pp0_iter1_reg;
        icmp_ln45_reg_4059_pp0_iter3_reg <= icmp_ln45_reg_4059_pp0_iter2_reg;
        or_ln340_10_reg_4574 <= or_ln340_10_fu_2431_p2;
        or_ln340_11_reg_4578 <= or_ln340_11_fu_2435_p2;
        or_ln340_12_reg_4582 <= or_ln340_12_fu_2439_p2;
        or_ln340_13_reg_4586 <= or_ln340_13_fu_2443_p2;
        or_ln340_14_reg_4590 <= or_ln340_14_fu_2447_p2;
        or_ln340_15_reg_4607 <= or_ln340_15_fu_2618_p2;
        or_ln340_16_reg_4624 <= or_ln340_16_fu_2791_p2;
        or_ln340_17_reg_4641 <= or_ln340_17_fu_2964_p2;
        or_ln340_18_reg_4658 <= or_ln340_18_fu_3137_p2;
        or_ln340_19_reg_4675 <= or_ln340_19_fu_3310_p2;
        or_ln340_20_reg_4692 <= or_ln340_20_fu_3483_p2;
        or_ln340_21_reg_4709 <= or_ln340_21_fu_3656_p2;
        or_ln340_22_reg_4726 <= or_ln340_22_fu_3829_p2;
        or_ln340_8_reg_4566 <= or_ln340_8_fu_2423_p2;
        or_ln340_9_reg_4570 <= or_ln340_9_fu_2427_p2;
        overflow_19_reg_4599 <= overflow_19_fu_2588_p2;
        overflow_20_reg_4616 <= overflow_20_fu_2761_p2;
        overflow_21_reg_4633 <= overflow_21_fu_2934_p2;
        overflow_22_reg_4650 <= overflow_22_fu_3107_p2;
        overflow_23_reg_4667 <= overflow_23_fu_3280_p2;
        overflow_24_reg_4684 <= overflow_24_fu_3453_p2;
        overflow_25_reg_4701 <= overflow_25_fu_3626_p2;
        overflow_26_reg_4718 <= overflow_26_fu_3799_p2;
        p_Val2_78_reg_4594 <= p_Val2_78_fu_2512_p2;
        p_Val2_81_reg_4611 <= p_Val2_81_fu_2685_p2;
        p_Val2_84_reg_4628 <= p_Val2_84_fu_2858_p2;
        p_Val2_87_reg_4645 <= p_Val2_87_fu_3031_p2;
        p_Val2_90_reg_4662 <= p_Val2_90_fu_3204_p2;
        p_Val2_93_reg_4679 <= p_Val2_93_fu_3377_p2;
        p_Val2_96_reg_4696 <= p_Val2_96_fu_3550_p2;
        p_Val2_99_reg_4713 <= p_Val2_99_fu_3723_p2;
        select_ln45_reg_4063_pp0_iter1_reg <= select_ln45_reg_4063;
        top16_addr_reg_4390_pp0_iter4_reg <= top16_addr_reg_4390;
        top17_addr_reg_4384_pp0_iter4_reg <= top17_addr_reg_4384;
        top18_addr_reg_4378_pp0_iter4_reg <= top18_addr_reg_4378;
        top19_addr_reg_4372_pp0_iter4_reg <= top19_addr_reg_4372;
        top20_addr_reg_4366_pp0_iter4_reg <= top20_addr_reg_4366;
        top21_addr_reg_4360_pp0_iter4_reg <= top21_addr_reg_4360;
        top22_addr_reg_4354_pp0_iter4_reg <= top22_addr_reg_4354;
        top23_addr_reg_4348_pp0_iter4_reg <= top23_addr_reg_4348;
        top24_addr_reg_4342_pp0_iter4_reg <= top24_addr_reg_4342;
        top25_addr_reg_4336_pp0_iter4_reg <= top25_addr_reg_4336;
        top26_addr_reg_4330_pp0_iter4_reg <= top26_addr_reg_4330;
        top27_addr_reg_4324_pp0_iter4_reg <= top27_addr_reg_4324;
        top28_addr_reg_4318_pp0_iter4_reg <= top28_addr_reg_4318;
        top29_addr_reg_4312_pp0_iter4_reg <= top29_addr_reg_4312;
        top30_addr_reg_4306_pp0_iter4_reg <= top30_addr_reg_4306;
        top_addr_reg_4396_pp0_iter4_reg <= top_addr_reg_4396;
        underflow_19_reg_4603 <= underflow_19_fu_2612_p2;
        underflow_20_reg_4620 <= underflow_20_fu_2785_p2;
        underflow_21_reg_4637 <= underflow_21_fu_2958_p2;
        underflow_22_reg_4654 <= underflow_22_fu_3131_p2;
        underflow_23_reg_4671 <= underflow_23_fu_3304_p2;
        underflow_24_reg_4688 <= underflow_24_fu_3477_p2;
        underflow_25_reg_4705 <= underflow_25_fu_3650_p2;
        underflow_26_reg_4722 <= underflow_26_fu_3823_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        lhs_16_reg_4522 <= top23_q1;
        lhs_18_reg_4527 <= top24_q1;
        lhs_20_reg_4532 <= top25_q1;
        lhs_22_reg_4537 <= top26_q1;
        lhs_24_reg_4542 <= top27_q1;
        lhs_26_reg_4547 <= top28_q1;
        lhs_28_reg_4552 <= top29_q1;
        lhs_30_reg_4557 <= top30_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_4059_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln340_reg_4562 <= or_ln340_fu_2419_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        overflow_12_reg_4422 <= overflow_12_fu_1381_p2;
        overflow_13_reg_4437 <= overflow_13_fu_1549_p2;
        overflow_14_reg_4452 <= overflow_14_fu_1717_p2;
        overflow_15_reg_4467 <= overflow_15_fu_1885_p2;
        overflow_16_reg_4482 <= overflow_16_fu_2053_p2;
        overflow_17_reg_4497 <= overflow_17_fu_2221_p2;
        overflow_18_reg_4512 <= overflow_18_fu_2389_p2;
        p_Val2_57_reg_4417 <= p_Val2_57_fu_1305_p2;
        p_Val2_60_reg_4432 <= p_Val2_60_fu_1473_p2;
        p_Val2_63_reg_4447 <= p_Val2_63_fu_1641_p2;
        p_Val2_66_reg_4462 <= p_Val2_66_fu_1809_p2;
        p_Val2_69_reg_4477 <= p_Val2_69_fu_1977_p2;
        p_Val2_72_reg_4492 <= p_Val2_72_fu_2145_p2;
        p_Val2_75_reg_4507 <= p_Val2_75_fu_2313_p2;
        underflow_12_reg_4427 <= underflow_12_fu_1405_p2;
        underflow_13_reg_4442 <= underflow_13_fu_1573_p2;
        underflow_14_reg_4457 <= underflow_14_fu_1741_p2;
        underflow_15_reg_4472 <= underflow_15_fu_1909_p2;
        underflow_16_reg_4487 <= underflow_16_fu_2077_p2;
        underflow_17_reg_4502 <= underflow_17_fu_2245_p2;
        underflow_18_reg_4517 <= underflow_18_fu_2413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_4059_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        overflow_reg_4407 <= overflow_fu_1213_p2;
        p_Val2_54_reg_4402 <= p_Val2_54_fu_1137_p2;
        underflow_reg_4412 <= underflow_fu_1237_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        p_cast1_i_i_reg_4049 <= p_cast1_i_i_fu_909_p1;
        p_cast_i_i_reg_4044 <= p_cast_i_i_fu_899_p1;
        r_V_50_i_reg_4034 <= r_V_50_i_fu_885_p1;
        r_V_52_i_reg_4029 <= r_V_52_i_fu_881_p1;
        r_V_54_i_reg_4024 <= r_V_54_i_fu_877_p1;
        r_V_56_i_reg_4019 <= r_V_56_i_fu_873_p1;
        r_V_58_i_reg_4014 <= r_V_58_i_fu_869_p1;
        r_V_60_i_reg_4009 <= r_V_60_i_fu_865_p1;
        r_V_62_i_reg_4004 <= r_V_62_i_fu_861_p1;
        r_V_64_i_reg_3999 <= r_V_64_i_fu_857_p1;
        r_V_66_i_reg_3994 <= r_V_66_i_fu_853_p1;
        r_V_68_i_reg_3989 <= r_V_68_i_fu_849_p1;
        r_V_70_i_reg_3984 <= r_V_70_i_fu_845_p1;
        r_V_72_i_reg_3979 <= r_V_72_i_fu_841_p1;
        r_V_74_i_reg_3974 <= r_V_74_i_fu_837_p1;
        r_V_76_i_reg_3969 <= r_V_76_i_fu_833_p1;
        r_V_78_i_reg_3964 <= r_V_78_i_fu_829_p1;
        r_V_i_reg_4039 <= r_V_i_fu_889_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_fu_919_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln45_1_reg_4070 <= select_ln45_1_fu_945_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_fu_919_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln45_reg_4063 <= select_ln45_fu_937_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_4059_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top16_addr_reg_4390 <= zext_ln727_1_fu_1056_p1;
        top17_addr_reg_4384 <= zext_ln727_1_fu_1056_p1;
        top18_addr_reg_4378 <= zext_ln727_1_fu_1056_p1;
        top19_addr_reg_4372 <= zext_ln727_1_fu_1056_p1;
        top20_addr_reg_4366 <= zext_ln727_1_fu_1056_p1;
        top21_addr_reg_4360 <= zext_ln727_1_fu_1056_p1;
        top22_addr_reg_4354 <= zext_ln727_1_fu_1056_p1;
        top23_addr_reg_4348 <= zext_ln727_1_fu_1056_p1;
        top24_addr_reg_4342 <= zext_ln727_1_fu_1056_p1;
        top25_addr_reg_4336 <= zext_ln727_1_fu_1056_p1;
        top26_addr_reg_4330 <= zext_ln727_1_fu_1056_p1;
        top27_addr_reg_4324 <= zext_ln727_1_fu_1056_p1;
        top28_addr_reg_4318 <= zext_ln727_1_fu_1056_p1;
        top29_addr_reg_4312 <= zext_ln727_1_fu_1056_p1;
        top30_addr_reg_4306 <= zext_ln727_1_fu_1056_p1;
        top_addr_reg_4396 <= zext_ln727_1_fu_1056_p1;
    end
end

always @ (*) begin
    if ((icmp_ln45_fu_919_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln45_reg_4059 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_h_phi_fu_811_p4 = select_ln45_1_reg_4070;
    end else begin
        ap_phi_mux_h_phi_fu_811_p4 = h_reg_807;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln45_reg_4059 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_800_p4 = add_ln45_2_reg_4054;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_800_p4 = indvar_flatten_reg_796;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln45_reg_4059 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_w_phi_fu_822_p4 = add_ln46_reg_4086;
    end else begin
        ap_phi_mux_w_phi_fu_822_p4 = w_reg_818;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom10_ce0 = 1'b1;
    end else begin
        bottom10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom11_ce0 = 1'b1;
    end else begin
        bottom11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom12_ce0 = 1'b1;
    end else begin
        bottom12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom13_ce0 = 1'b1;
    end else begin
        bottom13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom14_ce0 = 1'b1;
    end else begin
        bottom14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom15_ce0 = 1'b1;
    end else begin
        bottom15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom1_ce0 = 1'b1;
    end else begin
        bottom1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom2_ce0 = 1'b1;
    end else begin
        bottom2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom3_ce0 = 1'b1;
    end else begin
        bottom3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom4_ce0 = 1'b1;
    end else begin
        bottom4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom5_ce0 = 1'b1;
    end else begin
        bottom5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom6_ce0 = 1'b1;
    end else begin
        bottom6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom7_ce0 = 1'b1;
    end else begin
        bottom7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom8_ce0 = 1'b1;
    end else begin
        bottom8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom9_ce0 = 1'b1;
    end else begin
        bottom9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bottom_ce0 = 1'b1;
    end else begin
        bottom_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_blk_n = i_empty_n;
    end else begin
        i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (trunc_ln43_empty_n == 1'b0) | (i_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_read = 1'b1;
    end else begin
        i_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_8_reg_4566 == 1'd1) & (overflow_12_reg_4422 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_8_reg_4566 == 1'd1) & (underflow_12_reg_4427 == 1'd1) & (overflow_12_reg_4422 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        top16_address0 = top16_addr_reg_4390_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top16_address0 = top16_addr_reg_4390;
    end else begin
        top16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_8_reg_4566 == 1'd1) & (overflow_12_reg_4422 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_8_reg_4566 == 1'd1) & (underflow_12_reg_4427 == 1'd1) & (overflow_12_reg_4422 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top16_ce0 = 1'b1;
    end else begin
        top16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top16_ce1 = 1'b1;
    end else begin
        top16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3021)) begin
            top16_d0 = 16'd32767;
        end else if ((1'b1 == ap_condition_3017)) begin
            top16_d0 = 16'd32768;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            top16_d0 = p_Val2_57_reg_4417;
        end else begin
            top16_d0 = 'bx;
        end
    end else begin
        top16_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_8_reg_4566 == 1'd1) & (overflow_12_reg_4422 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_8_reg_4566 == 1'd1) & (underflow_12_reg_4427 == 1'd1) & (overflow_12_reg_4422 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top16_we0 = 1'b1;
    end else begin
        top16_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_9_reg_4570 == 1'd1) & (overflow_13_reg_4437 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_9_reg_4570 == 1'd1) & (underflow_13_reg_4442 == 1'd1) & (overflow_13_reg_4437 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        top17_address0 = top17_addr_reg_4384_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top17_address0 = top17_addr_reg_4384;
    end else begin
        top17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_9_reg_4570 == 1'd1) & (overflow_13_reg_4437 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_9_reg_4570 == 1'd1) & (underflow_13_reg_4442 == 1'd1) & (overflow_13_reg_4437 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top17_ce0 = 1'b1;
    end else begin
        top17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top17_ce1 = 1'b1;
    end else begin
        top17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3030)) begin
            top17_d0 = 16'd32767;
        end else if ((1'b1 == ap_condition_3026)) begin
            top17_d0 = 16'd32768;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            top17_d0 = p_Val2_60_reg_4432;
        end else begin
            top17_d0 = 'bx;
        end
    end else begin
        top17_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_9_reg_4570 == 1'd1) & (overflow_13_reg_4437 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_9_reg_4570 == 1'd1) & (underflow_13_reg_4442 == 1'd1) & (overflow_13_reg_4437 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top17_we0 = 1'b1;
    end else begin
        top17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_10_reg_4574 == 1'd1) & (overflow_14_reg_4452 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_10_reg_4574 == 1'd1) & (underflow_14_reg_4457 == 1'd1) & (overflow_14_reg_4452 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        top18_address0 = top18_addr_reg_4378_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top18_address0 = top18_addr_reg_4378;
    end else begin
        top18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_10_reg_4574 == 1'd1) & (overflow_14_reg_4452 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_10_reg_4574 == 1'd1) & (underflow_14_reg_4457 == 1'd1) & (overflow_14_reg_4452 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top18_ce0 = 1'b1;
    end else begin
        top18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top18_ce1 = 1'b1;
    end else begin
        top18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3039)) begin
            top18_d0 = 16'd32767;
        end else if ((1'b1 == ap_condition_3035)) begin
            top18_d0 = 16'd32768;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            top18_d0 = p_Val2_63_reg_4447;
        end else begin
            top18_d0 = 'bx;
        end
    end else begin
        top18_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_10_reg_4574 == 1'd1) & (overflow_14_reg_4452 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_10_reg_4574 == 1'd1) & (underflow_14_reg_4457 == 1'd1) & (overflow_14_reg_4452 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top18_we0 = 1'b1;
    end else begin
        top18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_11_reg_4578 == 1'd1) & (overflow_15_reg_4467 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_11_reg_4578 == 1'd1) & (underflow_15_reg_4472 == 1'd1) & (overflow_15_reg_4467 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        top19_address0 = top19_addr_reg_4372_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top19_address0 = top19_addr_reg_4372;
    end else begin
        top19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_11_reg_4578 == 1'd1) & (overflow_15_reg_4467 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_11_reg_4578 == 1'd1) & (underflow_15_reg_4472 == 1'd1) & (overflow_15_reg_4467 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top19_ce0 = 1'b1;
    end else begin
        top19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top19_ce1 = 1'b1;
    end else begin
        top19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3048)) begin
            top19_d0 = 16'd32767;
        end else if ((1'b1 == ap_condition_3044)) begin
            top19_d0 = 16'd32768;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            top19_d0 = p_Val2_66_reg_4462;
        end else begin
            top19_d0 = 'bx;
        end
    end else begin
        top19_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_11_reg_4578 == 1'd1) & (overflow_15_reg_4467 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_11_reg_4578 == 1'd1) & (underflow_15_reg_4472 == 1'd1) & (overflow_15_reg_4467 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top19_we0 = 1'b1;
    end else begin
        top19_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_12_reg_4582 == 1'd1) & (overflow_16_reg_4482 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_12_reg_4582 == 1'd1) & (underflow_16_reg_4487 == 1'd1) & (overflow_16_reg_4482 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        top20_address0 = top20_addr_reg_4366_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top20_address0 = top20_addr_reg_4366;
    end else begin
        top20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_12_reg_4582 == 1'd1) & (overflow_16_reg_4482 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_12_reg_4582 == 1'd1) & (underflow_16_reg_4487 == 1'd1) & (overflow_16_reg_4482 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top20_ce0 = 1'b1;
    end else begin
        top20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top20_ce1 = 1'b1;
    end else begin
        top20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3057)) begin
            top20_d0 = 16'd32767;
        end else if ((1'b1 == ap_condition_3053)) begin
            top20_d0 = 16'd32768;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            top20_d0 = p_Val2_69_reg_4477;
        end else begin
            top20_d0 = 'bx;
        end
    end else begin
        top20_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_12_reg_4582 == 1'd1) & (overflow_16_reg_4482 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_12_reg_4582 == 1'd1) & (underflow_16_reg_4487 == 1'd1) & (overflow_16_reg_4482 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top20_we0 = 1'b1;
    end else begin
        top20_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_13_reg_4586 == 1'd1) & (overflow_17_reg_4497 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_13_reg_4586 == 1'd1) & (underflow_17_reg_4502 == 1'd1) & (overflow_17_reg_4497 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        top21_address0 = top21_addr_reg_4360_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top21_address0 = top21_addr_reg_4360;
    end else begin
        top21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_13_reg_4586 == 1'd1) & (overflow_17_reg_4497 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_13_reg_4586 == 1'd1) & (underflow_17_reg_4502 == 1'd1) & (overflow_17_reg_4497 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top21_ce0 = 1'b1;
    end else begin
        top21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top21_ce1 = 1'b1;
    end else begin
        top21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3066)) begin
            top21_d0 = 16'd32767;
        end else if ((1'b1 == ap_condition_3062)) begin
            top21_d0 = 16'd32768;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            top21_d0 = p_Val2_72_reg_4492;
        end else begin
            top21_d0 = 'bx;
        end
    end else begin
        top21_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_13_reg_4586 == 1'd1) & (overflow_17_reg_4497 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_13_reg_4586 == 1'd1) & (underflow_17_reg_4502 == 1'd1) & (overflow_17_reg_4497 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top21_we0 = 1'b1;
    end else begin
        top21_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_14_reg_4590 == 1'd1) & (overflow_18_reg_4512 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_14_reg_4590 == 1'd1) & (underflow_18_reg_4517 == 1'd1) & (overflow_18_reg_4512 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        top22_address0 = top22_addr_reg_4354_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top22_address0 = top22_addr_reg_4354;
    end else begin
        top22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_14_reg_4590 == 1'd1) & (overflow_18_reg_4512 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_14_reg_4590 == 1'd1) & (underflow_18_reg_4517 == 1'd1) & (overflow_18_reg_4512 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top22_ce0 = 1'b1;
    end else begin
        top22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top22_ce1 = 1'b1;
    end else begin
        top22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3075)) begin
            top22_d0 = 16'd32767;
        end else if ((1'b1 == ap_condition_3071)) begin
            top22_d0 = 16'd32768;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            top22_d0 = p_Val2_75_reg_4507;
        end else begin
            top22_d0 = 'bx;
        end
    end else begin
        top22_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_14_reg_4590 == 1'd1) & (overflow_18_reg_4512 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_14_reg_4590 == 1'd1) & (underflow_18_reg_4517 == 1'd1) & (overflow_18_reg_4512 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top22_we0 = 1'b1;
    end else begin
        top22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top23_address1 = top23_addr_reg_4348_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top23_address1 = zext_ln727_1_fu_1056_p1;
    end else begin
        top23_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_15_reg_4607 == 1'd1) & (overflow_19_reg_4599 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_15_reg_4607 == 1'd1) & (underflow_19_reg_4603 == 1'd1) & (overflow_19_reg_4599 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top23_ce0 = 1'b1;
    end else begin
        top23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top23_ce1 = 1'b1;
    end else begin
        top23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3078)) begin
        if ((overflow_19_reg_4599 == 1'd1)) begin
            top23_d0 = 16'd32767;
        end else if (((underflow_19_reg_4603 == 1'd1) & (overflow_19_reg_4599 == 1'd0))) begin
            top23_d0 = 16'd32768;
        end else begin
            top23_d0 = 'bx;
        end
    end else begin
        top23_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_15_reg_4607 == 1'd1) & (overflow_19_reg_4599 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_15_reg_4607 == 1'd1) & (underflow_19_reg_4603 == 1'd1) & (overflow_19_reg_4599 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top23_we0 = 1'b1;
    end else begin
        top23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top23_we1 = 1'b1;
    end else begin
        top23_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top24_address1 = top24_addr_reg_4342_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top24_address1 = zext_ln727_1_fu_1056_p1;
    end else begin
        top24_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_16_reg_4624 == 1'd1) & (overflow_20_reg_4616 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_16_reg_4624 == 1'd1) & (underflow_20_reg_4620 == 1'd1) & (overflow_20_reg_4616 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top24_ce0 = 1'b1;
    end else begin
        top24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top24_ce1 = 1'b1;
    end else begin
        top24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3082)) begin
        if ((overflow_20_reg_4616 == 1'd1)) begin
            top24_d0 = 16'd32767;
        end else if (((underflow_20_reg_4620 == 1'd1) & (overflow_20_reg_4616 == 1'd0))) begin
            top24_d0 = 16'd32768;
        end else begin
            top24_d0 = 'bx;
        end
    end else begin
        top24_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_16_reg_4624 == 1'd1) & (overflow_20_reg_4616 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_16_reg_4624 == 1'd1) & (underflow_20_reg_4620 == 1'd1) & (overflow_20_reg_4616 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top24_we0 = 1'b1;
    end else begin
        top24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top24_we1 = 1'b1;
    end else begin
        top24_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top25_address1 = top25_addr_reg_4336_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top25_address1 = zext_ln727_1_fu_1056_p1;
    end else begin
        top25_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_17_reg_4641 == 1'd1) & (overflow_21_reg_4633 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_17_reg_4641 == 1'd1) & (underflow_21_reg_4637 == 1'd1) & (overflow_21_reg_4633 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top25_ce0 = 1'b1;
    end else begin
        top25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top25_ce1 = 1'b1;
    end else begin
        top25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3086)) begin
        if ((overflow_21_reg_4633 == 1'd1)) begin
            top25_d0 = 16'd32767;
        end else if (((underflow_21_reg_4637 == 1'd1) & (overflow_21_reg_4633 == 1'd0))) begin
            top25_d0 = 16'd32768;
        end else begin
            top25_d0 = 'bx;
        end
    end else begin
        top25_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_17_reg_4641 == 1'd1) & (overflow_21_reg_4633 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_17_reg_4641 == 1'd1) & (underflow_21_reg_4637 == 1'd1) & (overflow_21_reg_4633 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top25_we0 = 1'b1;
    end else begin
        top25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top25_we1 = 1'b1;
    end else begin
        top25_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top26_address1 = top26_addr_reg_4330_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top26_address1 = zext_ln727_1_fu_1056_p1;
    end else begin
        top26_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_18_reg_4658 == 1'd1) & (overflow_22_reg_4650 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_18_reg_4658 == 1'd1) & (underflow_22_reg_4654 == 1'd1) & (overflow_22_reg_4650 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top26_ce0 = 1'b1;
    end else begin
        top26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top26_ce1 = 1'b1;
    end else begin
        top26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3090)) begin
        if ((overflow_22_reg_4650 == 1'd1)) begin
            top26_d0 = 16'd32767;
        end else if (((underflow_22_reg_4654 == 1'd1) & (overflow_22_reg_4650 == 1'd0))) begin
            top26_d0 = 16'd32768;
        end else begin
            top26_d0 = 'bx;
        end
    end else begin
        top26_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_18_reg_4658 == 1'd1) & (overflow_22_reg_4650 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_18_reg_4658 == 1'd1) & (underflow_22_reg_4654 == 1'd1) & (overflow_22_reg_4650 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top26_we0 = 1'b1;
    end else begin
        top26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top26_we1 = 1'b1;
    end else begin
        top26_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top27_address1 = top27_addr_reg_4324_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top27_address1 = zext_ln727_1_fu_1056_p1;
    end else begin
        top27_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_19_reg_4675 == 1'd1) & (overflow_23_reg_4667 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_19_reg_4675 == 1'd1) & (underflow_23_reg_4671 == 1'd1) & (overflow_23_reg_4667 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top27_ce0 = 1'b1;
    end else begin
        top27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top27_ce1 = 1'b1;
    end else begin
        top27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3094)) begin
        if ((overflow_23_reg_4667 == 1'd1)) begin
            top27_d0 = 16'd32767;
        end else if (((underflow_23_reg_4671 == 1'd1) & (overflow_23_reg_4667 == 1'd0))) begin
            top27_d0 = 16'd32768;
        end else begin
            top27_d0 = 'bx;
        end
    end else begin
        top27_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_19_reg_4675 == 1'd1) & (overflow_23_reg_4667 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_19_reg_4675 == 1'd1) & (underflow_23_reg_4671 == 1'd1) & (overflow_23_reg_4667 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top27_we0 = 1'b1;
    end else begin
        top27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top27_we1 = 1'b1;
    end else begin
        top27_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top28_address1 = top28_addr_reg_4318_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top28_address1 = zext_ln727_1_fu_1056_p1;
    end else begin
        top28_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_20_reg_4692 == 1'd1) & (overflow_24_reg_4684 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_20_reg_4692 == 1'd1) & (underflow_24_reg_4688 == 1'd1) & (overflow_24_reg_4684 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top28_ce0 = 1'b1;
    end else begin
        top28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top28_ce1 = 1'b1;
    end else begin
        top28_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3098)) begin
        if ((overflow_24_reg_4684 == 1'd1)) begin
            top28_d0 = 16'd32767;
        end else if (((underflow_24_reg_4688 == 1'd1) & (overflow_24_reg_4684 == 1'd0))) begin
            top28_d0 = 16'd32768;
        end else begin
            top28_d0 = 'bx;
        end
    end else begin
        top28_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_20_reg_4692 == 1'd1) & (overflow_24_reg_4684 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_20_reg_4692 == 1'd1) & (underflow_24_reg_4688 == 1'd1) & (overflow_24_reg_4684 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top28_we0 = 1'b1;
    end else begin
        top28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top28_we1 = 1'b1;
    end else begin
        top28_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top29_address1 = top29_addr_reg_4312_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top29_address1 = zext_ln727_1_fu_1056_p1;
    end else begin
        top29_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_21_reg_4709 == 1'd1) & (overflow_25_reg_4701 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_21_reg_4709 == 1'd1) & (underflow_25_reg_4705 == 1'd1) & (overflow_25_reg_4701 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top29_ce0 = 1'b1;
    end else begin
        top29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top29_ce1 = 1'b1;
    end else begin
        top29_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3102)) begin
        if ((overflow_25_reg_4701 == 1'd1)) begin
            top29_d0 = 16'd32767;
        end else if (((underflow_25_reg_4705 == 1'd1) & (overflow_25_reg_4701 == 1'd0))) begin
            top29_d0 = 16'd32768;
        end else begin
            top29_d0 = 'bx;
        end
    end else begin
        top29_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_21_reg_4709 == 1'd1) & (overflow_25_reg_4701 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_21_reg_4709 == 1'd1) & (underflow_25_reg_4705 == 1'd1) & (overflow_25_reg_4701 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top29_we0 = 1'b1;
    end else begin
        top29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top29_we1 = 1'b1;
    end else begin
        top29_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top30_address1 = top30_addr_reg_4306_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top30_address1 = zext_ln727_1_fu_1056_p1;
    end else begin
        top30_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_22_reg_4726 == 1'd1) & (overflow_26_reg_4718 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_22_reg_4726 == 1'd1) & (underflow_26_reg_4722 == 1'd1) & (overflow_26_reg_4718 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top30_ce0 = 1'b1;
    end else begin
        top30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top30_ce1 = 1'b1;
    end else begin
        top30_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3106)) begin
        if ((overflow_26_reg_4718 == 1'd1)) begin
            top30_d0 = 16'd32767;
        end else if (((underflow_26_reg_4722 == 1'd1) & (overflow_26_reg_4718 == 1'd0))) begin
            top30_d0 = 16'd32768;
        end else begin
            top30_d0 = 'bx;
        end
    end else begin
        top30_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_22_reg_4726 == 1'd1) & (overflow_26_reg_4718 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_22_reg_4726 == 1'd1) & (underflow_26_reg_4722 == 1'd1) & (overflow_26_reg_4718 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top30_we0 = 1'b1;
    end else begin
        top30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        top30_we1 = 1'b1;
    end else begin
        top30_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_reg_4562 == 1'd1) & (overflow_reg_4407 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_reg_4562 == 1'd1) & (underflow_reg_4412 == 1'd1) & (overflow_reg_4407 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        top_address0 = top_addr_reg_4396_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top_address0 = top_addr_reg_4396;
    end else begin
        top_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_reg_4562 == 1'd1) & (overflow_reg_4407 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_reg_4562 == 1'd1) & (underflow_reg_4412 == 1'd1) & (overflow_reg_4407 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top_ce0 = 1'b1;
    end else begin
        top_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        top_ce1 = 1'b1;
    end else begin
        top_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
        if ((1'b1 == ap_condition_3116)) begin
            top_d0 = 16'd32767;
        end else if ((1'b1 == ap_condition_3112)) begin
            top_d0 = 16'd32768;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            top_d0 = p_Val2_54_reg_4402;
        end else begin
            top_d0 = 'bx;
        end
    end else begin
        top_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_reg_4562 == 1'd1) & (overflow_reg_4407 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (or_ln340_reg_4562 == 1'd1) & (underflow_reg_4412 == 1'd1) & (overflow_reg_4407 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln45_reg_4059_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        top_we0 = 1'b1;
    end else begin
        top_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        trunc_ln43_blk_n = trunc_ln43_empty_n;
    end else begin
        trunc_ln43_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (trunc_ln43_empty_n == 1'b0) | (i_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        trunc_ln43_read = 1'b1;
    end else begin
        trunc_ln43_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (trunc_ln43_empty_n == 1'b0) | (i_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln45_fu_919_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln45_fu_919_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range2_all_ones_10_fu_2532_p3 = ret_V_21_fu_2462_p2[32'd23];

assign Range2_all_ones_11_fu_2333_p3 = ret_V_22_fu_2263_p2[32'd23];

assign Range2_all_ones_12_fu_2165_p3 = ret_V_23_fu_2095_p2[32'd23];

assign Range2_all_ones_13_fu_1997_p3 = ret_V_24_fu_1927_p2[32'd23];

assign Range2_all_ones_14_fu_1829_p3 = ret_V_25_fu_1759_p2[32'd23];

assign Range2_all_ones_15_fu_1661_p3 = ret_V_26_fu_1591_p2[32'd23];

assign Range2_all_ones_16_fu_1493_p3 = ret_V_27_fu_1423_p2[32'd23];

assign Range2_all_ones_17_fu_1325_p3 = ret_V_28_fu_1255_p2[32'd23];

assign Range2_all_ones_3_fu_3743_p3 = ret_V_14_fu_3673_p2[32'd23];

assign Range2_all_ones_4_fu_3570_p3 = ret_V_15_fu_3500_p2[32'd23];

assign Range2_all_ones_5_fu_3397_p3 = ret_V_16_fu_3327_p2[32'd23];

assign Range2_all_ones_6_fu_3224_p3 = ret_V_17_fu_3154_p2[32'd23];

assign Range2_all_ones_7_fu_3051_p3 = ret_V_18_fu_2981_p2[32'd23];

assign Range2_all_ones_8_fu_2878_p3 = ret_V_19_fu_2808_p2[32'd23];

assign Range2_all_ones_9_fu_2705_p3 = ret_V_20_fu_2635_p2[32'd23];

assign Range2_all_ones_fu_1157_p3 = ret_V_fu_1087_p2[32'd23];

assign add_ln45_1_fu_953_p2 = ($signed(select_ln45_1_fu_945_p3) + $signed(p_cast_i_i_reg_4044));

assign add_ln45_2_fu_913_p2 = (ap_phi_mux_indvar_flatten_phi_fu_800_p4 + 10'd1);

assign add_ln45_fu_925_p2 = (ap_phi_mux_h_phi_fu_811_p4 + 5'd1);

assign add_ln46_fu_965_p2 = (select_ln45_reg_4063 + 6'd1);

assign and_ln414_10_fu_2848_p2 = (p_Result_159_fu_2813_p3 & icmp_ln414_10_fu_2842_p2);

assign and_ln414_11_fu_3021_p2 = (p_Result_156_fu_2986_p3 & icmp_ln414_11_fu_3015_p2);

assign and_ln414_12_fu_3194_p2 = (p_Result_153_fu_3159_p3 & icmp_ln414_12_fu_3188_p2);

assign and_ln414_13_fu_3367_p2 = (p_Result_150_fu_3332_p3 & icmp_ln414_13_fu_3361_p2);

assign and_ln414_14_fu_3540_p2 = (p_Result_147_fu_3505_p3 & icmp_ln414_14_fu_3534_p2);

assign and_ln414_15_fu_3713_p2 = (p_Result_144_fu_3678_p3 & icmp_ln414_15_fu_3707_p2);

assign and_ln414_1_fu_1295_p2 = (p_Result_186_fu_1260_p3 & icmp_ln414_1_fu_1289_p2);

assign and_ln414_2_fu_1463_p2 = (p_Result_183_fu_1428_p3 & icmp_ln414_2_fu_1457_p2);

assign and_ln414_3_fu_1631_p2 = (p_Result_180_fu_1596_p3 & icmp_ln414_3_fu_1625_p2);

assign and_ln414_4_fu_1799_p2 = (p_Result_177_fu_1764_p3 & icmp_ln414_4_fu_1793_p2);

assign and_ln414_5_fu_1967_p2 = (p_Result_174_fu_1932_p3 & icmp_ln414_5_fu_1961_p2);

assign and_ln414_6_fu_2135_p2 = (p_Result_171_fu_2100_p3 & icmp_ln414_6_fu_2129_p2);

assign and_ln414_7_fu_2303_p2 = (p_Result_168_fu_2268_p3 & icmp_ln414_7_fu_2297_p2);

assign and_ln414_8_fu_2502_p2 = (p_Result_165_fu_2467_p3 & icmp_ln414_8_fu_2496_p2);

assign and_ln414_9_fu_2675_p2 = (p_Result_162_fu_2640_p3 & icmp_ln414_9_fu_2669_p2);

assign and_ln414_fu_1127_p2 = (p_Result_s_fu_1092_p3 & icmp_ln414_fu_1121_p2);

assign and_ln781_10_fu_2904_p2 = (p_Result_160_fu_2831_p3 & and_ln781_26_fu_2898_p2);

assign and_ln781_11_fu_3077_p2 = (p_Result_157_fu_3004_p3 & and_ln781_27_fu_3071_p2);

assign and_ln781_12_fu_3250_p2 = (p_Result_154_fu_3177_p3 & and_ln781_28_fu_3244_p2);

assign and_ln781_13_fu_3423_p2 = (p_Result_151_fu_3350_p3 & and_ln781_29_fu_3417_p2);

assign and_ln781_14_fu_3596_p2 = (p_Result_148_fu_3523_p3 & and_ln781_30_fu_3590_p2);

assign and_ln781_15_fu_3769_p2 = (p_Result_145_fu_3696_p3 & and_ln781_31_fu_3763_p2);

assign and_ln781_16_fu_1177_p2 = (xor_ln416_fu_1151_p2 & Range2_all_ones_fu_1157_p3);

assign and_ln781_17_fu_1345_p2 = (xor_ln416_1_fu_1319_p2 & Range2_all_ones_17_fu_1325_p3);

assign and_ln781_18_fu_1513_p2 = (xor_ln416_2_fu_1487_p2 & Range2_all_ones_16_fu_1493_p3);

assign and_ln781_19_fu_1681_p2 = (xor_ln416_3_fu_1655_p2 & Range2_all_ones_15_fu_1661_p3);

assign and_ln781_1_fu_1351_p2 = (p_Result_187_fu_1278_p3 & and_ln781_17_fu_1345_p2);

assign and_ln781_20_fu_1849_p2 = (xor_ln416_4_fu_1823_p2 & Range2_all_ones_14_fu_1829_p3);

assign and_ln781_21_fu_2017_p2 = (xor_ln416_5_fu_1991_p2 & Range2_all_ones_13_fu_1997_p3);

assign and_ln781_22_fu_2185_p2 = (xor_ln416_6_fu_2159_p2 & Range2_all_ones_12_fu_2165_p3);

assign and_ln781_23_fu_2353_p2 = (xor_ln416_7_fu_2327_p2 & Range2_all_ones_11_fu_2333_p3);

assign and_ln781_24_fu_2552_p2 = (xor_ln416_8_fu_2526_p2 & Range2_all_ones_10_fu_2532_p3);

assign and_ln781_25_fu_2725_p2 = (xor_ln416_9_fu_2699_p2 & Range2_all_ones_9_fu_2705_p3);

assign and_ln781_26_fu_2898_p2 = (xor_ln416_10_fu_2872_p2 & Range2_all_ones_8_fu_2878_p3);

assign and_ln781_27_fu_3071_p2 = (xor_ln416_11_fu_3045_p2 & Range2_all_ones_7_fu_3051_p3);

assign and_ln781_28_fu_3244_p2 = (xor_ln416_12_fu_3218_p2 & Range2_all_ones_6_fu_3224_p3);

assign and_ln781_29_fu_3417_p2 = (xor_ln416_13_fu_3391_p2 & Range2_all_ones_5_fu_3397_p3);

assign and_ln781_2_fu_1519_p2 = (p_Result_184_fu_1446_p3 & and_ln781_18_fu_1513_p2);

assign and_ln781_30_fu_3590_p2 = (xor_ln416_14_fu_3564_p2 & Range2_all_ones_4_fu_3570_p3);

assign and_ln781_31_fu_3763_p2 = (xor_ln416_15_fu_3737_p2 & Range2_all_ones_3_fu_3743_p3);

assign and_ln781_3_fu_1687_p2 = (p_Result_181_fu_1614_p3 & and_ln781_19_fu_1681_p2);

assign and_ln781_4_fu_1855_p2 = (p_Result_178_fu_1782_p3 & and_ln781_20_fu_1849_p2);

assign and_ln781_5_fu_2023_p2 = (p_Result_175_fu_1950_p3 & and_ln781_21_fu_2017_p2);

assign and_ln781_6_fu_2191_p2 = (p_Result_172_fu_2118_p3 & and_ln781_22_fu_2185_p2);

assign and_ln781_7_fu_2359_p2 = (p_Result_169_fu_2286_p3 & and_ln781_23_fu_2353_p2);

assign and_ln781_8_fu_2558_p2 = (p_Result_166_fu_2485_p3 & and_ln781_24_fu_2552_p2);

assign and_ln781_9_fu_2731_p2 = (p_Result_163_fu_2658_p3 & and_ln781_25_fu_2725_p2);

assign and_ln781_fu_1183_p2 = (p_Result_142_fu_1110_p3 & and_ln781_16_fu_1177_p2);

assign and_ln786_10_fu_2059_p2 = (p_Result_176_fu_1983_p3 & Range2_all_ones_13_fu_1997_p3);

assign and_ln786_12_fu_2227_p2 = (p_Result_173_fu_2151_p3 & Range2_all_ones_12_fu_2165_p3);

assign and_ln786_14_fu_2395_p2 = (p_Result_170_fu_2319_p3 & Range2_all_ones_11_fu_2333_p3);

assign and_ln786_16_fu_2594_p2 = (p_Result_167_fu_2518_p3 & Range2_all_ones_10_fu_2532_p3);

assign and_ln786_18_fu_2767_p2 = (p_Result_164_fu_2691_p3 & Range2_all_ones_9_fu_2705_p3);

assign and_ln786_20_fu_2940_p2 = (p_Result_161_fu_2864_p3 & Range2_all_ones_8_fu_2878_p3);

assign and_ln786_22_fu_3113_p2 = (p_Result_158_fu_3037_p3 & Range2_all_ones_7_fu_3051_p3);

assign and_ln786_24_fu_3286_p2 = (p_Result_155_fu_3210_p3 & Range2_all_ones_6_fu_3224_p3);

assign and_ln786_26_fu_3459_p2 = (p_Result_152_fu_3383_p3 & Range2_all_ones_5_fu_3397_p3);

assign and_ln786_28_fu_3632_p2 = (p_Result_149_fu_3556_p3 & Range2_all_ones_4_fu_3570_p3);

assign and_ln786_2_fu_1387_p2 = (p_Result_188_fu_1311_p3 & Range2_all_ones_17_fu_1325_p3);

assign and_ln786_30_fu_3805_p2 = (p_Result_146_fu_3729_p3 & Range2_all_ones_3_fu_3743_p3);

assign and_ln786_4_fu_1555_p2 = (p_Result_185_fu_1479_p3 & Range2_all_ones_16_fu_1493_p3);

assign and_ln786_6_fu_1723_p2 = (p_Result_182_fu_1647_p3 & Range2_all_ones_15_fu_1661_p3);

assign and_ln786_8_fu_1891_p2 = (p_Result_179_fu_1815_p3 & Range2_all_ones_14_fu_1829_p3);

assign and_ln786_fu_1219_p2 = (p_Result_143_fu_1143_p3 & Range2_all_ones_fu_1157_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (trunc_ln43_empty_n == 1'b0) | (i_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_3017 = ((or_ln340_8_reg_4566 == 1'd1) & (underflow_12_reg_4427 == 1'd1) & (overflow_12_reg_4422 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3021 = ((or_ln340_8_reg_4566 == 1'd1) & (overflow_12_reg_4422 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3026 = ((or_ln340_9_reg_4570 == 1'd1) & (underflow_13_reg_4442 == 1'd1) & (overflow_13_reg_4437 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3030 = ((or_ln340_9_reg_4570 == 1'd1) & (overflow_13_reg_4437 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3035 = ((or_ln340_10_reg_4574 == 1'd1) & (underflow_14_reg_4457 == 1'd1) & (overflow_14_reg_4452 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3039 = ((or_ln340_10_reg_4574 == 1'd1) & (overflow_14_reg_4452 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3044 = ((or_ln340_11_reg_4578 == 1'd1) & (underflow_15_reg_4472 == 1'd1) & (overflow_15_reg_4467 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3048 = ((or_ln340_11_reg_4578 == 1'd1) & (overflow_15_reg_4467 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3053 = ((or_ln340_12_reg_4582 == 1'd1) & (underflow_16_reg_4487 == 1'd1) & (overflow_16_reg_4482 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3057 = ((or_ln340_12_reg_4582 == 1'd1) & (overflow_16_reg_4482 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3062 = ((or_ln340_13_reg_4586 == 1'd1) & (underflow_17_reg_4502 == 1'd1) & (overflow_17_reg_4497 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3066 = ((or_ln340_13_reg_4586 == 1'd1) & (overflow_17_reg_4497 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3071 = ((or_ln340_14_reg_4590 == 1'd1) & (underflow_18_reg_4517 == 1'd1) & (overflow_18_reg_4512 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3075 = ((or_ln340_14_reg_4590 == 1'd1) & (overflow_18_reg_4512 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3078 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_15_reg_4607 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_3082 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_16_reg_4624 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_3086 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_17_reg_4641 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_3090 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_18_reg_4658 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_3094 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_19_reg_4675 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_3098 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_20_reg_4692 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_3102 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_21_reg_4709 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_3106 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (or_ln340_22_reg_4726 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_3112 = ((or_ln340_reg_4562 == 1'd1) & (underflow_reg_4412 == 1'd1) & (overflow_reg_4407 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3116 = ((or_ln340_reg_4562 == 1'd1) & (overflow_reg_4407 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bottom10_address0 = zext_ln1118_1_fu_981_p1;

assign bottom11_address0 = zext_ln1118_1_fu_981_p1;

assign bottom12_address0 = zext_ln1118_1_fu_981_p1;

assign bottom13_address0 = zext_ln1118_1_fu_981_p1;

assign bottom14_address0 = zext_ln1118_1_fu_981_p1;

assign bottom15_address0 = zext_ln1118_1_fu_981_p1;

assign bottom1_address0 = zext_ln1118_1_fu_981_p1;

assign bottom2_address0 = zext_ln1118_1_fu_981_p1;

assign bottom3_address0 = zext_ln1118_1_fu_981_p1;

assign bottom4_address0 = zext_ln1118_1_fu_981_p1;

assign bottom5_address0 = zext_ln1118_1_fu_981_p1;

assign bottom6_address0 = zext_ln1118_1_fu_981_p1;

assign bottom7_address0 = zext_ln1118_1_fu_981_p1;

assign bottom8_address0 = zext_ln1118_1_fu_981_p1;

assign bottom9_address0 = zext_ln1118_1_fu_981_p1;

assign bottom_address0 = zext_ln1118_1_fu_981_p1;

assign empty_923_fu_903_p2 = ($signed(trunc_ln43_dout) + $signed(2'd3));

assign empty_925_fu_970_p2 = ($signed(select_ln45_reg_4063) + $signed(p_cast1_i_i_reg_4049));

assign empty_fu_893_p2 = ($signed(i_dout) + $signed(2'd3));

assign grp_fu_3835_p0 = grp_fu_3835_p00;

assign grp_fu_3835_p00 = add_ln45_1_fu_953_p2;

assign grp_fu_3835_p1 = 10'd42;

assign grp_fu_3835_p2 = grp_fu_3835_p20;

assign grp_fu_3835_p20 = empty_925_fu_970_p2;

assign grp_fu_3844_p0 = grp_fu_3844_p00;

assign grp_fu_3844_p00 = select_ln45_1_reg_4070;

assign grp_fu_3844_p1 = 10'd42;

assign grp_fu_3844_p2 = grp_fu_3844_p20;

assign grp_fu_3844_p20 = select_ln45_reg_4063_pp0_iter1_reg;

assign grp_fu_3852_p1 = r_V_i_reg_4039;

assign grp_fu_3859_p1 = r_V_50_i_reg_4034;

assign grp_fu_3866_p1 = r_V_52_i_reg_4029;

assign grp_fu_3873_p1 = r_V_54_i_reg_4024;

assign grp_fu_3880_p1 = r_V_56_i_reg_4019;

assign grp_fu_3887_p1 = r_V_58_i_reg_4014;

assign grp_fu_3894_p1 = r_V_60_i_reg_4009;

assign grp_fu_3901_p1 = r_V_62_i_reg_4004;

assign grp_fu_3908_p1 = r_V_64_i_reg_3999;

assign grp_fu_3915_p1 = r_V_66_i_reg_3994;

assign grp_fu_3922_p1 = r_V_68_i_reg_3989;

assign grp_fu_3929_p1 = r_V_70_i_reg_3984;

assign grp_fu_3936_p1 = r_V_72_i_reg_3979;

assign grp_fu_3943_p1 = r_V_74_i_reg_3974;

assign grp_fu_3950_p1 = r_V_76_i_reg_3969;

assign grp_fu_3957_p1 = r_V_78_i_reg_3964;

assign icmp_ln414_10_fu_2842_p2 = ((trunc_ln414_10_fu_2839_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_11_fu_3015_p2 = ((trunc_ln414_11_fu_3012_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_12_fu_3188_p2 = ((trunc_ln414_12_fu_3185_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_13_fu_3361_p2 = ((trunc_ln414_13_fu_3358_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_14_fu_3534_p2 = ((trunc_ln414_14_fu_3531_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_15_fu_3707_p2 = ((trunc_ln414_15_fu_3704_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_1_fu_1289_p2 = ((trunc_ln414_1_fu_1286_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_2_fu_1457_p2 = ((trunc_ln414_2_fu_1454_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_3_fu_1625_p2 = ((trunc_ln414_3_fu_1622_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_4_fu_1793_p2 = ((trunc_ln414_4_fu_1790_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_5_fu_1961_p2 = ((trunc_ln414_5_fu_1958_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_6_fu_2129_p2 = ((trunc_ln414_6_fu_2126_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_7_fu_2297_p2 = ((trunc_ln414_7_fu_2294_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_8_fu_2496_p2 = ((trunc_ln414_8_fu_2493_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_9_fu_2669_p2 = ((trunc_ln414_9_fu_2666_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_1121_p2 = ((trunc_ln414_fu_1118_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_919_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_800_p4 == 10'd800) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_931_p2 = ((ap_phi_mux_w_phi_fu_822_p4 == 6'd41) ? 1'b1 : 1'b0);

assign lhs_11_fu_1915_p3 = {{top20_q1}, {7'd0}};

assign lhs_13_fu_2083_p3 = {{top21_q1}, {7'd0}};

assign lhs_15_fu_2251_p3 = {{top22_q1}, {7'd0}};

assign lhs_17_fu_2451_p3 = {{lhs_16_reg_4522}, {7'd0}};

assign lhs_19_fu_2624_p3 = {{lhs_18_reg_4527}, {7'd0}};

assign lhs_1_fu_1075_p3 = {{top_q1}, {7'd0}};

assign lhs_21_fu_2797_p3 = {{lhs_20_reg_4532}, {7'd0}};

assign lhs_23_fu_2970_p3 = {{lhs_22_reg_4537}, {7'd0}};

assign lhs_25_fu_3143_p3 = {{lhs_24_reg_4542}, {7'd0}};

assign lhs_27_fu_3316_p3 = {{lhs_26_reg_4547}, {7'd0}};

assign lhs_29_fu_3489_p3 = {{lhs_28_reg_4552}, {7'd0}};

assign lhs_31_fu_3662_p3 = {{lhs_30_reg_4557}, {7'd0}};

assign lhs_3_fu_1243_p3 = {{top16_q1}, {7'd0}};

assign lhs_5_fu_1411_p3 = {{top17_q1}, {7'd0}};

assign lhs_7_fu_1579_p3 = {{top18_q1}, {7'd0}};

assign lhs_9_fu_1747_p3 = {{top19_q1}, {7'd0}};

assign or_ln340_10_fu_2431_p2 = (underflow_14_reg_4457 | overflow_14_reg_4452);

assign or_ln340_11_fu_2435_p2 = (underflow_15_reg_4472 | overflow_15_reg_4467);

assign or_ln340_12_fu_2439_p2 = (underflow_16_reg_4487 | overflow_16_reg_4482);

assign or_ln340_13_fu_2443_p2 = (underflow_17_reg_4502 | overflow_17_reg_4497);

assign or_ln340_14_fu_2447_p2 = (underflow_18_reg_4517 | overflow_18_reg_4512);

assign or_ln340_15_fu_2618_p2 = (underflow_19_fu_2612_p2 | overflow_19_fu_2588_p2);

assign or_ln340_16_fu_2791_p2 = (underflow_20_fu_2785_p2 | overflow_20_fu_2761_p2);

assign or_ln340_17_fu_2964_p2 = (underflow_21_fu_2958_p2 | overflow_21_fu_2934_p2);

assign or_ln340_18_fu_3137_p2 = (underflow_22_fu_3131_p2 | overflow_22_fu_3107_p2);

assign or_ln340_19_fu_3310_p2 = (underflow_23_fu_3304_p2 | overflow_23_fu_3280_p2);

assign or_ln340_20_fu_3483_p2 = (underflow_24_fu_3477_p2 | overflow_24_fu_3453_p2);

assign or_ln340_21_fu_3656_p2 = (underflow_25_fu_3650_p2 | overflow_25_fu_3626_p2);

assign or_ln340_22_fu_3829_p2 = (underflow_26_fu_3823_p2 | overflow_26_fu_3799_p2);

assign or_ln340_8_fu_2423_p2 = (underflow_12_reg_4427 | overflow_12_reg_4422);

assign or_ln340_9_fu_2427_p2 = (underflow_13_reg_4442 | overflow_13_reg_4437);

assign or_ln340_fu_2419_p2 = (underflow_reg_4412 | overflow_reg_4407);

assign or_ln778_10_fu_2892_p2 = (xor_ln778_10_fu_2886_p2 | p_Result_161_fu_2864_p3);

assign or_ln778_11_fu_3065_p2 = (xor_ln778_11_fu_3059_p2 | p_Result_158_fu_3037_p3);

assign or_ln778_12_fu_3238_p2 = (xor_ln778_12_fu_3232_p2 | p_Result_155_fu_3210_p3);

assign or_ln778_13_fu_3411_p2 = (xor_ln778_13_fu_3405_p2 | p_Result_152_fu_3383_p3);

assign or_ln778_14_fu_3584_p2 = (xor_ln778_14_fu_3578_p2 | p_Result_149_fu_3556_p3);

assign or_ln778_15_fu_3757_p2 = (xor_ln778_15_fu_3751_p2 | p_Result_146_fu_3729_p3);

assign or_ln778_1_fu_1339_p2 = (xor_ln778_1_fu_1333_p2 | p_Result_188_fu_1311_p3);

assign or_ln778_2_fu_1507_p2 = (xor_ln778_2_fu_1501_p2 | p_Result_185_fu_1479_p3);

assign or_ln778_3_fu_1675_p2 = (xor_ln778_3_fu_1669_p2 | p_Result_182_fu_1647_p3);

assign or_ln778_4_fu_1843_p2 = (xor_ln778_4_fu_1837_p2 | p_Result_179_fu_1815_p3);

assign or_ln778_5_fu_2011_p2 = (xor_ln778_5_fu_2005_p2 | p_Result_176_fu_1983_p3);

assign or_ln778_6_fu_2179_p2 = (xor_ln778_6_fu_2173_p2 | p_Result_173_fu_2151_p3);

assign or_ln778_7_fu_2347_p2 = (xor_ln778_7_fu_2341_p2 | p_Result_170_fu_2319_p3);

assign or_ln778_8_fu_2546_p2 = (xor_ln778_8_fu_2540_p2 | p_Result_167_fu_2518_p3);

assign or_ln778_9_fu_2719_p2 = (xor_ln778_9_fu_2713_p2 | p_Result_164_fu_2691_p3);

assign or_ln778_fu_1171_p2 = (xor_ln778_fu_1165_p2 | p_Result_143_fu_1143_p3);

assign or_ln785_10_fu_2377_p2 = (xor_ln785_25_fu_2371_p2 | p_Result_170_fu_2319_p3);

assign or_ln785_11_fu_2576_p2 = (xor_ln785_27_fu_2570_p2 | p_Result_167_fu_2518_p3);

assign or_ln785_12_fu_2749_p2 = (xor_ln785_29_fu_2743_p2 | p_Result_164_fu_2691_p3);

assign or_ln785_13_fu_2922_p2 = (xor_ln785_31_fu_2916_p2 | p_Result_161_fu_2864_p3);

assign or_ln785_14_fu_3095_p2 = (xor_ln785_33_fu_3089_p2 | p_Result_158_fu_3037_p3);

assign or_ln785_15_fu_3268_p2 = (xor_ln785_35_fu_3262_p2 | p_Result_155_fu_3210_p3);

assign or_ln785_16_fu_3441_p2 = (xor_ln785_37_fu_3435_p2 | p_Result_152_fu_3383_p3);

assign or_ln785_17_fu_3614_p2 = (xor_ln785_39_fu_3608_p2 | p_Result_149_fu_3556_p3);

assign or_ln785_18_fu_3787_p2 = (xor_ln785_41_fu_3781_p2 | p_Result_146_fu_3729_p3);

assign or_ln785_4_fu_1369_p2 = (xor_ln785_13_fu_1363_p2 | p_Result_188_fu_1311_p3);

assign or_ln785_5_fu_1537_p2 = (xor_ln785_15_fu_1531_p2 | p_Result_185_fu_1479_p3);

assign or_ln785_6_fu_1705_p2 = (xor_ln785_17_fu_1699_p2 | p_Result_182_fu_1647_p3);

assign or_ln785_7_fu_1873_p2 = (xor_ln785_19_fu_1867_p2 | p_Result_179_fu_1815_p3);

assign or_ln785_8_fu_2041_p2 = (xor_ln785_21_fu_2035_p2 | p_Result_176_fu_1983_p3);

assign or_ln785_9_fu_2209_p2 = (xor_ln785_23_fu_2203_p2 | p_Result_173_fu_2151_p3);

assign or_ln785_fu_1201_p2 = (xor_ln785_fu_1195_p2 | p_Result_143_fu_1143_p3);

assign or_ln786_10_fu_2065_p2 = (and_ln786_10_fu_2059_p2 | and_ln781_5_fu_2023_p2);

assign or_ln786_11_fu_2233_p2 = (and_ln786_12_fu_2227_p2 | and_ln781_6_fu_2191_p2);

assign or_ln786_12_fu_2401_p2 = (and_ln786_14_fu_2395_p2 | and_ln781_7_fu_2359_p2);

assign or_ln786_13_fu_2600_p2 = (and_ln786_16_fu_2594_p2 | and_ln781_8_fu_2558_p2);

assign or_ln786_14_fu_2773_p2 = (and_ln786_18_fu_2767_p2 | and_ln781_9_fu_2731_p2);

assign or_ln786_15_fu_2946_p2 = (and_ln786_20_fu_2940_p2 | and_ln781_10_fu_2904_p2);

assign or_ln786_16_fu_3119_p2 = (and_ln786_22_fu_3113_p2 | and_ln781_11_fu_3077_p2);

assign or_ln786_17_fu_3292_p2 = (and_ln786_24_fu_3286_p2 | and_ln781_12_fu_3250_p2);

assign or_ln786_18_fu_3465_p2 = (and_ln786_26_fu_3459_p2 | and_ln781_13_fu_3423_p2);

assign or_ln786_19_fu_3638_p2 = (and_ln786_28_fu_3632_p2 | and_ln781_14_fu_3596_p2);

assign or_ln786_20_fu_3811_p2 = (and_ln786_30_fu_3805_p2 | and_ln781_15_fu_3769_p2);

assign or_ln786_6_fu_1393_p2 = (and_ln786_2_fu_1387_p2 | and_ln781_1_fu_1351_p2);

assign or_ln786_7_fu_1561_p2 = (and_ln786_4_fu_1555_p2 | and_ln781_2_fu_1519_p2);

assign or_ln786_8_fu_1729_p2 = (and_ln786_6_fu_1723_p2 | and_ln781_3_fu_1687_p2);

assign or_ln786_9_fu_1897_p2 = (and_ln786_8_fu_1891_p2 | and_ln781_4_fu_1855_p2);

assign or_ln786_fu_1225_p2 = (and_ln786_fu_1219_p2 | and_ln781_fu_1183_p2);

assign overflow_12_fu_1381_p2 = (xor_ln785_14_fu_1375_p2 & or_ln785_4_fu_1369_p2);

assign overflow_13_fu_1549_p2 = (xor_ln785_16_fu_1543_p2 & or_ln785_5_fu_1537_p2);

assign overflow_14_fu_1717_p2 = (xor_ln785_18_fu_1711_p2 & or_ln785_6_fu_1705_p2);

assign overflow_15_fu_1885_p2 = (xor_ln785_20_fu_1879_p2 & or_ln785_7_fu_1873_p2);

assign overflow_16_fu_2053_p2 = (xor_ln785_22_fu_2047_p2 & or_ln785_8_fu_2041_p2);

assign overflow_17_fu_2221_p2 = (xor_ln785_24_fu_2215_p2 & or_ln785_9_fu_2209_p2);

assign overflow_18_fu_2389_p2 = (xor_ln785_26_fu_2383_p2 & or_ln785_10_fu_2377_p2);

assign overflow_19_fu_2588_p2 = (xor_ln785_28_fu_2582_p2 & or_ln785_11_fu_2576_p2);

assign overflow_20_fu_2761_p2 = (xor_ln785_30_fu_2755_p2 & or_ln785_12_fu_2749_p2);

assign overflow_21_fu_2934_p2 = (xor_ln785_32_fu_2928_p2 & or_ln785_13_fu_2922_p2);

assign overflow_22_fu_3107_p2 = (xor_ln785_34_fu_3101_p2 & or_ln785_14_fu_3095_p2);

assign overflow_23_fu_3280_p2 = (xor_ln785_36_fu_3274_p2 & or_ln785_15_fu_3268_p2);

assign overflow_24_fu_3453_p2 = (xor_ln785_38_fu_3447_p2 & or_ln785_16_fu_3441_p2);

assign overflow_25_fu_3626_p2 = (xor_ln785_40_fu_3620_p2 & or_ln785_17_fu_3614_p2);

assign overflow_26_fu_3799_p2 = (xor_ln785_42_fu_3793_p2 & or_ln785_18_fu_3787_p2);

assign overflow_fu_1213_p2 = (xor_ln785_12_fu_1207_p2 & or_ln785_fu_1201_p2);

assign p_Result_142_fu_1110_p3 = ret_V_fu_1087_p2[32'd22];

assign p_Result_143_fu_1143_p3 = p_Val2_54_fu_1137_p2[32'd15];

assign p_Result_144_fu_3678_p3 = ret_V_14_fu_3673_p2[32'd23];

assign p_Result_145_fu_3696_p3 = ret_V_14_fu_3673_p2[32'd22];

assign p_Result_146_fu_3729_p3 = p_Val2_99_fu_3723_p2[32'd15];

assign p_Result_147_fu_3505_p3 = ret_V_15_fu_3500_p2[32'd23];

assign p_Result_148_fu_3523_p3 = ret_V_15_fu_3500_p2[32'd22];

assign p_Result_149_fu_3556_p3 = p_Val2_96_fu_3550_p2[32'd15];

assign p_Result_150_fu_3332_p3 = ret_V_16_fu_3327_p2[32'd23];

assign p_Result_151_fu_3350_p3 = ret_V_16_fu_3327_p2[32'd22];

assign p_Result_152_fu_3383_p3 = p_Val2_93_fu_3377_p2[32'd15];

assign p_Result_153_fu_3159_p3 = ret_V_17_fu_3154_p2[32'd23];

assign p_Result_154_fu_3177_p3 = ret_V_17_fu_3154_p2[32'd22];

assign p_Result_155_fu_3210_p3 = p_Val2_90_fu_3204_p2[32'd15];

assign p_Result_156_fu_2986_p3 = ret_V_18_fu_2981_p2[32'd23];

assign p_Result_157_fu_3004_p3 = ret_V_18_fu_2981_p2[32'd22];

assign p_Result_158_fu_3037_p3 = p_Val2_87_fu_3031_p2[32'd15];

assign p_Result_159_fu_2813_p3 = ret_V_19_fu_2808_p2[32'd23];

assign p_Result_160_fu_2831_p3 = ret_V_19_fu_2808_p2[32'd22];

assign p_Result_161_fu_2864_p3 = p_Val2_84_fu_2858_p2[32'd15];

assign p_Result_162_fu_2640_p3 = ret_V_20_fu_2635_p2[32'd23];

assign p_Result_163_fu_2658_p3 = ret_V_20_fu_2635_p2[32'd22];

assign p_Result_164_fu_2691_p3 = p_Val2_81_fu_2685_p2[32'd15];

assign p_Result_165_fu_2467_p3 = ret_V_21_fu_2462_p2[32'd23];

assign p_Result_166_fu_2485_p3 = ret_V_21_fu_2462_p2[32'd22];

assign p_Result_167_fu_2518_p3 = p_Val2_78_fu_2512_p2[32'd15];

assign p_Result_168_fu_2268_p3 = ret_V_22_fu_2263_p2[32'd23];

assign p_Result_169_fu_2286_p3 = ret_V_22_fu_2263_p2[32'd22];

assign p_Result_170_fu_2319_p3 = p_Val2_75_fu_2313_p2[32'd15];

assign p_Result_171_fu_2100_p3 = ret_V_23_fu_2095_p2[32'd23];

assign p_Result_172_fu_2118_p3 = ret_V_23_fu_2095_p2[32'd22];

assign p_Result_173_fu_2151_p3 = p_Val2_72_fu_2145_p2[32'd15];

assign p_Result_174_fu_1932_p3 = ret_V_24_fu_1927_p2[32'd23];

assign p_Result_175_fu_1950_p3 = ret_V_24_fu_1927_p2[32'd22];

assign p_Result_176_fu_1983_p3 = p_Val2_69_fu_1977_p2[32'd15];

assign p_Result_177_fu_1764_p3 = ret_V_25_fu_1759_p2[32'd23];

assign p_Result_178_fu_1782_p3 = ret_V_25_fu_1759_p2[32'd22];

assign p_Result_179_fu_1815_p3 = p_Val2_66_fu_1809_p2[32'd15];

assign p_Result_180_fu_1596_p3 = ret_V_26_fu_1591_p2[32'd23];

assign p_Result_181_fu_1614_p3 = ret_V_26_fu_1591_p2[32'd22];

assign p_Result_182_fu_1647_p3 = p_Val2_63_fu_1641_p2[32'd15];

assign p_Result_183_fu_1428_p3 = ret_V_27_fu_1423_p2[32'd23];

assign p_Result_184_fu_1446_p3 = ret_V_27_fu_1423_p2[32'd22];

assign p_Result_185_fu_1479_p3 = p_Val2_60_fu_1473_p2[32'd15];

assign p_Result_186_fu_1260_p3 = ret_V_28_fu_1255_p2[32'd23];

assign p_Result_187_fu_1278_p3 = ret_V_28_fu_1255_p2[32'd22];

assign p_Result_188_fu_1311_p3 = p_Val2_57_fu_1305_p2[32'd15];

assign p_Result_s_fu_1092_p3 = ret_V_fu_1087_p2[32'd23];

assign p_Val2_53_fu_1100_p4 = {{ret_V_fu_1087_p2[22:7]}};

assign p_Val2_54_fu_1137_p2 = (p_Val2_53_fu_1100_p4 + zext_ln415_fu_1133_p1);

assign p_Val2_56_fu_1268_p4 = {{ret_V_28_fu_1255_p2[22:7]}};

assign p_Val2_57_fu_1305_p2 = (p_Val2_56_fu_1268_p4 + zext_ln415_1_fu_1301_p1);

assign p_Val2_59_fu_1436_p4 = {{ret_V_27_fu_1423_p2[22:7]}};

assign p_Val2_60_fu_1473_p2 = (p_Val2_59_fu_1436_p4 + zext_ln415_2_fu_1469_p1);

assign p_Val2_62_fu_1604_p4 = {{ret_V_26_fu_1591_p2[22:7]}};

assign p_Val2_63_fu_1641_p2 = (p_Val2_62_fu_1604_p4 + zext_ln415_3_fu_1637_p1);

assign p_Val2_65_fu_1772_p4 = {{ret_V_25_fu_1759_p2[22:7]}};

assign p_Val2_66_fu_1809_p2 = (p_Val2_65_fu_1772_p4 + zext_ln415_4_fu_1805_p1);

assign p_Val2_68_fu_1940_p4 = {{ret_V_24_fu_1927_p2[22:7]}};

assign p_Val2_69_fu_1977_p2 = (p_Val2_68_fu_1940_p4 + zext_ln415_5_fu_1973_p1);

assign p_Val2_71_fu_2108_p4 = {{ret_V_23_fu_2095_p2[22:7]}};

assign p_Val2_72_fu_2145_p2 = (p_Val2_71_fu_2108_p4 + zext_ln415_6_fu_2141_p1);

assign p_Val2_74_fu_2276_p4 = {{ret_V_22_fu_2263_p2[22:7]}};

assign p_Val2_75_fu_2313_p2 = (p_Val2_74_fu_2276_p4 + zext_ln415_7_fu_2309_p1);

assign p_Val2_77_fu_2475_p4 = {{ret_V_21_fu_2462_p2[22:7]}};

assign p_Val2_78_fu_2512_p2 = (p_Val2_77_fu_2475_p4 + zext_ln415_8_fu_2508_p1);

assign p_Val2_80_fu_2648_p4 = {{ret_V_20_fu_2635_p2[22:7]}};

assign p_Val2_81_fu_2685_p2 = (p_Val2_80_fu_2648_p4 + zext_ln415_9_fu_2681_p1);

assign p_Val2_83_fu_2821_p4 = {{ret_V_19_fu_2808_p2[22:7]}};

assign p_Val2_84_fu_2858_p2 = (p_Val2_83_fu_2821_p4 + zext_ln415_10_fu_2854_p1);

assign p_Val2_86_fu_2994_p4 = {{ret_V_18_fu_2981_p2[22:7]}};

assign p_Val2_87_fu_3031_p2 = (p_Val2_86_fu_2994_p4 + zext_ln415_11_fu_3027_p1);

assign p_Val2_89_fu_3167_p4 = {{ret_V_17_fu_3154_p2[22:7]}};

assign p_Val2_90_fu_3204_p2 = (p_Val2_89_fu_3167_p4 + zext_ln415_12_fu_3200_p1);

assign p_Val2_92_fu_3340_p4 = {{ret_V_16_fu_3327_p2[22:7]}};

assign p_Val2_93_fu_3377_p2 = (p_Val2_92_fu_3340_p4 + zext_ln415_13_fu_3373_p1);

assign p_Val2_95_fu_3513_p4 = {{ret_V_15_fu_3500_p2[22:7]}};

assign p_Val2_96_fu_3550_p2 = (p_Val2_95_fu_3513_p4 + zext_ln415_14_fu_3546_p1);

assign p_Val2_98_fu_3686_p4 = {{ret_V_14_fu_3673_p2[22:7]}};

assign p_Val2_99_fu_3723_p2 = (p_Val2_98_fu_3686_p4 + zext_ln415_15_fu_3719_p1);

assign p_cast1_i_i_fu_909_p1 = $signed(empty_923_fu_903_p2);

assign p_cast_i_i_fu_899_p1 = $signed(empty_fu_893_p2);

assign r_V_50_i_fu_885_p1 = $signed(p_read14);

assign r_V_52_i_fu_881_p1 = $signed(p_read13);

assign r_V_54_i_fu_877_p1 = $signed(p_read12);

assign r_V_56_i_fu_873_p1 = $signed(p_read11);

assign r_V_58_i_fu_869_p1 = $signed(p_read10);

assign r_V_60_i_fu_865_p1 = $signed(p_read9);

assign r_V_62_i_fu_861_p1 = $signed(p_read8);

assign r_V_64_i_fu_857_p1 = $signed(p_read7);

assign r_V_66_i_fu_853_p1 = $signed(p_read6);

assign r_V_68_i_fu_849_p1 = $signed(p_read5);

assign r_V_70_i_fu_845_p1 = $signed(p_read4);

assign r_V_72_i_fu_841_p1 = $signed(p_read3);

assign r_V_74_i_fu_837_p1 = $signed(p_read2);

assign r_V_76_i_fu_833_p1 = $signed(p_read1);

assign r_V_78_i_fu_829_p1 = $signed(p_read);

assign r_V_i_fu_889_p1 = $signed(p_read15);

assign ret_V_14_fu_3673_p2 = ($signed(grp_fu_3957_p2) + $signed(sext_ln1192_18_fu_3669_p1));

assign ret_V_15_fu_3500_p2 = ($signed(grp_fu_3950_p2) + $signed(sext_ln1192_17_fu_3496_p1));

assign ret_V_16_fu_3327_p2 = ($signed(grp_fu_3943_p2) + $signed(sext_ln1192_16_fu_3323_p1));

assign ret_V_17_fu_3154_p2 = ($signed(grp_fu_3936_p2) + $signed(sext_ln1192_15_fu_3150_p1));

assign ret_V_18_fu_2981_p2 = ($signed(grp_fu_3929_p2) + $signed(sext_ln1192_14_fu_2977_p1));

assign ret_V_19_fu_2808_p2 = ($signed(grp_fu_3922_p2) + $signed(sext_ln1192_13_fu_2804_p1));

assign ret_V_20_fu_2635_p2 = ($signed(grp_fu_3915_p2) + $signed(sext_ln1192_12_fu_2631_p1));

assign ret_V_21_fu_2462_p2 = ($signed(grp_fu_3908_p2) + $signed(sext_ln1192_11_fu_2458_p1));

assign ret_V_22_fu_2263_p2 = ($signed(grp_fu_3901_p2) + $signed(sext_ln1192_10_fu_2259_p1));

assign ret_V_23_fu_2095_p2 = ($signed(grp_fu_3894_p2) + $signed(sext_ln1192_9_fu_2091_p1));

assign ret_V_24_fu_1927_p2 = ($signed(grp_fu_3887_p2) + $signed(sext_ln1192_8_fu_1923_p1));

assign ret_V_25_fu_1759_p2 = ($signed(grp_fu_3880_p2) + $signed(sext_ln1192_7_fu_1755_p1));

assign ret_V_26_fu_1591_p2 = ($signed(grp_fu_3873_p2) + $signed(sext_ln1192_6_fu_1587_p1));

assign ret_V_27_fu_1423_p2 = ($signed(grp_fu_3866_p2) + $signed(sext_ln1192_5_fu_1419_p1));

assign ret_V_28_fu_1255_p2 = ($signed(grp_fu_3859_p2) + $signed(sext_ln1192_4_fu_1251_p1));

assign ret_V_fu_1087_p2 = ($signed(grp_fu_3852_p2) + $signed(sext_ln1192_fu_1083_p1));

assign select_ln45_1_fu_945_p3 = ((icmp_ln46_fu_931_p2[0:0] == 1'b1) ? add_ln45_fu_925_p2 : ap_phi_mux_h_phi_fu_811_p4);

assign select_ln45_fu_937_p3 = ((icmp_ln46_fu_931_p2[0:0] == 1'b1) ? 6'd1 : ap_phi_mux_w_phi_fu_822_p4);

assign sext_ln1192_10_fu_2259_p1 = $signed(lhs_15_fu_2251_p3);

assign sext_ln1192_11_fu_2458_p1 = $signed(lhs_17_fu_2451_p3);

assign sext_ln1192_12_fu_2631_p1 = $signed(lhs_19_fu_2624_p3);

assign sext_ln1192_13_fu_2804_p1 = $signed(lhs_21_fu_2797_p3);

assign sext_ln1192_14_fu_2977_p1 = $signed(lhs_23_fu_2970_p3);

assign sext_ln1192_15_fu_3150_p1 = $signed(lhs_25_fu_3143_p3);

assign sext_ln1192_16_fu_3323_p1 = $signed(lhs_27_fu_3316_p3);

assign sext_ln1192_17_fu_3496_p1 = $signed(lhs_29_fu_3489_p3);

assign sext_ln1192_18_fu_3669_p1 = $signed(lhs_31_fu_3662_p3);

assign sext_ln1192_4_fu_1251_p1 = $signed(lhs_3_fu_1243_p3);

assign sext_ln1192_5_fu_1419_p1 = $signed(lhs_5_fu_1411_p3);

assign sext_ln1192_6_fu_1587_p1 = $signed(lhs_7_fu_1579_p3);

assign sext_ln1192_7_fu_1755_p1 = $signed(lhs_9_fu_1747_p3);

assign sext_ln1192_8_fu_1923_p1 = $signed(lhs_11_fu_1915_p3);

assign sext_ln1192_9_fu_2091_p1 = $signed(lhs_13_fu_2083_p3);

assign sext_ln1192_fu_1083_p1 = $signed(lhs_1_fu_1075_p3);

assign top16_address1 = zext_ln727_1_fu_1056_p1;

assign top17_address1 = zext_ln727_1_fu_1056_p1;

assign top18_address1 = zext_ln727_1_fu_1056_p1;

assign top19_address1 = zext_ln727_1_fu_1056_p1;

assign top20_address1 = zext_ln727_1_fu_1056_p1;

assign top21_address1 = zext_ln727_1_fu_1056_p1;

assign top22_address1 = zext_ln727_1_fu_1056_p1;

assign top23_address0 = top23_addr_reg_4348_pp0_iter4_reg;

assign top23_d1 = p_Val2_78_reg_4594;

assign top24_address0 = top24_addr_reg_4342_pp0_iter4_reg;

assign top24_d1 = p_Val2_81_reg_4611;

assign top25_address0 = top25_addr_reg_4336_pp0_iter4_reg;

assign top25_d1 = p_Val2_84_reg_4628;

assign top26_address0 = top26_addr_reg_4330_pp0_iter4_reg;

assign top26_d1 = p_Val2_87_reg_4645;

assign top27_address0 = top27_addr_reg_4324_pp0_iter4_reg;

assign top27_d1 = p_Val2_90_reg_4662;

assign top28_address0 = top28_addr_reg_4318_pp0_iter4_reg;

assign top28_d1 = p_Val2_93_reg_4679;

assign top29_address0 = top29_addr_reg_4312_pp0_iter4_reg;

assign top29_d1 = p_Val2_96_reg_4696;

assign top30_address0 = top30_addr_reg_4306_pp0_iter4_reg;

assign top30_d1 = p_Val2_99_reg_4713;

assign top_address1 = zext_ln727_1_fu_1056_p1;

assign trunc_ln414_10_fu_2839_p1 = grp_fu_3922_p2[6:0];

assign trunc_ln414_11_fu_3012_p1 = grp_fu_3929_p2[6:0];

assign trunc_ln414_12_fu_3185_p1 = grp_fu_3936_p2[6:0];

assign trunc_ln414_13_fu_3358_p1 = grp_fu_3943_p2[6:0];

assign trunc_ln414_14_fu_3531_p1 = grp_fu_3950_p2[6:0];

assign trunc_ln414_15_fu_3704_p1 = grp_fu_3957_p2[6:0];

assign trunc_ln414_1_fu_1286_p1 = grp_fu_3859_p2[6:0];

assign trunc_ln414_2_fu_1454_p1 = grp_fu_3866_p2[6:0];

assign trunc_ln414_3_fu_1622_p1 = grp_fu_3873_p2[6:0];

assign trunc_ln414_4_fu_1790_p1 = grp_fu_3880_p2[6:0];

assign trunc_ln414_5_fu_1958_p1 = grp_fu_3887_p2[6:0];

assign trunc_ln414_6_fu_2126_p1 = grp_fu_3894_p2[6:0];

assign trunc_ln414_7_fu_2294_p1 = grp_fu_3901_p2[6:0];

assign trunc_ln414_8_fu_2493_p1 = grp_fu_3908_p2[6:0];

assign trunc_ln414_9_fu_2666_p1 = grp_fu_3915_p2[6:0];

assign trunc_ln414_fu_1118_p1 = grp_fu_3852_p2[6:0];

assign underflow_12_fu_1405_p2 = (xor_ln786_8_fu_1399_p2 & p_Result_186_fu_1260_p3);

assign underflow_13_fu_1573_p2 = (xor_ln786_9_fu_1567_p2 & p_Result_183_fu_1428_p3);

assign underflow_14_fu_1741_p2 = (xor_ln786_10_fu_1735_p2 & p_Result_180_fu_1596_p3);

assign underflow_15_fu_1909_p2 = (xor_ln786_11_fu_1903_p2 & p_Result_177_fu_1764_p3);

assign underflow_16_fu_2077_p2 = (xor_ln786_12_fu_2071_p2 & p_Result_174_fu_1932_p3);

assign underflow_17_fu_2245_p2 = (xor_ln786_13_fu_2239_p2 & p_Result_171_fu_2100_p3);

assign underflow_18_fu_2413_p2 = (xor_ln786_14_fu_2407_p2 & p_Result_168_fu_2268_p3);

assign underflow_19_fu_2612_p2 = (xor_ln786_15_fu_2606_p2 & p_Result_165_fu_2467_p3);

assign underflow_20_fu_2785_p2 = (xor_ln786_16_fu_2779_p2 & p_Result_162_fu_2640_p3);

assign underflow_21_fu_2958_p2 = (xor_ln786_17_fu_2952_p2 & p_Result_159_fu_2813_p3);

assign underflow_22_fu_3131_p2 = (xor_ln786_18_fu_3125_p2 & p_Result_156_fu_2986_p3);

assign underflow_23_fu_3304_p2 = (xor_ln786_19_fu_3298_p2 & p_Result_153_fu_3159_p3);

assign underflow_24_fu_3477_p2 = (xor_ln786_20_fu_3471_p2 & p_Result_150_fu_3332_p3);

assign underflow_25_fu_3650_p2 = (xor_ln786_21_fu_3644_p2 & p_Result_147_fu_3505_p3);

assign underflow_26_fu_3823_p2 = (xor_ln786_22_fu_3817_p2 & p_Result_144_fu_3678_p3);

assign underflow_fu_1237_p2 = (xor_ln786_fu_1231_p2 & p_Result_s_fu_1092_p3);

assign xor_ln416_10_fu_2872_p2 = (p_Result_161_fu_2864_p3 ^ 1'd1);

assign xor_ln416_11_fu_3045_p2 = (p_Result_158_fu_3037_p3 ^ 1'd1);

assign xor_ln416_12_fu_3218_p2 = (p_Result_155_fu_3210_p3 ^ 1'd1);

assign xor_ln416_13_fu_3391_p2 = (p_Result_152_fu_3383_p3 ^ 1'd1);

assign xor_ln416_14_fu_3564_p2 = (p_Result_149_fu_3556_p3 ^ 1'd1);

assign xor_ln416_15_fu_3737_p2 = (p_Result_146_fu_3729_p3 ^ 1'd1);

assign xor_ln416_1_fu_1319_p2 = (p_Result_188_fu_1311_p3 ^ 1'd1);

assign xor_ln416_2_fu_1487_p2 = (p_Result_185_fu_1479_p3 ^ 1'd1);

assign xor_ln416_3_fu_1655_p2 = (p_Result_182_fu_1647_p3 ^ 1'd1);

assign xor_ln416_4_fu_1823_p2 = (p_Result_179_fu_1815_p3 ^ 1'd1);

assign xor_ln416_5_fu_1991_p2 = (p_Result_176_fu_1983_p3 ^ 1'd1);

assign xor_ln416_6_fu_2159_p2 = (p_Result_173_fu_2151_p3 ^ 1'd1);

assign xor_ln416_7_fu_2327_p2 = (p_Result_170_fu_2319_p3 ^ 1'd1);

assign xor_ln416_8_fu_2526_p2 = (p_Result_167_fu_2518_p3 ^ 1'd1);

assign xor_ln416_9_fu_2699_p2 = (p_Result_164_fu_2691_p3 ^ 1'd1);

assign xor_ln416_fu_1151_p2 = (p_Result_143_fu_1143_p3 ^ 1'd1);

assign xor_ln778_10_fu_2886_p2 = (p_Result_160_fu_2831_p3 ^ 1'd1);

assign xor_ln778_11_fu_3059_p2 = (p_Result_157_fu_3004_p3 ^ 1'd1);

assign xor_ln778_12_fu_3232_p2 = (p_Result_154_fu_3177_p3 ^ 1'd1);

assign xor_ln778_13_fu_3405_p2 = (p_Result_151_fu_3350_p3 ^ 1'd1);

assign xor_ln778_14_fu_3578_p2 = (p_Result_148_fu_3523_p3 ^ 1'd1);

assign xor_ln778_15_fu_3751_p2 = (p_Result_145_fu_3696_p3 ^ 1'd1);

assign xor_ln778_1_fu_1333_p2 = (p_Result_187_fu_1278_p3 ^ 1'd1);

assign xor_ln778_2_fu_1501_p2 = (p_Result_184_fu_1446_p3 ^ 1'd1);

assign xor_ln778_3_fu_1669_p2 = (p_Result_181_fu_1614_p3 ^ 1'd1);

assign xor_ln778_4_fu_1837_p2 = (p_Result_178_fu_1782_p3 ^ 1'd1);

assign xor_ln778_5_fu_2005_p2 = (p_Result_175_fu_1950_p3 ^ 1'd1);

assign xor_ln778_6_fu_2173_p2 = (p_Result_172_fu_2118_p3 ^ 1'd1);

assign xor_ln778_7_fu_2341_p2 = (p_Result_169_fu_2286_p3 ^ 1'd1);

assign xor_ln778_8_fu_2540_p2 = (p_Result_166_fu_2485_p3 ^ 1'd1);

assign xor_ln778_9_fu_2713_p2 = (p_Result_163_fu_2658_p3 ^ 1'd1);

assign xor_ln778_fu_1165_p2 = (p_Result_142_fu_1110_p3 ^ 1'd1);

assign xor_ln785_12_fu_1207_p2 = (p_Result_s_fu_1092_p3 ^ 1'd1);

assign xor_ln785_13_fu_1363_p2 = (xor_ln785_44_fu_1357_p2 ^ 1'd1);

assign xor_ln785_14_fu_1375_p2 = (p_Result_186_fu_1260_p3 ^ 1'd1);

assign xor_ln785_15_fu_1531_p2 = (xor_ln785_45_fu_1525_p2 ^ 1'd1);

assign xor_ln785_16_fu_1543_p2 = (p_Result_183_fu_1428_p3 ^ 1'd1);

assign xor_ln785_17_fu_1699_p2 = (xor_ln785_46_fu_1693_p2 ^ 1'd1);

assign xor_ln785_18_fu_1711_p2 = (p_Result_180_fu_1596_p3 ^ 1'd1);

assign xor_ln785_19_fu_1867_p2 = (xor_ln785_47_fu_1861_p2 ^ 1'd1);

assign xor_ln785_20_fu_1879_p2 = (p_Result_177_fu_1764_p3 ^ 1'd1);

assign xor_ln785_21_fu_2035_p2 = (xor_ln785_48_fu_2029_p2 ^ 1'd1);

assign xor_ln785_22_fu_2047_p2 = (p_Result_174_fu_1932_p3 ^ 1'd1);

assign xor_ln785_23_fu_2203_p2 = (xor_ln785_49_fu_2197_p2 ^ 1'd1);

assign xor_ln785_24_fu_2215_p2 = (p_Result_171_fu_2100_p3 ^ 1'd1);

assign xor_ln785_25_fu_2371_p2 = (xor_ln785_50_fu_2365_p2 ^ 1'd1);

assign xor_ln785_26_fu_2383_p2 = (p_Result_168_fu_2268_p3 ^ 1'd1);

assign xor_ln785_27_fu_2570_p2 = (xor_ln785_51_fu_2564_p2 ^ 1'd1);

assign xor_ln785_28_fu_2582_p2 = (p_Result_165_fu_2467_p3 ^ 1'd1);

assign xor_ln785_29_fu_2743_p2 = (xor_ln785_52_fu_2737_p2 ^ 1'd1);

assign xor_ln785_30_fu_2755_p2 = (p_Result_162_fu_2640_p3 ^ 1'd1);

assign xor_ln785_31_fu_2916_p2 = (xor_ln785_53_fu_2910_p2 ^ 1'd1);

assign xor_ln785_32_fu_2928_p2 = (p_Result_159_fu_2813_p3 ^ 1'd1);

assign xor_ln785_33_fu_3089_p2 = (xor_ln785_54_fu_3083_p2 ^ 1'd1);

assign xor_ln785_34_fu_3101_p2 = (p_Result_156_fu_2986_p3 ^ 1'd1);

assign xor_ln785_35_fu_3262_p2 = (xor_ln785_55_fu_3256_p2 ^ 1'd1);

assign xor_ln785_36_fu_3274_p2 = (p_Result_153_fu_3159_p3 ^ 1'd1);

assign xor_ln785_37_fu_3435_p2 = (xor_ln785_56_fu_3429_p2 ^ 1'd1);

assign xor_ln785_38_fu_3447_p2 = (p_Result_150_fu_3332_p3 ^ 1'd1);

assign xor_ln785_39_fu_3608_p2 = (xor_ln785_57_fu_3602_p2 ^ 1'd1);

assign xor_ln785_40_fu_3620_p2 = (p_Result_147_fu_3505_p3 ^ 1'd1);

assign xor_ln785_41_fu_3781_p2 = (xor_ln785_58_fu_3775_p2 ^ 1'd1);

assign xor_ln785_42_fu_3793_p2 = (p_Result_144_fu_3678_p3 ^ 1'd1);

assign xor_ln785_43_fu_1189_p2 = (or_ln778_fu_1171_p2 ^ Range2_all_ones_fu_1157_p3);

assign xor_ln785_44_fu_1357_p2 = (or_ln778_1_fu_1339_p2 ^ Range2_all_ones_17_fu_1325_p3);

assign xor_ln785_45_fu_1525_p2 = (or_ln778_2_fu_1507_p2 ^ Range2_all_ones_16_fu_1493_p3);

assign xor_ln785_46_fu_1693_p2 = (or_ln778_3_fu_1675_p2 ^ Range2_all_ones_15_fu_1661_p3);

assign xor_ln785_47_fu_1861_p2 = (or_ln778_4_fu_1843_p2 ^ Range2_all_ones_14_fu_1829_p3);

assign xor_ln785_48_fu_2029_p2 = (or_ln778_5_fu_2011_p2 ^ Range2_all_ones_13_fu_1997_p3);

assign xor_ln785_49_fu_2197_p2 = (or_ln778_6_fu_2179_p2 ^ Range2_all_ones_12_fu_2165_p3);

assign xor_ln785_50_fu_2365_p2 = (or_ln778_7_fu_2347_p2 ^ Range2_all_ones_11_fu_2333_p3);

assign xor_ln785_51_fu_2564_p2 = (or_ln778_8_fu_2546_p2 ^ Range2_all_ones_10_fu_2532_p3);

assign xor_ln785_52_fu_2737_p2 = (or_ln778_9_fu_2719_p2 ^ Range2_all_ones_9_fu_2705_p3);

assign xor_ln785_53_fu_2910_p2 = (or_ln778_10_fu_2892_p2 ^ Range2_all_ones_8_fu_2878_p3);

assign xor_ln785_54_fu_3083_p2 = (or_ln778_11_fu_3065_p2 ^ Range2_all_ones_7_fu_3051_p3);

assign xor_ln785_55_fu_3256_p2 = (or_ln778_12_fu_3238_p2 ^ Range2_all_ones_6_fu_3224_p3);

assign xor_ln785_56_fu_3429_p2 = (or_ln778_13_fu_3411_p2 ^ Range2_all_ones_5_fu_3397_p3);

assign xor_ln785_57_fu_3602_p2 = (or_ln778_14_fu_3584_p2 ^ Range2_all_ones_4_fu_3570_p3);

assign xor_ln785_58_fu_3775_p2 = (or_ln778_15_fu_3757_p2 ^ Range2_all_ones_3_fu_3743_p3);

assign xor_ln785_fu_1195_p2 = (xor_ln785_43_fu_1189_p2 ^ 1'd1);

assign xor_ln786_10_fu_1735_p2 = (or_ln786_8_fu_1729_p2 ^ 1'd1);

assign xor_ln786_11_fu_1903_p2 = (or_ln786_9_fu_1897_p2 ^ 1'd1);

assign xor_ln786_12_fu_2071_p2 = (or_ln786_10_fu_2065_p2 ^ 1'd1);

assign xor_ln786_13_fu_2239_p2 = (or_ln786_11_fu_2233_p2 ^ 1'd1);

assign xor_ln786_14_fu_2407_p2 = (or_ln786_12_fu_2401_p2 ^ 1'd1);

assign xor_ln786_15_fu_2606_p2 = (or_ln786_13_fu_2600_p2 ^ 1'd1);

assign xor_ln786_16_fu_2779_p2 = (or_ln786_14_fu_2773_p2 ^ 1'd1);

assign xor_ln786_17_fu_2952_p2 = (or_ln786_15_fu_2946_p2 ^ 1'd1);

assign xor_ln786_18_fu_3125_p2 = (or_ln786_16_fu_3119_p2 ^ 1'd1);

assign xor_ln786_19_fu_3298_p2 = (or_ln786_17_fu_3292_p2 ^ 1'd1);

assign xor_ln786_20_fu_3471_p2 = (or_ln786_18_fu_3465_p2 ^ 1'd1);

assign xor_ln786_21_fu_3644_p2 = (or_ln786_19_fu_3638_p2 ^ 1'd1);

assign xor_ln786_22_fu_3817_p2 = (or_ln786_20_fu_3811_p2 ^ 1'd1);

assign xor_ln786_8_fu_1399_p2 = (or_ln786_6_fu_1393_p2 ^ 1'd1);

assign xor_ln786_9_fu_1567_p2 = (or_ln786_7_fu_1561_p2 ^ 1'd1);

assign xor_ln786_fu_1231_p2 = (or_ln786_fu_1225_p2 ^ 1'd1);

assign zext_ln1118_1_fu_981_p1 = grp_fu_3835_p3;

assign zext_ln415_10_fu_2854_p1 = and_ln414_10_fu_2848_p2;

assign zext_ln415_11_fu_3027_p1 = and_ln414_11_fu_3021_p2;

assign zext_ln415_12_fu_3200_p1 = and_ln414_12_fu_3194_p2;

assign zext_ln415_13_fu_3373_p1 = and_ln414_13_fu_3367_p2;

assign zext_ln415_14_fu_3546_p1 = and_ln414_14_fu_3540_p2;

assign zext_ln415_15_fu_3719_p1 = and_ln414_15_fu_3713_p2;

assign zext_ln415_1_fu_1301_p1 = and_ln414_1_fu_1295_p2;

assign zext_ln415_2_fu_1469_p1 = and_ln414_2_fu_1463_p2;

assign zext_ln415_3_fu_1637_p1 = and_ln414_3_fu_1631_p2;

assign zext_ln415_4_fu_1805_p1 = and_ln414_4_fu_1799_p2;

assign zext_ln415_5_fu_1973_p1 = and_ln414_5_fu_1967_p2;

assign zext_ln415_6_fu_2141_p1 = and_ln414_6_fu_2135_p2;

assign zext_ln415_7_fu_2309_p1 = and_ln414_7_fu_2303_p2;

assign zext_ln415_8_fu_2508_p1 = and_ln414_8_fu_2502_p2;

assign zext_ln415_9_fu_2681_p1 = and_ln414_9_fu_2675_p2;

assign zext_ln415_fu_1133_p1 = and_ln414_fu_1127_p2;

assign zext_ln727_1_fu_1056_p1 = add_ln727_reg_4181;

endmodule //mobilenet_VITIS_LOOP_45_3_proc
