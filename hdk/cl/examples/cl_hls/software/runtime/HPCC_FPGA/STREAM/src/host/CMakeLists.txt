add_subdirectory(../../../shared ${CMAKE_BINARY_DIR}/lib/hpccbase)
set(HOST_SOURCE execution_default.cpp stream_benchmark.cpp)

if (INTELFPGAOPENCL_FOUND)
    add_library(stream_intel STATIC ${HOST_SOURCE})
    target_include_directories(stream_intel PRIVATE ${HPCCBaseLibrary_INCLUDE_DIRS} ${CMAKE_BINARY_DIR}/src/common ${IntelFPGAOpenCL_INCLUDE_DIRS})
    target_include_directories(stream_intel PUBLIC ${CMAKE_SOURCE_DIR}/src/host)
    add_executable(STREAM_FPGA_intel main.cpp)
    target_link_libraries(stream_intel "${IntelFPGAOpenCL_LIBRARIES}" "${OpenMP_CXX_FLAGS}")
    target_link_libraries(stream_intel hpcc_fpga_base)
    target_link_libraries(STREAM_FPGA_intel stream_intel)
    if (USE_SVM)
        target_compile_definitions(stream_intel PRIVATE -DCL_VERSION_2_0)
    endif()
    target_compile_definitions(stream_intel PRIVATE -DINTEL_FPGA)
    target_compile_options(stream_intel PRIVATE "${OpenMP_CXX_FLAGS}")
    add_test(NAME test_intel_host_executable COMMAND $<TARGET_FILE:STREAM_FPGA_intel> -h)
endif()

if (Vitis_FOUND)
    add_library(stream_xilinx STATIC ${HOST_SOURCE})
    target_include_directories(stream_xilinx PRIVATE ${HPCCBaseLibrary_INCLUDE_DIRS} ${CMAKE_BINARY_DIR}/src/common ${Vitis_INCLUDE_DIRS})
    target_include_directories(stream_xilinx PUBLIC ${CMAKE_SOURCE_DIR}/src/host)
    add_executable(STREAM_FPGA_xilinx main.cpp)
    target_link_libraries(stream_xilinx ${Vitis_LIBRARIES} "${OpenMP_CXX_FLAGS}")
    target_link_libraries(stream_xilinx hpcc_fpga_base)
    target_link_libraries(STREAM_FPGA_xilinx stream_xilinx)
    target_compile_definitions(stream_xilinx PRIVATE -DXILINX_FPGA)
    target_compile_options(stream_xilinx PRIVATE "${OpenMP_CXX_FLAGS}")
    add_test(NAME test_xilinx_host_executable COMMAND $<TARGET_FILE:STREAM_FPGA_xilinx> -h)
endif()

if (USE_FPGARR)
    add_library(stream_aws_fpgarr STATIC ${HOST_SOURCE})
    target_include_directories(stream_aws_fpgarr PRIVATE ${HPCCBaseLibrary_INCLUDE_DIRS} ${CMAKE_BINARY_DIR}/src/common ${Vitis_INCLUDE_DIRS})
    target_include_directories(stream_aws_fpgarr PUBLIC ${CMAKE_SOURCE_DIR}/src/host)
    target_include_directories(stream_aws_fpgarr PUBLIC ${CL_FPGARR_OPENCL_INC})
    target_link_libraries(stream_aws_fpgarr PUBLIC hpcc_fpga_base)
    target_compile_definitions(stream_aws_fpgarr PRIVATE -DXILINX_FPGA)
    add_library(stream_aws_fpgarr_main OBJECT main.cpp)
    target_include_directories(stream_aws_fpgarr_main PUBLIC ${CL_FPGARR_OPENCL_INC})
    target_link_libraries(stream_aws_fpgarr_main stream_aws_fpgarr)
    add_custom_target(fpgarr_gen DEPENDS stream_aws_fpgarr
        stream_aws_fpgarr_main hpcc_fpga_base)
    add_custom_command(TARGET fpgarr_gen POST_BUILD COMMAND
        ${CMAKE_COMMAND} -E copy $<TARGET_FILE:stream_aws_fpgarr>
        $<TARGET_FILE:hpcc_fpga_base> $<TARGET_OBJECTS:stream_aws_fpgarr_main> ${CMAKE_BINARY_DIR})
endif()
