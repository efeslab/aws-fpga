// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rendering_rasterization2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        fragment_x_V23_address0,
        fragment_x_V23_ce0,
        fragment_x_V23_we0,
        fragment_x_V23_d0,
        fragment_y_V24_address0,
        fragment_y_V24_ce0,
        fragment_y_V24_we0,
        fragment_y_V24_d0,
        fragment_z_V25_address0,
        fragment_z_V25_ce0,
        fragment_z_V25_we0,
        fragment_z_V25_d0,
        fragment_color_V26_address0,
        fragment_color_V26_ce0,
        fragment_color_V26_we0,
        fragment_color_V26_d0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state26 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [0:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [15:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
output  [8:0] fragment_x_V23_address0;
output   fragment_x_V23_ce0;
output   fragment_x_V23_we0;
output  [7:0] fragment_x_V23_d0;
output  [8:0] fragment_y_V24_address0;
output   fragment_y_V24_ce0;
output   fragment_y_V24_we0;
output  [7:0] fragment_y_V24_d0;
output  [8:0] fragment_z_V25_address0;
output   fragment_z_V25_ce0;
output   fragment_z_V25_we0;
output  [7:0] fragment_z_V25_d0;
output  [8:0] fragment_color_V26_address0;
output   fragment_color_V26_ce0;
output   fragment_color_V26_we0;
output  [5:0] fragment_color_V26_d0;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fragment_x_V23_ce0;
reg fragment_x_V23_we0;
reg fragment_y_V24_ce0;
reg fragment_y_V24_we0;
reg fragment_z_V25_ce0;
reg fragment_z_V25_we0;
reg fragment_color_V26_ce0;
reg fragment_color_V26_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] k_V_reg_191;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] p_read_11_read_fu_132_p2;
wire   [15:0] max_min_4_load_cast_i_fu_214_p1;
reg   [15:0] max_min_4_load_cast_i_reg_515;
wire   [8:0] triangle_2d_same_y1_cast_i_fu_218_p1;
reg   [8:0] triangle_2d_same_y1_cast_i_reg_521;
wire   [8:0] triangle_2d_same_y0_cast_i_fu_222_p1;
reg   [8:0] triangle_2d_same_y0_cast_i_reg_526;
wire  signed [17:0] rhs_i_fu_232_p1;
reg  signed [17:0] rhs_i_reg_531;
wire   [8:0] triangle_2d_same_x1_cast_i_fu_236_p1;
reg   [8:0] triangle_2d_same_x1_cast_i_reg_536;
wire   [8:0] triangle_2d_same_x0_cast_i_fu_240_p1;
reg   [8:0] triangle_2d_same_x0_cast_i_reg_541;
wire  signed [17:0] rhs_1_i_fu_250_p1;
reg  signed [17:0] rhs_1_i_reg_546;
wire   [8:0] triangle_2d_same_y2_cast_i_fu_254_p1;
reg   [8:0] triangle_2d_same_y2_cast_i_reg_551;
wire  signed [17:0] rhs_3_i_fu_264_p1;
reg  signed [17:0] rhs_3_i_reg_556;
wire   [8:0] triangle_2d_same_x2_cast_i_fu_268_p1;
reg   [8:0] triangle_2d_same_x2_cast_i_reg_561;
wire  signed [17:0] rhs_4_i_fu_278_p1;
reg  signed [17:0] rhs_4_i_reg_566;
wire  signed [17:0] rhs_6_i_fu_288_p1;
reg  signed [17:0] rhs_6_i_reg_571;
wire  signed [17:0] rhs_7_i_fu_298_p1;
reg  signed [17:0] rhs_7_i_reg_576;
wire   [15:0] k_V_1_fu_307_p2;
reg   [15:0] k_V_1_reg_581;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln190_fu_313_p2;
reg   [0:0] icmp_ln190_reg_586;
reg   [0:0] icmp_ln190_reg_586_pp0_iter1_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter2_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter3_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter4_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter5_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter6_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter7_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter8_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter9_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter10_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter11_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter12_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter13_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter14_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter15_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter16_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter17_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter18_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter19_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter20_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter21_reg;
reg   [0:0] icmp_ln190_reg_586_pp0_iter22_reg;
wire   [7:0] x_V_fu_332_p2;
reg   [7:0] x_V_reg_590;
reg   [7:0] x_V_reg_590_pp0_iter20_reg;
reg   [7:0] x_V_reg_590_pp0_iter21_reg;
reg   [7:0] x_V_reg_590_pp0_iter22_reg;
wire   [7:0] y_V_fu_341_p2;
reg   [7:0] y_V_reg_596;
reg   [7:0] y_V_reg_596_pp0_iter20_reg;
reg   [7:0] y_V_reg_596_pp0_iter21_reg;
reg   [7:0] y_V_reg_596_pp0_iter22_reg;
wire   [17:0] ret_23_fu_388_p2;
wire   [17:0] ret_29_fu_402_p2;
wire   [17:0] ret_35_fu_416_p2;
reg   [15:0] i_V_5_reg_632;
reg    ap_enable_reg_pp0_iter23;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg   [15:0] ap_phi_mux_k_V_phi_fu_195_p4;
wire    ap_block_pp0_stage0;
reg   [15:0] ap_phi_mux_ref_tmp5722_0_phi_fu_207_p4;
reg   [15:0] ref_tmp5722_0_reg_203;
wire    ap_CS_fsm_state26;
wire   [63:0] zext_ln534_fu_441_p1;
wire   [0:0] tmp_fu_433_p3;
reg   [15:0] i_V_fu_62;
wire   [15:0] i_V_6_fu_449_p2;
wire   [8:0] ret_22_fu_226_p2;
wire   [8:0] ret_25_fu_244_p2;
wire   [8:0] ret_28_fu_258_p2;
wire   [8:0] ret_31_fu_272_p2;
wire   [8:0] ret_34_fu_282_p2;
wire   [8:0] ret_37_fu_292_p2;
wire   [7:0] grp_fu_318_p1;
wire   [7:0] grp_fu_323_p1;
wire   [7:0] grp_fu_318_p2;
wire   [7:0] ret_fu_328_p1;
wire   [7:0] grp_fu_323_p2;
wire   [7:0] trunc_ln208_fu_337_p1;
wire   [8:0] zext_ln1347_1_fu_346_p1;
wire  signed [8:0] ret_24_fu_349_p2;
wire  signed [8:0] ret_30_fu_358_p2;
wire  signed [8:0] ret_36_fu_367_p2;
wire   [8:0] zext_ln1347_fu_376_p1;
wire  signed [8:0] ret_21_fu_379_p2;
wire  signed [8:0] ret_23_fu_388_p1;
wire  signed [8:0] ret_27_fu_393_p2;
wire  signed [8:0] ret_29_fu_402_p1;
wire  signed [8:0] ret_33_fu_407_p2;
wire  signed [8:0] ret_35_fu_416_p1;
wire  signed [17:0] grp_fu_468_p3;
wire  signed [17:0] grp_fu_476_p3;
wire   [17:0] or_ln60_fu_424_p2;
wire  signed [17:0] grp_fu_460_p3;
wire   [17:0] or_ln60_1_fu_428_p2;
wire  signed [8:0] grp_fu_460_p1;
wire  signed [8:0] grp_fu_468_p1;
wire  signed [8:0] grp_fu_476_p1;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
end

rendering_urem_16ns_8ns_8_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
urem_16ns_8ns_8_20_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_k_V_phi_fu_195_p4),
    .din1(grp_fu_318_p1),
    .ce(1'b1),
    .dout(grp_fu_318_p2)
);

rendering_udiv_16ns_8ns_8_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
udiv_16ns_8ns_8_20_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_k_V_phi_fu_195_p4),
    .din1(grp_fu_323_p1),
    .ce(1'b1),
    .dout(grp_fu_323_p2)
);

rendering_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U23(
    .din0(ret_21_fu_379_p2),
    .din1(ret_23_fu_388_p1),
    .dout(ret_23_fu_388_p2)
);

rendering_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U24(
    .din0(ret_27_fu_393_p2),
    .din1(ret_29_fu_402_p1),
    .dout(ret_29_fu_402_p2)
);

rendering_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U25(
    .din0(ret_33_fu_407_p2),
    .din1(ret_35_fu_416_p1),
    .dout(ret_35_fu_416_p2)
);

rendering_mac_mulsub_9s_9s_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_mulsub_9s_9s_18ns_18_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_24_fu_349_p2),
    .din1(grp_fu_460_p1),
    .din2(ret_23_fu_388_p2),
    .ce(1'b1),
    .dout(grp_fu_460_p3)
);

rendering_mac_mulsub_9s_9s_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_mulsub_9s_9s_18ns_18_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_30_fu_358_p2),
    .din1(grp_fu_468_p1),
    .din2(ret_29_fu_402_p2),
    .ce(1'b1),
    .dout(grp_fu_468_p3)
);

rendering_mac_mulsub_9s_9s_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_mulsub_9s_9s_18ns_18_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_36_fu_367_p2),
    .din1(grp_fu_476_p1),
    .din2(ret_35_fu_416_p2),
    .ce(1'b1),
    .dout(grp_fu_476_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (p_read_11_read_fu_132_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (p_read_11_read_fu_132_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter23 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (p_read_11_read_fu_132_p2 == 1'd0))) begin
        i_V_fu_62 <= 16'd0;
    end else if (((tmp_fu_433_p3 == 1'd0) & (ap_enable_reg_pp0_iter23 == 1'b1) & (icmp_ln190_reg_586_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_V_fu_62 <= i_V_6_fu_449_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln190_reg_586 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_V_reg_191 <= k_V_1_reg_581;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (p_read_11_read_fu_132_p2 == 1'd0))) begin
        k_V_reg_191 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (p_read_11_read_fu_132_p2 == 1'd0))) begin
        ref_tmp5722_0_reg_203 <= i_V_5_reg_632;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (p_read_11_read_fu_132_p2 == 1'd1))) begin
        ref_tmp5722_0_reg_203 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_V_5_reg_632 <= i_V_fu_62;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln190_reg_586 <= icmp_ln190_fu_313_p2;
        icmp_ln190_reg_586_pp0_iter1_reg <= icmp_ln190_reg_586;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln190_reg_586_pp0_iter10_reg <= icmp_ln190_reg_586_pp0_iter9_reg;
        icmp_ln190_reg_586_pp0_iter11_reg <= icmp_ln190_reg_586_pp0_iter10_reg;
        icmp_ln190_reg_586_pp0_iter12_reg <= icmp_ln190_reg_586_pp0_iter11_reg;
        icmp_ln190_reg_586_pp0_iter13_reg <= icmp_ln190_reg_586_pp0_iter12_reg;
        icmp_ln190_reg_586_pp0_iter14_reg <= icmp_ln190_reg_586_pp0_iter13_reg;
        icmp_ln190_reg_586_pp0_iter15_reg <= icmp_ln190_reg_586_pp0_iter14_reg;
        icmp_ln190_reg_586_pp0_iter16_reg <= icmp_ln190_reg_586_pp0_iter15_reg;
        icmp_ln190_reg_586_pp0_iter17_reg <= icmp_ln190_reg_586_pp0_iter16_reg;
        icmp_ln190_reg_586_pp0_iter18_reg <= icmp_ln190_reg_586_pp0_iter17_reg;
        icmp_ln190_reg_586_pp0_iter19_reg <= icmp_ln190_reg_586_pp0_iter18_reg;
        icmp_ln190_reg_586_pp0_iter20_reg <= icmp_ln190_reg_586_pp0_iter19_reg;
        icmp_ln190_reg_586_pp0_iter21_reg <= icmp_ln190_reg_586_pp0_iter20_reg;
        icmp_ln190_reg_586_pp0_iter22_reg <= icmp_ln190_reg_586_pp0_iter21_reg;
        icmp_ln190_reg_586_pp0_iter2_reg <= icmp_ln190_reg_586_pp0_iter1_reg;
        icmp_ln190_reg_586_pp0_iter3_reg <= icmp_ln190_reg_586_pp0_iter2_reg;
        icmp_ln190_reg_586_pp0_iter4_reg <= icmp_ln190_reg_586_pp0_iter3_reg;
        icmp_ln190_reg_586_pp0_iter5_reg <= icmp_ln190_reg_586_pp0_iter4_reg;
        icmp_ln190_reg_586_pp0_iter6_reg <= icmp_ln190_reg_586_pp0_iter5_reg;
        icmp_ln190_reg_586_pp0_iter7_reg <= icmp_ln190_reg_586_pp0_iter6_reg;
        icmp_ln190_reg_586_pp0_iter8_reg <= icmp_ln190_reg_586_pp0_iter7_reg;
        icmp_ln190_reg_586_pp0_iter9_reg <= icmp_ln190_reg_586_pp0_iter8_reg;
        x_V_reg_590_pp0_iter20_reg <= x_V_reg_590;
        x_V_reg_590_pp0_iter21_reg <= x_V_reg_590_pp0_iter20_reg;
        x_V_reg_590_pp0_iter22_reg <= x_V_reg_590_pp0_iter21_reg;
        y_V_reg_596_pp0_iter20_reg <= y_V_reg_596;
        y_V_reg_596_pp0_iter21_reg <= y_V_reg_596_pp0_iter20_reg;
        y_V_reg_596_pp0_iter22_reg <= y_V_reg_596_pp0_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_V_1_reg_581 <= k_V_1_fu_307_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (p_read_11_read_fu_132_p2 == 1'd0))) begin
        max_min_4_load_cast_i_reg_515[7 : 0] <= max_min_4_load_cast_i_fu_214_p1[7 : 0];
        rhs_1_i_reg_546 <= rhs_1_i_fu_250_p1;
        rhs_3_i_reg_556 <= rhs_3_i_fu_264_p1;
        rhs_4_i_reg_566 <= rhs_4_i_fu_278_p1;
        rhs_6_i_reg_571 <= rhs_6_i_fu_288_p1;
        rhs_7_i_reg_576 <= rhs_7_i_fu_298_p1;
        rhs_i_reg_531 <= rhs_i_fu_232_p1;
        triangle_2d_same_x0_cast_i_reg_541[7 : 0] <= triangle_2d_same_x0_cast_i_fu_240_p1[7 : 0];
        triangle_2d_same_x1_cast_i_reg_536[7 : 0] <= triangle_2d_same_x1_cast_i_fu_236_p1[7 : 0];
        triangle_2d_same_x2_cast_i_reg_561[7 : 0] <= triangle_2d_same_x2_cast_i_fu_268_p1[7 : 0];
        triangle_2d_same_y0_cast_i_reg_526[7 : 0] <= triangle_2d_same_y0_cast_i_fu_222_p1[7 : 0];
        triangle_2d_same_y1_cast_i_reg_521[7 : 0] <= triangle_2d_same_y1_cast_i_fu_218_p1[7 : 0];
        triangle_2d_same_y2_cast_i_reg_551[7 : 0] <= triangle_2d_same_y2_cast_i_fu_254_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_reg_586_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_V_reg_590 <= x_V_fu_332_p2;
        y_V_reg_596 <= y_V_fu_341_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln190_fu_313_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln190_reg_586 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_k_V_phi_fu_195_p4 = k_V_1_reg_581;
    end else begin
        ap_phi_mux_k_V_phi_fu_195_p4 = k_V_reg_191;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) & (p_read_11_read_fu_132_p2 == 1'd0))) begin
        ap_phi_mux_ref_tmp5722_0_phi_fu_207_p4 = i_V_5_reg_632;
    end else begin
        ap_phi_mux_ref_tmp5722_0_phi_fu_207_p4 = ref_tmp5722_0_reg_203;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_color_V26_ce0 = 1'b1;
    end else begin
        fragment_color_V26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_433_p3 == 1'd0) & (ap_enable_reg_pp0_iter23 == 1'b1) & (icmp_ln190_reg_586_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_color_V26_we0 = 1'b1;
    end else begin
        fragment_color_V26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_x_V23_ce0 = 1'b1;
    end else begin
        fragment_x_V23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_433_p3 == 1'd0) & (ap_enable_reg_pp0_iter23 == 1'b1) & (icmp_ln190_reg_586_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_x_V23_we0 = 1'b1;
    end else begin
        fragment_x_V23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_y_V24_ce0 = 1'b1;
    end else begin
        fragment_y_V24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_433_p3 == 1'd0) & (ap_enable_reg_pp0_iter23 == 1'b1) & (icmp_ln190_reg_586_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_y_V24_we0 = 1'b1;
    end else begin
        fragment_y_V24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_z_V25_ce0 = 1'b1;
    end else begin
        fragment_z_V25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_433_p3 == 1'd0) & (ap_enable_reg_pp0_iter23 == 1'b1) & (icmp_ln190_reg_586_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fragment_z_V25_we0 = 1'b1;
    end else begin
        fragment_z_V25_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (p_read_11_read_fu_132_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1) & (p_read_11_read_fu_132_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return = ap_phi_mux_ref_tmp5722_0_phi_fu_207_p4;

assign fragment_color_V26_address0 = zext_ln534_fu_441_p1;

assign fragment_color_V26_d0 = 6'd36;

assign fragment_x_V23_address0 = zext_ln534_fu_441_p1;

assign fragment_x_V23_d0 = x_V_reg_590_pp0_iter22_reg;

assign fragment_y_V24_address0 = zext_ln534_fu_441_p1;

assign fragment_y_V24_d0 = y_V_reg_596_pp0_iter22_reg;

assign fragment_z_V25_address0 = zext_ln534_fu_441_p1;

assign fragment_z_V25_d0 = p_read12;

assign grp_fu_318_p1 = max_min_4_load_cast_i_reg_515;

assign grp_fu_323_p1 = max_min_4_load_cast_i_reg_515;

assign grp_fu_460_p1 = rhs_1_i_reg_546;

assign grp_fu_468_p1 = rhs_4_i_reg_566;

assign grp_fu_476_p1 = rhs_7_i_reg_576;

assign i_V_6_fu_449_p2 = (i_V_fu_62 + 16'd1);

assign icmp_ln190_fu_313_p2 = ((ap_phi_mux_k_V_phi_fu_195_p4 == p_read5) ? 1'b1 : 1'b0);

assign k_V_1_fu_307_p2 = (ap_phi_mux_k_V_phi_fu_195_p4 + 16'd1);

assign max_min_4_load_cast_i_fu_214_p1 = p_read4;

assign or_ln60_1_fu_428_p2 = (or_ln60_fu_424_p2 | grp_fu_460_p3);

assign or_ln60_fu_424_p2 = (grp_fu_476_p3 | grp_fu_468_p3);

assign p_read_11_read_fu_132_p2 = p_read1;

assign ret_21_fu_379_p2 = (zext_ln1347_fu_376_p1 - triangle_2d_same_x0_cast_i_reg_541);

assign ret_22_fu_226_p2 = (triangle_2d_same_y1_cast_i_fu_218_p1 - triangle_2d_same_y0_cast_i_fu_222_p1);

assign ret_23_fu_388_p1 = rhs_i_reg_531;

assign ret_24_fu_349_p2 = (zext_ln1347_1_fu_346_p1 - triangle_2d_same_y0_cast_i_reg_526);

assign ret_25_fu_244_p2 = (triangle_2d_same_x1_cast_i_fu_236_p1 - triangle_2d_same_x0_cast_i_fu_240_p1);

assign ret_27_fu_393_p2 = (zext_ln1347_fu_376_p1 - triangle_2d_same_x1_cast_i_reg_536);

assign ret_28_fu_258_p2 = (triangle_2d_same_y2_cast_i_fu_254_p1 - triangle_2d_same_y1_cast_i_fu_218_p1);

assign ret_29_fu_402_p1 = rhs_3_i_reg_556;

assign ret_30_fu_358_p2 = (zext_ln1347_1_fu_346_p1 - triangle_2d_same_y1_cast_i_reg_521);

assign ret_31_fu_272_p2 = (triangle_2d_same_x2_cast_i_fu_268_p1 - triangle_2d_same_x1_cast_i_fu_236_p1);

assign ret_33_fu_407_p2 = (zext_ln1347_fu_376_p1 - triangle_2d_same_x2_cast_i_reg_561);

assign ret_34_fu_282_p2 = (triangle_2d_same_y0_cast_i_fu_222_p1 - triangle_2d_same_y2_cast_i_fu_254_p1);

assign ret_35_fu_416_p1 = rhs_6_i_reg_571;

assign ret_36_fu_367_p2 = (zext_ln1347_1_fu_346_p1 - triangle_2d_same_y2_cast_i_reg_551);

assign ret_37_fu_292_p2 = (triangle_2d_same_x0_cast_i_fu_240_p1 - triangle_2d_same_x2_cast_i_fu_268_p1);

assign ret_fu_328_p1 = grp_fu_318_p2[7:0];

assign rhs_1_i_fu_250_p1 = $signed(ret_25_fu_244_p2);

assign rhs_3_i_fu_264_p1 = $signed(ret_28_fu_258_p2);

assign rhs_4_i_fu_278_p1 = $signed(ret_31_fu_272_p2);

assign rhs_6_i_fu_288_p1 = $signed(ret_34_fu_282_p2);

assign rhs_7_i_fu_298_p1 = $signed(ret_37_fu_292_p2);

assign rhs_i_fu_232_p1 = $signed(ret_22_fu_226_p2);

assign tmp_fu_433_p3 = or_ln60_1_fu_428_p2[32'd17];

assign triangle_2d_same_x0_cast_i_fu_240_p1 = p_read6;

assign triangle_2d_same_x1_cast_i_fu_236_p1 = p_read8;

assign triangle_2d_same_x2_cast_i_fu_268_p1 = p_read10;

assign triangle_2d_same_y0_cast_i_fu_222_p1 = p_read7;

assign triangle_2d_same_y1_cast_i_fu_218_p1 = p_read9;

assign triangle_2d_same_y2_cast_i_fu_254_p1 = p_read11;

assign trunc_ln208_fu_337_p1 = grp_fu_323_p2[7:0];

assign x_V_fu_332_p2 = (ret_fu_328_p1 + p_read2);

assign y_V_fu_341_p2 = (trunc_ln208_fu_337_p1 + p_read3);

assign zext_ln1347_1_fu_346_p1 = y_V_reg_596;

assign zext_ln1347_fu_376_p1 = x_V_reg_590_pp0_iter21_reg;

assign zext_ln534_fu_441_p1 = i_V_fu_62;

always @ (posedge ap_clk) begin
    max_min_4_load_cast_i_reg_515[15:8] <= 8'b00000000;
    triangle_2d_same_y1_cast_i_reg_521[8] <= 1'b0;
    triangle_2d_same_y0_cast_i_reg_526[8] <= 1'b0;
    triangle_2d_same_x1_cast_i_reg_536[8] <= 1'b0;
    triangle_2d_same_x0_cast_i_reg_541[8] <= 1'b0;
    triangle_2d_same_y2_cast_i_reg_551[8] <= 1'b0;
    triangle_2d_same_x2_cast_i_reg_561[8] <= 1'b0;
end

endmodule //rendering_rasterization2
