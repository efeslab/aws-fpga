#### Prerequisites
# Define APP_AGFI_ID
include ${CL_FPGARR_ROOT}/software/runtime/libfpgarr/Makefile.inc
#### config
NUM_TEST?=10
AUTOMATE_TEST_MOUNTPOINT?=/mnt
AUTOMATE_TEST_OUT_DIR?=$(AUTOMATE_TEST_MOUNTPOINT)/output
RR_TOOL_DIR=${CL_FPGARR_ROOT}/software/runtime/rr_tool
RR_TOOL=${RR_TOOL_DIR}/rr_tool.opt.elf

#### Helper Shell functions
RUN_RR = sudo RR_MODE=$(1) $(2)
RR_NONE = $(call RUN_RR,none,$(1))
RR_REPLAY = $(call RUN_RR,replay,$(1))
RR_RECORDV = $(call RUN_RR,recordv,$(1))
RR_REPLAYV = $(call RUN_RR,replayv,$(1))
LOAD_AFI_TPL = sudo fpga-load-local-image -S 0 -I $(1)
CLEAR_FPGA = sudo fpga-clear-local-image -S 0
CLR_LOAD_AFI_TPL = $(CLEAR_FPGA); sudo fpga-load-local-image -S 0 -I $(1)
LOAD_AFI = $(call LOAD_AFI_TPL, $(APP_AGFI_ID))

#### Helper Makefile functions
COMMON_TEST_DEPS = $(AUTOMATE_TEST_OUT_DIR) $(RR_TOOL)
define newline


endef
# singlelineish
# assumption:
# 1. each line has not been concatenated yet (via \) but all shell commands end with a semicolon
# 2. '@' is only used to suppress command display. In other words, no usage of '$@'
# args:
# $1 is the original (canned) recipe
define singlelineish =
$(subst @,,$(subst ${newline},\${newline},$(1)))
endef

# NOTE: every target calls this recipe should depend on $(AUTOMATE_TEST_OUT_DIR)
# $1 is $(TESTID)
define run_all_rr_mode =
    $(eval TESTPREFIX=$(AUTOMATE_TEST_OUT_DIR)/$$(1))
    $(eval ENVPREFIX=RR_RECORD_PATH=$$(TESTPREFIX)_record.dump RR_VALIDATE_RECORD_PATH=$$(TESTPREFIX)_validate_record.dump RR_VALIDATE_REPLAY_PATH=$$(TESTPREFIX)_validate_replay.dump)
    @echo ">>> Flashing and running [[$(1)]] without record/replay";
    @echo ">>> Tracking progress: tail -f $(TESTPREFIX)_none.log";
    $(LOAD_AFI) > /dev/null;
    $(call RR_NONE, $(ENVPREFIX) $(CMDLINE)) > $(TESTPREFIX)_none.log 2>&1;
    @echo ">>> Flashing and running [[$(1)]] with record + validation enabled";
    @echo ">>> Tracking progress: tail -f $(TESTPREFIX)_recordv.log";
    $(LOAD_AFI) > /dev/null;
    $(call RR_RECORDV, $(ENVPREFIX) $(CMDLINE)) > $(TESTPREFIX)_recordv.log 2>&1;
    @echo ">>> Flashing and running [[$(1)]] with replay + validation enabled";
    @echo ">>> Tracking progress: tail -f $(TESTPREFIX)_replayv.log";
    $(LOAD_AFI) > /dev/null;
    $(call RR_REPLAYV, $(ENVPREFIX) $(CMDLINE)) > $(TESTPREFIX)_replayv.log 2>&1;
    @echo ">>> Comparing the validation trace between record and replay";
    $(RR_TOOL) -v --hbver2 -c $(TESTPREFIX)_validate_record.dump -c $(TESTPREFIX)_validate_replay.dump > $(TESTPREFIX)_diff.txt 2>&1;
    @echo ">>> Check HB violations: $(TESTPREFIX)_diff.txt";
endef
