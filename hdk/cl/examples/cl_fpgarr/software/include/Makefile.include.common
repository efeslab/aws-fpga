#### Prerequisites
# Define APP_AGFI_ID
include ${CL_FPGARR_ROOT}/software/runtime/libfpgarr/Makefile.inc
#### config
NUM_TEST?=10
AUTOMATE_TEST_MOUNTPOINT?=/mnt
AUTOMATE_TEST_OUT_DIR?=$(AUTOMATE_TEST_MOUNTPOINT)/output
RR_TOOL=${CL_FPGARR_ROOT}/software/runtime/rr_tool/rr_tool.opt.elf

#### Helper Shell functions
RUN_RR = sudo RR_MODE=$(1) $(2)
RR_NONE = $(call RUN_RR,none,$(1))
RR_REPLAY = $(call RUN_RR,replay,$(1))
RR_RECORDV = $(call RUN_RR,recordv,$(1))
RR_REPLAYV = $(call RUN_RR,replayv,$(1))
LOAD_AFI_TPL = sudo fpga-load-local-image -S 0 -I $(1)
CLEAR_FPGA = sudo fpga-clear-local-image -S 0
CLR_LOAD_AFI_TPL = $(CLEAR_FPGA); sudo fpga-load-local-image -S 0 -I $(1)
LOAD_AFI = $(call LOAD_AFI_TPL, $(APP_AGFI_ID))

#### Helper Makefile functions
define newline


endef
# singlelineish
# assumption:
# 1. each line has not been concatenated yet (via \)
# 2. '@' is only used to suppress command display. In other words, no usage of '$@'
# args:
# $1 is the original (canned) recipe
define singlelineish =
$(subst @,,$(subst ${newline},;\${newline},$(1)))
endef

# NOTE: every target calls this recipe should depend on $(AUTOMATE_TEST_OUT_DIR)
# $1 is $(TESTID)
define run_all_rr_mode =
    $(LOAD_AFI) > /dev/null
    $(call RR_NONE, $(CMDLINE)) > $(AUTOMATE_TEST_OUT_DIR)/$(1)_none.log 2>&1
    $(LOAD_AFI) > /dev/null
    $(call RR_RECORDV, $(CMDLINE)) 2>&1 | tee $(AUTOMATE_TEST_OUT_DIR)/$(1)_recordv.log
    $(LOAD_AFI) > /dev/null
    $(call RR_REPLAYV, $(CMDLINE)) 2>&1 | tee $(AUTOMATE_TEST_OUT_DIR)/$(1)_replayv.log
    $(RR_TOOL) -v --hbver2 -c validate_record.dump -c validate_replay.dump > $(AUTOMATE_TEST_OUT_DIR)/$(1)_diff.txt 2>&1
    @echo "Experiments are done, saving trace files"
    @for dump in record.dump validate_record.dump validate_replay.dump; do     \
      mv $${dump} $(AUTOMATE_TEST_OUT_DIR)/$(1)_$${dump};                      \
    done
endef
